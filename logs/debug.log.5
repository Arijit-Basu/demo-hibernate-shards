[DEBUG] 2015-08-06 15:06:18,790(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:18,791(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:18,791(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:18,791(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:18,791(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:18,791(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:18,792(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18f6235  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c282a1  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:18,793(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:18,794(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17a8a02  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12b3d53  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@982589  
[DEBUG] 2015-08-06 15:06:18,795(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1b3f829  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:18,796(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@121ab80  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@198a455  
[DEBUG] 2015-08-06 15:06:18,797(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@12b7eea  
[DEBUG] 2015-08-06 15:06:18,798(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:18,798(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:18,798(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:06:18,798(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:06:18,798(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:06:18,798(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:06:18,799(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:06:18,799(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:06:18,799(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:06:18,799(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11e0c13  
[DEBUG] 2015-08-06 15:06:18,799(318) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:06:18,800(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:06:18,801(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:18,801(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:06:18,801(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:06:18,801(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:06:18,801(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:06:18,801(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:06:18,801(320) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:06:18,801(320) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:06:18,806(325) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:06:18,806(325) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:06:18,807(326) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:06:18,808(327) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:06:18,812(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:06:18,812(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:06:18,812(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:06:18,812(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:06:18,812(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:06:18,813(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:18,813(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:06:18,813(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:06:18,813(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:06:18,813(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:06:18,813(332) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:06:18,814(333) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:06:18,819(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:18,819(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:18,820(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:18,821(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:18,821(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:18,821(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:18,821(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:18,821(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:18,821(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:18,822(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:18,823(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:18,823(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:18,823(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:18,823(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:18,823(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:18,823(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139eeda  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139eeda  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:18,824(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:18,825(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:18,826(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18f6235  
[DEBUG] 2015-08-06 15:06:18,826(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:18,826(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:18,826(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:18,826(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c282a1  
[DEBUG] 2015-08-06 15:06:18,826(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:18,827(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17a8a02  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12b3d53  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:18,828(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@982589  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:18,829(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1b3f829  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@121ab80  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:18,830(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@198a455  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@12b7eea  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:06:18,831(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:06:18,832(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:06:18,832(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:06:18,832(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:06:18,832(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:06:18,832(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:06:18,832(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19da4fc  
[DEBUG] 2015-08-06 15:06:18,833(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:06:18,833(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:06:18,833(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:18,833(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:18,833(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:18,833(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:06:18,834(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:06:18,835(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:06:18,835(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:06:18,835(354) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:06:18,835(354) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:06:18,837(356) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:06:18,838(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:06:18,838(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:06:18,838(357) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:06:18,842(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:06:18,843(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:06:18,844(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:06:18,844(363) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:06:18,844(363) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:06:18,866(385) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:06:18,917(436) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:18,917(436) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:06:18,923(442) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:18,954(473) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:06:18,956(475) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:06:18,964(483) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:06:18,969(488) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:06:19,004(523) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:19,009(528) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:06:19,011(530) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:06:19,013(532) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:06:19,018(537) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:19,019(538) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:06:19,019(538) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:06:19,019(538) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:06:19,019(538) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:19,020(539) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:06:19,020(539) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:06:19,020(539) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:06:19,020(539) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:19,021(540) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:06:19,021(540) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:06:19,021(540) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:06:19,021(540) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:19,021(540) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:06:19,021(540) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:06:19,022(541) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:06:19,023(542) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:06:19,024(543) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:06:19,024(543) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:06:19,024(543) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:06:19,024(543) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:06:19,025(544) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:19,026(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,026(545) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,026(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:19,026(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:19,026(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:19,026(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:06:19,030(549) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:06:19,055(574) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:06:19,065(584) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:19,066(585) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:19,069(588) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:19,074(593) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:19,140(659) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:06:19,140(659) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:19,141(660) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:19,141(660) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:19,141(660) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:19,146(665) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:06:19,146(665) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:06:19,152(671) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:06:19,152(671) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:06:19,152(671) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:06:19,160(679) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:06:19,160(679) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:06:19,160(679) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:06:19,413(932) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:06:19,432(951) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:06:19,443(962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:06:19,443(962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:06:19,444(963) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:06:19,446(965) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:06:19,446(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:06:19,446(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:06:19,446(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:06:19,446(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:06:19,451(970) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:06:19,451(970) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:06:19,451(970) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:06:19,452(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:06:19,452(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:06:19,452(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:06:19,452(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:06:19,452(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:06:19,453(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:06:19,453(972) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:19,454(973) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:19,454(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:06:19,455(974) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:06:19,455(974) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:06:19,455(974) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:06:19,455(974) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:06:19,456(975) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:06:19,456(975) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:06:19,459(978) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:06:19,460(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:06:19,460(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:06:19,460(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:06:19,460(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:06:19,460(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:06:19,475(994) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:06:19,480(999) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:06:19,482(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:19,482(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:19,482(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:19,482(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:06:19,483(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:06:19,483(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:06:19,483(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:19,483(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:19,483(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:19,484(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:19,485(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:19,485(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:19,485(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:19,485(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:19,485(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:19,485(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:19,486(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139eeda  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139eeda  
[DEBUG] 2015-08-06 15:06:19,487(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:19,488(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18f6235  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:19,489(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c282a1  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:19,490(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17a8a02  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12b3d53  
[DEBUG] 2015-08-06 15:06:19,491(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@982589  
[DEBUG] 2015-08-06 15:06:19,492(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:19,493(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:19,493(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:19,493(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:19,493(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:19,493(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:19,493(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1b3f829  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@121ab80  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,494(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@198a455  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@12b7eea  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:06:19,495(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164b9b6  
[DEBUG] 2015-08-06 15:06:19,496(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@198a455  
[DEBUG] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:06:19,497(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@121ab80  
[DEBUG] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:19,498(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:06:19,499(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,499(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:06:19,499(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,501(1020) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:06:19,501(1020) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:06:19,512(1031) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:06:19,516(1035) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:06:19,647(1166) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:19,647(1166) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:06:19,648(1167) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:06:19,648(1167) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:19,648(1167) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:06:19,648(1167) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:06:19,670(1189) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,671(1190) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,671(1190) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,671(1190) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,672(1191) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,672(1191) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:06:19,672(1191) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,673(1192) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,673(1192) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,673(1192) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,680(1199) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,680(1199) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,699(1218) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:06:19,700(1219) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: a9a12d37-3d98-469b-895d-b311263a527f (unnamed)  
[INFO ] 2015-08-06 15:06:19,700(1219) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:06:19,701(1220) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:06:19,708(1227) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:06:19,708(1227) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:06:19,710(1229) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:06:19,710(1229) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:19,710(1229) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:06:19,710(1229) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:19,710(1229) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,711(1230) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,711(1230) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:19,711(1230) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:19,711(1230) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:19,711(1230) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:06:19,712(1231) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:19,712(1231) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:19,712(1231) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:19,713(1232) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:06:19,741(1260) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:06:19,742(1261) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:06:19,742(1261) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:06:19,742(1261) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:06:19,742(1261) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:06:19,742(1261) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:06:19,744(1263) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:06:19,745(1264) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:06:19,745(1264) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:19,746(1265) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:06:19,747(1266) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:19,747(1266) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:19,747(1266) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:19,748(1267) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:19,752(1271) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:06:19,753(1272) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:19,753(1272) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:19,753(1272) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:19,757(1276) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:19,759(1278) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:06:19,759(1278) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:06:19,759(1278) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:06:19,759(1278) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:06:19,759(1278) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:06:19,760(1279) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:06:19,760(1279) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:06:19,760(1279) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:06:19,778(1297) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:06:19,778(1297) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:06:19,779(1298) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:19,780(1299) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:06:19,781(1300) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:06:19,785(1304) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:06:19,785(1304) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:06:19,785(1304) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@d61aef after already scoped org.hibernate.impl.SessionFactoryImpl@198c6f3  
[DEBUG] 2015-08-06 15:06:19,785(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:19,785(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:19,785(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:19,786(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ab28fe  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@341960  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:19,787(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@b64435  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@14c1103  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86fe26  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@139eeda  
[DEBUG] 2015-08-06 15:06:19,788(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@139eeda  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@bfea1d  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@b2002f  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c7b00c  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b9ce4b  
[DEBUG] 2015-08-06 15:06:19,789(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5329c5  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@544ec1  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18f6235  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:19,790(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@641e9a  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c282a1  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d80e6d  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dfc547  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:19,791(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@111a3a4  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12a0f6c  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13ad085  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17a8a02  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@12b3d53  
[DEBUG] 2015-08-06 15:06:19,792(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@3570b0  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12a3722  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@982589  
[DEBUG] 2015-08-06 15:06:19,793(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@1c0e45a  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e1d5ea  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1b3f829  
[DEBUG] 2015-08-06 15:06:19,794(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@121ab80  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:19,795(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@198a455  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@12b7eea  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b8f864  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1238785  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:06:19,796(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:06:19,797(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:06:19,797(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:06:19,797(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:06:19,797(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:06:19,797(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:06:19,797(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@198a455  
[DEBUG] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:19,798(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@121ab80  
[DEBUG] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,799(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:06:19,800(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@12a3793  
[DEBUG] 2015-08-06 15:06:19,800(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:06:19,800(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:06:19,801(1320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:06:19,803(1322) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:19,803(1322) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:06:19,804(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:06:19,804(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:19,804(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:06:19,804(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:06:19,804(1323) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,805(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,805(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,805(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,805(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,806(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:06:19,806(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,806(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:19,807(1326) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,807(1326) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,807(1326) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,807(1326) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:19,808(1327) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 7a045da7-b03d-46f6-9839-36915272e608 (unnamed)  
[INFO ] 2015-08-06 15:06:19,808(1327) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:06:19,808(1327) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:06:19,808(1327) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:06:19,808(1327) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:06:19,809(1328) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:19,809(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:06:19,810(1329) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:19,810(1329) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:19,810(1329) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:19,811(1330) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:06:19,823(1342) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:06:19,823(1342) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:06:19,823(1342) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:06:19,823(1342) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:06:19,823(1342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:06:19,824(1343) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:06:19,825(1344) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:06:19,825(1344) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:06:19,851(1370) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:19,852(1371) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:19,894(1413) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388447798  
[DEBUG] 2015-08-06 15:06:19,894(1413) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:06:19,897(1416) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:06:19,897(1416) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:06:19,898(1417) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:06:19,907(1426) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419085931347968, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:19,920(1439) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:19,921(1440) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:19,921(1440) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419085932527617, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:19,921(1440) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:19,921(1440) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:19,921(1440) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419085932527618, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:19,922(1441) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:19,922(1441) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:19,922(1441) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419085932593155, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:19,922(1441) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:06:19,922(1441) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:06:19,923(1442) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:06:19,923(1442) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:06:19,925(1444) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:06:19,925(1444) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:06:19,926(1445) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:06:19,926(1445) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419085931347968, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:06:19,926(1445) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419085932527617, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:06:19,927(1446) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419085932593155, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:06:19,927(1446) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419085932527618, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:06:19,944(1463) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:19,944(1463) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:19,960(1479) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:06:19,960(1479) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:19,960(1479) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:06:19,960(1479) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:19,961(1480) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:06:19,961(1480) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:19,961(1480) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:06:19,962(1481) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:19,964(1483) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:225) –> [main] Could not execute JDBC batch update [insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)]  
java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:110)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:83)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:32)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[WARN ] 2015-08-06 15:06:19,965(1484) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:233) –> [main] SQL Error: 1264, SQLState: 22001  
[ERROR] 2015-08-06 15:06:19,965(1484) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:234) –> [main] Data truncation: Out of range value for column 'ID' at row 1  
[WARN ] 2015-08-06 15:06:19,965(1484) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:127) –> [main] exception commiting underlying transaction  
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:102)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:275)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:110)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:83)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:32)
Caused by: java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	... 11 more
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[DEBUG] 2015-08-06 15:06:19,966(1485) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:06:19,968(1487) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:06:19,968(1487) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:06:19,970(1489) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:06:19,971(1490) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:06:39,593(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,597(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,599(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,600(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:06:39,601(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:06:39,602(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:06:39,604(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,605(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,605(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,606(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,606(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,606(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,613(20) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,613(20) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,613(20) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,617(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,621(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,621(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,624(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,625(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,625(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,628(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,628(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,628(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,631(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,631(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,632(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,634(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:39,634(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:39,637(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:39,637(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:39,639(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:39,639(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:39,641(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:39,641(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:39,645(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:39,645(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:39,649(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:39,650(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:39,653(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,653(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,653(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,655(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:06:39,657(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,657(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,657(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,658(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:06:39,660(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:39,660(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:39,661(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:39,661(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:39,663(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:39,663(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:39,664(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:39,664(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:39,667(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:39,667(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:39,667(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:06:39,668(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:06:39,670(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,670(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,670(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,672(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,672(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,673(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,674(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:06:39,676(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,676(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,676(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,678(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,678(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,678(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,679(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:06:39,686(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:39,686(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:39,687(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:39,688(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:39,693(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:39,693(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:39,693(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:39,694(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:39,695(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:39,696(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:06:39,701(108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:39,701(108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:39,702(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 15:06:39,702(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:06:39,702(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:06:39,702(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:06:39,702(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:06:39,702(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:06:39,703(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:06:39,703(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:06:39,747(154) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:06:39,747(154) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:06:39,755(162) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:06:39,756(163) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:06:39,760(167) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:06:39,762(169) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:06:39,825(232) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:06:39,826(233) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:06:39,827(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:39,827(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:39,829(236) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:39,830(237) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:06:39,831(238) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:06:39,832(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:06:39,833(240) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:06:39,833(240) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:39,834(241) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:06:39,835(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:06:39,835(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:06:39,836(243) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:06:39,837(244) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:06:39,839(246) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:06:39,839(246) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:06:39,892(299) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:06:39,893(300) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:06:39,893(300) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:06:39,893(300) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:06:39,919(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:06:39,919(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:06:39,919(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:06:39,919(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:06:39,919(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:06:39,920(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:39,920(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:06:39,920(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:06:39,920(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:06:39,920(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:06:39,921(328) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:06:39,921(328) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:06:39,926(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,926(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,926(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,926(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:06:39,926(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,927(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,928(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,928(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,928(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,928(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,928(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,928(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,929(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,929(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,929(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,929(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,929(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,929(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,930(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,930(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,930(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:39,930(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:39,930(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:39,930(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:39,931(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:39,931(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:39,931(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:39,931(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:39,931(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:39,931(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:39,932(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:39,932(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:39,932(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,932(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,933(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,933(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:06:39,933(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,933(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,933(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,933(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:06:39,934(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:39,934(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:39,934(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:39,934(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:39,934(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:39,934(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:06:39,935(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,936(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:39,937(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:39,938(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e0f2f6  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:06:39,939(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:06:39,940(347) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:06:39,940(347) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:06:39,940(347) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:39,940(347) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:39,940(347) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:06:39,941(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:06:39,942(349) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:06:39,942(349) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:06:39,947(354) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:06:39,948(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:06:39,948(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:06:39,948(355) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:06:39,953(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:06:39,953(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:06:39,953(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:06:39,953(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:06:39,954(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:06:39,954(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:39,954(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:06:39,954(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:06:39,954(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:06:39,954(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:06:39,955(362) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:06:39,955(362) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:06:39,956(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,956(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,956(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:39,956(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:06:39,956(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:06:39,956(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:39,957(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,958(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:39,959(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,960(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:39,961(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:39,962(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:39,962(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:39,962(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:39,962(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:39,962(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:39,962(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,963(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,964(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:39,965(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:39,966(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@814013  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:06:39,967(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:06:39,968(375) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:06:39,968(375) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:06:39,968(375) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:39,968(375) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:06:39,968(375) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:39,968(375) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:06:39,969(376) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:06:39,970(377) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:06:39,970(377) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:06:39,970(377) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:06:39,970(377) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:06:39,972(379) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:06:39,972(379) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:06:39,972(379) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:06:39,972(379) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:06:39,975(382) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:06:39,975(382) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:06:39,975(382) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:06:39,976(383) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:06:39,995(402) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:06:40,041(448) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:40,041(448) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:06:40,046(453) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:40,078(485) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:06:40,081(488) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:06:40,090(497) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:06:40,094(501) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:06:40,128(535) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:40,134(541) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:06:40,136(543) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:06:40,138(545) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:06:40,143(550) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:40,144(551) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:06:40,144(551) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:06:40,144(551) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:06:40,145(552) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:40,145(552) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:06:40,145(552) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:06:40,145(552) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:06:40,145(552) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:40,146(553) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:06:40,146(553) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:06:40,146(553) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:06:40,146(553) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:06:40,147(554) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:06:40,147(554) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:06:40,147(554) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:06:40,150(557) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:06:40,150(557) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:06:40,150(557) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:06:40,150(557) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:06:40,150(557) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:06:40,151(558) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:40,153(560) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:40,153(560) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:40,153(560) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:40,153(560) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:40,154(561) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:40,154(561) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:06:40,158(565) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:06:40,183(590) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:06:40,196(603) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:40,197(604) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:40,200(607) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:40,205(612) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:40,277(684) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:06:40,278(685) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:40,278(685) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:40,278(685) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:40,279(686) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:40,283(690) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:06:40,283(690) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:06:40,290(697) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:06:40,290(697) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:06:40,290(697) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:06:40,297(704) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:06:40,297(704) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:06:40,297(704) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:06:40,567(974) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:06:40,596(1003) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:06:40,611(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:06:40,611(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:06:40,613(1020) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:06:40,615(1022) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:06:40,615(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:06:40,615(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:06:40,615(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:06:40,616(1023) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:06:40,616(1023) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:06:40,617(1024) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:06:40,617(1024) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:06:40,617(1024) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:06:40,624(1031) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:06:40,624(1031) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:06:40,624(1031) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:06:40,624(1031) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:06:40,624(1031) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:06:40,624(1031) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:40,627(1034) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:40,627(1034) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:06:40,627(1034) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:06:40,627(1034) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:06:40,628(1035) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:06:40,628(1035) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:06:40,629(1036) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:06:40,629(1036) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:06:40,634(1041) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:06:40,636(1043) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:06:40,636(1043) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:06:40,636(1043) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:06:40,636(1043) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:06:40,636(1043) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:06:40,656(1063) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:06:40,662(1069) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:06:40,664(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:40,664(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:40,664(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:40,664(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:06:40,664(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:06:40,665(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:06:40,665(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:40,665(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:40,665(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:40,665(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:40,665(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:40,666(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:40,666(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:40,666(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:40,666(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:40,666(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:40,666(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:40,667(1074) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:40,667(1074) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:40,667(1074) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:40,667(1074) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:40,667(1074) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:40,667(1074) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:40,668(1075) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:40,669(1076) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:40,670(1077) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:40,670(1077) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:40,670(1077) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:40,670(1077) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:40,671(1078) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:06:40,671(1078) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:40,671(1078) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:40,671(1078) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:40,671(1078) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:06:40,671(1078) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:40,672(1079) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:40,673(1080) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:40,674(1081) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:40,675(1082) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:06:40,675(1082) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:40,675(1082) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:40,675(1082) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:40,675(1082) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:40,675(1082) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:40,676(1083) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:40,676(1083) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:40,676(1083) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:40,676(1083) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:40,676(1083) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:06:40,676(1083) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:40,677(1084) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:40,677(1084) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b6ef8  
[DEBUG] 2015-08-06 15:06:40,677(1084) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 15:06:40,677(1084) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:06:40,677(1084) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:06:40,677(1084) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10e434d  
[INFO ] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:40,678(1085) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@f864fe  
[INFO ] 2015-08-06 15:06:40,679(1086) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:40,679(1086) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f864fe  
[INFO ] 2015-08-06 15:06:40,679(1086) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:40,679(1086) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@163956  
[INFO ] 2015-08-06 15:06:40,679(1086) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:40,679(1086) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@163956  
[INFO ] 2015-08-06 15:06:40,680(1087) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:40,680(1087) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae9aaa  
[INFO ] 2015-08-06 15:06:40,680(1087) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:40,680(1087) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:06:40,680(1087) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:40,680(1087) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2c17f7  
[INFO ] 2015-08-06 15:06:40,681(1088) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:40,683(1090) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:06:40,683(1090) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:06:40,698(1105) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:06:40,704(1111) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:06:40,847(1254) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:40,847(1254) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:06:40,847(1254) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:06:40,847(1254) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:40,847(1254) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:06:40,847(1254) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:06:40,871(1278) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:40,872(1279) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:40,872(1279) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:40,872(1279) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:40,872(1279) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:40,873(1280) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:06:40,873(1280) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:40,873(1280) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:40,873(1280) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:40,874(1281) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:40,879(1286) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:40,880(1287) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:40,899(1306) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:06:40,900(1307) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: bdf2b69f-57f9-45ae-9e55-d48282f5c5b3 (unnamed)  
[INFO ] 2015-08-06 15:06:40,900(1307) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:06:40,900(1307) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:06:40,907(1314) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:06:40,907(1314) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:06:40,908(1315) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:40,909(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:40,910(1317) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:06:40,910(1317) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:40,910(1317) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:40,911(1318) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:40,911(1318) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:06:40,919(1326) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 15:06:40,919(1326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:06:40,920(1327) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 15:06:40,921(1328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:06:40,921(1328) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) –> [main] create table anno_contact (ID decimal(45) not null not null, EMAIL varchar(255), LOGINid varchar(255), NAME varchar(255), PASSWORD varchar(255), primary key (ID))  
[INFO ] 2015-08-06 15:06:41,228(1635) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:06:41,230(1637) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:06:41,230(1637) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:06:41,231(1638) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:06:41,231(1638) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:41,231(1638) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:06:41,232(1639) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:41,232(1639) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:41,232(1639) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:41,232(1639) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:41,232(1639) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:41,232(1639) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:41,233(1640) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:06:41,233(1640) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:41,233(1640) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:41,234(1641) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:41,235(1642) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:41,242(1649) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:06:41,242(1649) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:41,242(1649) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:41,242(1649) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:41,244(1651) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:06:41,246(1653) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:06:41,246(1653) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:06:41,246(1653) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:06:41,246(1653) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:06:41,246(1653) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:06:41,247(1654) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:06:41,247(1654) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:06:41,247(1654) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:06:41,272(1679) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:06:41,273(1680) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:06:41,273(1680) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:06:41,273(1680) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:06:41,273(1680) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:06:41,273(1680) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:06:41,274(1681) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:06:41,275(1682) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:06:41,276(1683) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:06:41,276(1683) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:06:41,276(1683) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:06:41,276(1683) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:06:41,279(1686) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:06:41,279(1686) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:06:41,280(1687) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@dac21 after already scoped org.hibernate.impl.SessionFactoryImpl@8a52b6  
[DEBUG] 2015-08-06 15:06:41,280(1687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:41,280(1687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:41,280(1687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:06:41,280(1687) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:41,281(1688) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:06:41,282(1689) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:06:41,283(1690) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:41,284(1691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:06:41,284(1691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:41,284(1691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:06:41,284(1691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:41,284(1691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:06:41,284(1691) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:41,285(1692) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:41,285(1692) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:06:41,285(1692) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:06:41,285(1692) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:41,286(1693) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:41,287(1694) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:06:41,287(1694) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:06:41,287(1694) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:41,287(1694) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:06:41,288(1695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:41,288(1695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:06:41,288(1695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:41,288(1695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:06:41,288(1695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:41,288(1695) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:41,289(1696) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:06:41,290(1697) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:41,290(1697) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:41,290(1697) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:41,291(1698) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:41,292(1699) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:41,293(1700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:41,293(1700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:41,293(1700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:41,293(1700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:06:41,293(1700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:41,293(1700) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:06:41,294(1701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12d8ecd  
[DEBUG] 2015-08-06 15:06:41,294(1701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1fa5e5e  
[DEBUG] 2015-08-06 15:06:41,294(1701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@497062  
[DEBUG] 2015-08-06 15:06:41,294(1701) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57807a  
[DEBUG] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b3cac9  
[DEBUG] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c67248  
[DEBUG] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@178dc08  
[DEBUG] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b5c22f  
[DEBUG] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10e434d  
[INFO ] 2015-08-06 15:06:41,295(1702) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@f864fe  
[INFO ] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f864fe  
[INFO ] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@163956  
[INFO ] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:41,296(1703) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@163956  
[INFO ] 2015-08-06 15:06:41,297(1704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:06:41,297(1704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae9aaa  
[INFO ] 2015-08-06 15:06:41,297(1704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:06:41,297(1704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:06:41,297(1704) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:06:41,298(1705) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2c17f7  
[INFO ] 2015-08-06 15:06:41,298(1705) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:06:41,298(1705) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:06:41,298(1705) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:06:41,299(1706) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:06:41,301(1708) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:41,301(1708) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:06:41,301(1708) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:06:41,301(1708) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:41,301(1708) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:06:41,301(1708) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:06:41,302(1709) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:41,302(1709) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:41,303(1710) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:41,303(1710) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:41,304(1711) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:41,304(1711) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:06:41,304(1711) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:41,305(1712) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:06:41,305(1712) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:41,305(1712) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:41,305(1712) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:41,306(1713) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:41,306(1713) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 9980fc4e-32d7-4a82-88c7-fd52e5ae3077 (unnamed)  
[INFO ] 2015-08-06 15:06:41,306(1713) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:06:41,306(1713) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:06:41,306(1713) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:06:41,306(1713) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:06:41,307(1714) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:06:41,308(1715) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:06:41,309(1716) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:06:41,309(1716) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:06:41,310(1717) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:06:41,310(1717) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:06:41,311(1718) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:06:41,316(1723) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 15:06:41,316(1723) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:06:41,318(1725) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 15:06:41,318(1725) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:06:41,318(1725) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) –> [main] create table anno_contact (ID decimal(45) not null not null, EMAIL varchar(255), LOGINid varchar(255), NAME varchar(255), PASSWORD varchar(255), primary key (ID))  
[INFO ] 2015-08-06 15:06:41,650(2057) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:06:41,652(2059) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:06:41,652(2059) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:06:41,696(2103) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:41,697(2104) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:41,738(2145) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448016  
[DEBUG] 2015-08-06 15:06:41,738(2145) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:06:41,740(2147) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:06:41,740(2147) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:06:41,740(2147) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:06:41,748(2155) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419087362654208, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:41,762(2169) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:41,763(2170) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:41,763(2170) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419087363964929, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:41,763(2170) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:41,763(2170) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:41,763(2170) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419087363964930, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:41,764(2171) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:06:41,764(2171) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:06:41,764(2171) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419087364030467, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:06:41,764(2171) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:06:41,764(2171) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:06:41,765(2172) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:06:41,765(2172) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:06:41,767(2174) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:06:41,768(2175) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:06:41,769(2176) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:06:41,769(2176) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419087363964929, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:06:41,769(2176) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419087362654208, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:06:41,769(2176) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419087364030467, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:06:41,770(2177) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419087363964930, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:06:41,787(2194) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:41,788(2195) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:41,806(2213) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:06:41,806(2213) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:41,807(2214) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:06:41,807(2214) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:41,807(2214) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:06:41,807(2214) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:06:41,808(2215) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:06:41,810(2217) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:41,950(2357) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:06:41,950(2357) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:06:41,950(2357) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:06:41,961(2368) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448019  
[DEBUG] 2015-08-06 15:06:42,012(2419) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:06:42,023(2430) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:06:42,023(2430) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:06:42,058(2465) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:06:42,074(2481) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:06:42,080(2487) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:06:42,080(2487) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:06:42,090(2497) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:06:42,095(2502) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:06:42,096(2503) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:06:42,097(2504) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:06:42,097(2504) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:06:42,114(2521) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:06:42,114(2521) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:06:42,114(2521) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:06:42,128(2535) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:42,128(2535) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:06:42,128(2535) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:06:42,129(2536) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:42,129(2536) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:42,130(2537) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:42,131(2538) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:06:42,132(2539) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:06:42,132(2539) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:06:42,132(2539) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448021  
[DEBUG] 2015-08-06 15:06:42,132(2539) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:06:42,134(2541) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:06:42,135(2542) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:06:42,135(2542) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:06:42,135(2542) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:06:42,136(2543) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:06:42,136(2543) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:06:42,136(2543) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:06:42,137(2544) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:06:42,137(2544) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:06:42,137(2544) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:06:42,137(2544) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:06:42,138(2545) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:06:42,138(2545) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:06:42,138(2545) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:06:42,139(2546) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:42,139(2546) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:06:42,139(2546) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:06:42,141(2548) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:42,141(2548) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:42,141(2548) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:42,141(2548) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:06:42,141(2548) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:06:42,142(2549) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:06:42,147(2554) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:06:42,147(2554) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:42,147(2554) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:06:42,147(2554) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:06:42,164(2571) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:06:42,164(2571) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:42,164(2571) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:06:42,165(2572) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:06:42,165(2572) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:06:42,165(2572) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:06:42,165(2572) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:06:42,165(2572) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:06:42,166(2573) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:06:42,167(2574) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:06:42,168(2575) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:07:47,595(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,599(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,601(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,602(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:07:47,604(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:07:47,605(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:07:47,607(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,608(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,608(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,609(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,610(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,610(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,617(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,617(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,617(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,619(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,621(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,622(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,624(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,624(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,625(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,628(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,628(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,628(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,630(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,630(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,630(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,633(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:47,633(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:47,635(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:47,635(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:47,637(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:47,637(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:47,638(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:47,638(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:47,641(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:47,641(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:47,644(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:47,644(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:47,647(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,647(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,647(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,648(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:07:47,650(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,650(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,650(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,652(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:07:47,653(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:47,653(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:47,655(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:47,655(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:47,656(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:47,656(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:47,657(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:47,657(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:47,660(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:47,660(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:47,660(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:07:47,662(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:07:47,663(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,663(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,663(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,665(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,665(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,665(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,666(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:07:47,667(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,667(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,667(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,668(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,669(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,669(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,670(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:07:47,677(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:47,677(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:47,678(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:47,679(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:47,684(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:47,684(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:47,684(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:47,685(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:47,686(91) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:47,687(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:07:47,692(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:47,692(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:47,692(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:07:47,692(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:07:47,693(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:07:47,693(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:07:47,693(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:07:47,693(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:07:47,693(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:07:47,693(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 15:07:47,733(138) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:07:47,734(139) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:07:47,742(147) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:07:47,744(149) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:07:47,747(152) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:07:47,750(155) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:07:47,804(209) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:07:47,804(209) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:07:47,805(210) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:07:47,806(211) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:07:47,808(213) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:07:47,809(214) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:07:47,810(215) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:07:47,811(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:07:47,812(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:07:47,812(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:07:47,813(218) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:07:47,814(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:07:47,815(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:07:47,815(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:07:47,816(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:07:47,818(223) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:07:47,818(223) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:07:47,867(272) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:07:47,867(272) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:07:47,868(273) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:07:47,868(273) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:07:47,892(297) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:07:47,893(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:07:47,894(299) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:07:47,894(299) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:07:47,899(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,899(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,899(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,900(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,901(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:47,902(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:47,903(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:47,903(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:47,903(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:47,903(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:47,903(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:47,904(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:47,904(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:47,904(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:47,904(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:47,904(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,905(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,906(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,906(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:07:47,906(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,906(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:47,907(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:47,908(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:47,908(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:47,908(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:47,908(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:47,908(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:47,908(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,909(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,910(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:07:47,910(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,910(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,910(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,910(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,910(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,911(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,911(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:07:47,911(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:47,911(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:47,911(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:47,911(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:47,912(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:07:47,913(318) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:07:47,914(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:07:47,915(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:07:47,915(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:07:47,915(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:07:47,915(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:07:47,915(320) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:07:47,915(320) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:07:47,920(325) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:07:47,920(325) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:07:47,921(326) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:07:47,921(326) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:07:47,926(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:07:47,926(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:07:47,926(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:07:47,926(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:07:47,926(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:07:47,926(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:07:47,927(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:07:47,927(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:07:47,927(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:07:47,927(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:07:47,927(332) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:07:47,927(332) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:07:47,928(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:47,929(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,930(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:47,931(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:47,932(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,933(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:47,934(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,935(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:07:47,936(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:47,937(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:07:47,938(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:07:47,939(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:07:47,940(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:07:47,940(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:07:47,940(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:07:47,940(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:07:47,940(345) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:07:47,940(345) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:07:47,942(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:07:47,942(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:07:47,942(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:07:47,942(347) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:07:47,945(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:07:47,945(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:07:47,945(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:07:47,945(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:07:47,946(351) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:07:47,965(370) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:07:48,016(421) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:07:48,016(421) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:07:48,021(426) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:48,048(453) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:07:48,050(455) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:07:48,056(461) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:07:48,059(464) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:07:48,088(493) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:07:48,092(497) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:07:48,094(499) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:07:48,096(501) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:07:48,100(505) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:07:48,100(505) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:07:48,101(506) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:07:48,101(506) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:07:48,101(506) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:07:48,101(506) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:07:48,101(506) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:07:48,101(506) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:07:48,102(507) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:07:48,102(507) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:07:48,102(507) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:07:48,102(507) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:07:48,102(507) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:07:48,102(507) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:07:48,103(508) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:07:48,103(508) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:07:48,105(510) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:07:48,105(510) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:07:48,105(510) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:07:48,106(511) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:07:48,106(511) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:07:48,107(512) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:07:48,108(513) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,109(514) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,109(514) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:07:48,109(514) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:07:48,109(514) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:07:48,109(514) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:07:48,114(519) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:07:48,136(541) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:07:48,148(553) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:07:48,149(554) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:07:48,151(556) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:07:48,156(561) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:07:48,229(634) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:07:48,229(634) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:07:48,229(634) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:07:48,230(635) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:07:48,230(635) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:07:48,235(640) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:07:48,235(640) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:07:48,243(648) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:07:48,243(648) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:07:48,243(648) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:07:48,249(654) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:07:48,249(654) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:07:48,249(654) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:07:48,506(911) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:07:48,525(930) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:07:48,537(942) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:07:48,538(943) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:07:48,539(944) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:07:48,540(945) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:07:48,540(945) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:07:48,540(945) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:07:48,541(946) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:07:48,541(946) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:07:48,541(946) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:07:48,541(946) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:07:48,542(947) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:07:48,542(947) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:07:48,547(952) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:07:48,547(952) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:07:48,547(952) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:07:48,548(953) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:07:48,548(953) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:07:48,548(953) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:07:48,550(955) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:07:48,550(955) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:07:48,550(955) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:07:48,550(955) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:07:48,550(955) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:07:48,550(955) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:07:48,551(956) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:07:48,552(957) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:07:48,555(960) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:07:48,556(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:07:48,556(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:07:48,556(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:07:48,557(962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:07:48,557(962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:07:48,573(978) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:07:48,578(983) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:07:48,580(985) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:48,580(985) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:48,580(985) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:48,581(986) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:07:48,581(986) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:07:48,581(986) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:07:48,581(986) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:48,581(986) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:48,581(986) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:48,582(987) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:48,583(988) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:48,583(988) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:48,583(988) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:48,583(988) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:48,584(989) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:48,584(989) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:48,584(989) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:48,585(990) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:48,586(991) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:07:48,587(992) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:48,588(993) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:48,589(994) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,590(995) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:07:48,591(996) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:07:48,592(997) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:48,593(998) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:07:48,594(999) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:48,595(1000) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:07:48,595(1000) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:07:48,608(1013) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:07:48,613(1018) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:07:48,740(1145) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:48,740(1145) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:07:48,740(1145) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:07:48,741(1146) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:07:48,741(1146) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:07:48,741(1146) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:07:48,760(1165) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,760(1165) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,761(1166) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,761(1166) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,761(1166) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,761(1166) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:07:48,761(1166) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,762(1167) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,762(1167) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,762(1167) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,768(1173) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,768(1173) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,786(1191) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:07:48,786(1191) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 134ab0c4-e114-4ae0-93dc-8934facc5c71 (unnamed)  
[INFO ] 2015-08-06 15:07:48,786(1191) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:07:48,787(1192) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:07:48,792(1197) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:07:48,792(1197) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:07:48,793(1198) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:07:48,793(1198) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:07:48,794(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:07:48,794(1199) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:07:48,794(1199) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:07:48,794(1199) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:07:48,795(1200) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:07:48,795(1200) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:07:48,830(1235) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:07:48,830(1235) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:07:48,830(1235) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:07:48,830(1235) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:07:48,830(1235) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:07:48,831(1236) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:07:48,836(1241) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:07:48,836(1241) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:07:48,837(1242) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:07:48,837(1242) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:07:48,837(1242) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:07:48,838(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:07:48,839(1244) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:07:48,839(1244) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:07:48,840(1245) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:07:48,840(1245) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:07:48,846(1251) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:07:48,847(1252) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:07:48,847(1252) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:07:48,847(1252) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:07:48,851(1256) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:07:48,854(1259) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:07:48,854(1259) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:07:48,855(1260) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:07:48,855(1260) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:07:48,855(1260) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:07:48,855(1260) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:07:48,855(1260) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:07:48,855(1260) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:07:48,887(1292) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:07:48,887(1292) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:07:48,887(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:07:48,887(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:07:48,887(1292) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:07:48,887(1292) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:07:48,888(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:07:48,889(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:07:48,890(1295) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:07:48,890(1295) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:07:48,890(1295) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:07:48,892(1297) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:07:48,893(1298) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@7a36a2  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:07:48,893(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:48,894(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:48,895(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:07:48,896(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:48,897(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:07:48,898(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:07:48,898(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:48,907(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:07:48,907(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:48,907(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:07:48,907(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:07:48,908(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:48,909(1314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,910(1315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:07:48,911(1316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ce663c  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19a0feb  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18b1f8f  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c5122f  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:07:48,912(1317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:07:48,913(1318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,914(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:07:48,914(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:07:48,914(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:07:48,914(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:07:48,914(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:07:48,914(1319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:07:48,915(1320) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:07:48,915(1320) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:07:48,916(1321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:07:48,918(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:48,918(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:07:48,918(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:07:48,918(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:07:48,918(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:07:48,918(1323) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:07:48,919(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,919(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,919(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,919(1324) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,920(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,920(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:07:48,920(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,920(1325) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:07:48,921(1326) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,921(1326) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,921(1326) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,921(1326) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:48,922(1327) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 511b1681-021e-4012-9da3-f96d8fd9a2e1 (unnamed)  
[INFO ] 2015-08-06 15:07:48,922(1327) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:07:48,922(1327) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:07:48,922(1327) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:07:48,922(1327) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:07:48,922(1327) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:07:48,923(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:07:48,924(1329) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:07:48,924(1329) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:07:48,924(1329) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:07:48,925(1330) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:07:48,939(1344) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:07:48,939(1344) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:07:48,939(1344) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:07:48,939(1344) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:07:48,939(1344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:07:48,940(1345) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:07:48,941(1346) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:07:48,941(1346) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:07:48,964(1369) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:48,964(1369) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:07:49,008(1413) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448689  
[DEBUG] 2015-08-06 15:07:49,008(1413) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:07:49,010(1415) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:07:49,010(1415) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:07:49,010(1415) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:07:49,019(1424) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949588100677632, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:07:49,031(1436) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:49,031(1436) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:07:49,032(1437) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949588101726209, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:07:49,032(1437) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:49,033(1438) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:07:49,033(1438) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949588101791746, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:07:49,033(1438) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:07:49,033(1438) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:07:49,034(1439) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949588101857283, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:07:49,034(1439) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:07:49,034(1439) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:07:49,035(1440) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:07:49,036(1441) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:07:49,038(1443) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:07:49,038(1443) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:07:49,039(1444) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:07:49,039(1444) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949588101857283, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:07:49,039(1444) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949588101791746, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:07:49,039(1444) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949588100677632, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:07:49,039(1444) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949588101726209, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:07:49,056(1461) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,056(1461) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:07:49,072(1477) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:07:49,072(1477) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:07:49,073(1478) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:07:49,073(1478) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:07:49,073(1478) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:07:49,073(1478) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:07:49,074(1479) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:07:49,076(1481) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,186(1591) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:07:49,186(1591) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:07:49,187(1592) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:07:49,211(1616) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448692  
[DEBUG] 2015-08-06 15:07:49,262(1667) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:07:49,273(1678) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:07:49,273(1678) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:07:49,306(1711) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:07:49,325(1730) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:07:49,332(1737) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:07:49,332(1737) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:07:49,338(1743) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:07:49,342(1747) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:07:49,342(1747) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:07:49,343(1748) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:07:49,344(1749) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:07:49,360(1765) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:07:49,360(1765) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:07:49,360(1765) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:07:49,372(1777) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,373(1778) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:07:49,373(1778) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:07:49,374(1779) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,374(1779) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,375(1780) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,376(1781) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:07:49,377(1782) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:07:49,377(1782) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:07:49,378(1783) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448693  
[DEBUG] 2015-08-06 15:07:49,378(1783) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:07:49,380(1785) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:07:49,380(1785) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:07:49,381(1786) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:07:49,381(1786) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:07:49,383(1788) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:07:49,383(1788) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:07:49,383(1788) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:07:49,383(1788) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:07:49,384(1789) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:07:49,384(1789) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:07:49,384(1789) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:07:49,385(1790) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:07:49,385(1790) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:07:49,385(1790) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:07:49,386(1791) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,386(1791) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:07:49,386(1791) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:07:49,387(1792) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,387(1792) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,387(1792) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,387(1792) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:07:49,387(1792) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:07:49,387(1792) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:07:49,391(1796) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:07:49,391(1796) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,391(1796) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:07:49,392(1797) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:49,392(1797) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,393(1798) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:07:49,394(1799) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:07:49,394(1799) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:07:49,394(1799) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,395(1800) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:07:49,395(1800) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:07:49,395(1800) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:07:49,395(1800) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:07:49,395(1800) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:07:49,395(1800) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:07:49,395(1800) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:07:49,397(1802) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:07:49,397(1802) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:08:17,729(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:17,732(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:17,735(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:17,737(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:08:17,739(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:08:17,740(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:08:17,743(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:17,743(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:17,743(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:17,745(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:17,745(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:17,745(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:17,754(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:17,754(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:17,755(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:17,757(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:17,759(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:17,759(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:17,761(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:17,762(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:17,762(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:17,764(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:17,764(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:17,764(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:17,766(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:17,766(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:17,766(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:17,769(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:17,770(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:17,772(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:17,772(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:17,773(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:17,774(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:17,775(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:17,775(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:17,777(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:17,778(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:17,780(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:17,780(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:17,783(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:17,783(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:17,783(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:17,785(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:08:17,787(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:17,788(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:17,788(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:17,789(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:08:17,791(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:17,791(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:17,793(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:17,794(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:17,795(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:17,795(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:17,797(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:17,797(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:17,800(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:17,800(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:17,801(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:08:17,803(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:08:17,805(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:17,805(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:17,805(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:17,807(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:17,807(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:17,807(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:17,808(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:08:17,810(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:17,810(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:17,810(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:17,811(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:17,811(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:17,812(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:17,812(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:08:17,821(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:17,821(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:17,822(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:17,823(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:17,828(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:17,828(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:17,829(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:17,829(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:17,830(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:17,832(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:08:17,837(108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:17,837(108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:17,838(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:08:17,838(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:08:17,838(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:08:17,839(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:08:17,839(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:08:17,839(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:08:17,839(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:08:17,839(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 15:08:17,879(150) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:08:17,879(150) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:08:17,887(158) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:08:17,888(159) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:08:17,892(163) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:08:17,895(166) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:08:17,949(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:08:17,950(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:08:17,951(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:08:17,952(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:08:17,954(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:08:17,956(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:08:17,957(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:08:17,958(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:08:17,958(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:08:17,959(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:08:17,960(231) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:08:17,961(232) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:08:17,961(232) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:08:17,962(233) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:08:17,963(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:08:17,964(235) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:08:17,965(236) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:08:18,013(284) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:08:18,013(284) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:08:18,013(284) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:08:18,014(285) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:08:18,038(309) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:08:18,038(309) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:08:18,038(309) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:08:18,039(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:08:18,039(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:08:18,039(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:08:18,039(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:08:18,039(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:08:18,039(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:08:18,040(311) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:08:18,040(311) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:08:18,040(311) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:08:18,045(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,045(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,045(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,046(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,047(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:18,048(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:18,049(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,050(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:18,051(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,052(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,053(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,054(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,054(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:08:18,054(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,054(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:18,055(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:08:18,056(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:08:18,057(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:08:18,058(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:08:18,058(329) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:08:18,058(329) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:08:18,065(336) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:08:18,065(336) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:08:18,065(336) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:08:18,066(337) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:08:18,070(341) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:08:18,070(341) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:08:18,070(341) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:08:18,071(342) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:08:18,071(342) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:08:18,071(342) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:08:18,071(342) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:08:18,071(342) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:08:18,071(342) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:08:18,072(343) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:08:18,072(343) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:08:18,072(343) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:08:18,073(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,073(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,073(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,074(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:08:18,074(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:08:18,074(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:08:18,074(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,074(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,074(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,075(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,075(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,075(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,075(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,075(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,075(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,076(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,077(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,077(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,077(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,077(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,077(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,077(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:18,078(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:18,079(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:18,079(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:18,079(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:18,079(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:18,079(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,079(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:08:18,080(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:18,081(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:18,082(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:18,082(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:08:18,082(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:08:18,082(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,082(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,082(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,083(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,083(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,083(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,083(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:08:18,083(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,083(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,084(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,085(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:18,085(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:18,085(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,085(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,085(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:18,085(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:08:18,086(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:08:18,087(358) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:08:18,088(359) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:08:18,088(359) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:08:18,088(359) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:08:18,088(359) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:08:18,088(359) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:08:18,088(359) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:08:18,089(360) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:08:18,089(360) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:08:18,089(360) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:08:18,089(360) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:08:18,089(360) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:08:18,089(360) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:08:18,089(360) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:08:18,091(362) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:08:18,092(363) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:08:18,092(363) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:08:18,092(363) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:08:18,096(367) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:08:18,096(367) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:08:18,096(367) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:08:18,096(367) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:08:18,096(367) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:08:18,097(368) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:08:18,097(368) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:08:18,097(368) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:08:18,097(368) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:08:18,097(368) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:08:18,097(368) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:08:18,121(392) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:08:18,173(444) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:08:18,173(444) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:08:18,179(450) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:18,211(482) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:08:18,214(485) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:08:18,223(494) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:08:18,226(497) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:08:18,260(531) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:08:18,265(536) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:08:18,267(538) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:08:18,269(540) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:08:18,274(545) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:08:18,274(545) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:08:18,274(545) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:08:18,274(545) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:08:18,275(546) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:08:18,275(546) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:08:18,275(546) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:08:18,275(546) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:08:18,275(546) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:08:18,276(547) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:08:18,276(547) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:08:18,276(547) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:08:18,276(547) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:08:18,276(547) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:08:18,276(547) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:08:18,277(548) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:08:18,278(549) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:08:18,279(550) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:08:18,279(550) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:08:18,279(550) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:08:18,279(550) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:08:18,280(551) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:08:18,281(552) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:18,281(552) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:18,281(552) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:08:18,281(552) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:08:18,282(553) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:08:18,282(553) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:08:18,286(557) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:08:18,308(579) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:08:18,321(592) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:08:18,323(594) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:08:18,327(598) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:08:18,333(604) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:08:18,401(672) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:08:18,403(674) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:08:18,403(674) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:08:18,404(675) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:08:18,404(675) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:08:18,409(680) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:08:18,409(680) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:08:18,416(687) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:08:18,417(688) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:08:18,417(688) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:08:18,425(696) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:08:18,425(696) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:08:18,425(696) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:08:18,695(966) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:08:18,715(986) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:08:18,729(1000) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:08:18,729(1000) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:08:18,731(1002) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:08:18,733(1004) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:08:18,733(1004) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:08:18,733(1004) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:08:18,733(1004) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:08:18,733(1004) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:08:18,734(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:08:18,734(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:08:18,734(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:08:18,735(1006) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:08:18,740(1011) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:08:18,740(1011) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:08:18,740(1011) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:08:18,741(1012) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:08:18,741(1012) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:08:18,741(1012) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:08:18,743(1014) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:08:18,743(1014) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:08:18,743(1014) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:08:18,744(1015) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:08:18,744(1015) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:08:18,744(1015) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:08:18,745(1016) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:08:18,746(1017) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:08:18,750(1021) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:08:18,751(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:08:18,751(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:08:18,751(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:08:18,751(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:08:18,751(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:08:18,766(1037) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:08:18,772(1043) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:08:18,773(1044) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,773(1044) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:18,774(1045) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,775(1046) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:18,776(1047) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:18,777(1048) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:18,778(1049) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:08:18,779(1050) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:18,780(1051) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,781(1052) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:18,782(1053) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,782(1053) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,782(1053) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:18,782(1053) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:08:18,782(1053) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,782(1053) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,783(1054) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:18,784(1055) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:08:18,785(1056) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:08:18,786(1057) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:08:18,786(1057) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:08:18,786(1057) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:08:18,786(1057) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:18,786(1057) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:08:18,786(1057) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:18,787(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:08:18,788(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:18,790(1061) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:08:18,790(1061) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:08:18,801(1072) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:08:18,806(1077) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:08:18,948(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:18,948(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:08:18,948(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:08:18,948(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:08:18,948(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:08:18,948(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:08:18,970(1241) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:18,970(1241) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:18,971(1242) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:18,971(1242) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:18,971(1242) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:18,971(1242) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:08:18,972(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:18,972(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:18,972(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:18,973(1244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:18,980(1251) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:18,980(1251) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,000(1271) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:08:19,001(1272) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: babfdb6d-f804-4509-9e9e-b878eb38ba6e (unnamed)  
[INFO ] 2015-08-06 15:08:19,001(1272) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:08:19,001(1272) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:08:19,008(1279) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:08:19,008(1279) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:08:19,009(1280) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:08:19,010(1281) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:08:19,011(1282) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:08:19,011(1282) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:08:19,012(1283) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:08:19,012(1283) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:08:19,012(1283) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:08:19,013(1284) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:08:19,040(1311) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:08:19,040(1311) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:08:19,040(1311) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:08:19,041(1312) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:08:19,041(1312) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:08:19,041(1312) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:08:19,044(1315) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:08:19,044(1315) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:08:19,045(1316) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:08:19,045(1316) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:08:19,045(1316) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:08:19,045(1316) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:08:19,046(1317) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:19,046(1317) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:19,046(1317) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:08:19,046(1317) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:08:19,046(1317) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:08:19,046(1317) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:08:19,047(1318) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:08:19,048(1319) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:08:19,048(1319) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:08:19,049(1320) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:08:19,055(1326) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:08:19,055(1326) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:08:19,055(1326) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:08:19,056(1327) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:08:19,059(1330) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:08:19,061(1332) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:08:19,062(1333) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:08:19,062(1333) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:08:19,062(1333) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:08:19,062(1333) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:08:19,063(1334) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:08:19,063(1334) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:08:19,063(1334) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:08:19,080(1351) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:08:19,080(1351) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:08:19,081(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:08:19,081(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:08:19,081(1352) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:08:19,081(1352) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:08:19,081(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:08:19,081(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:08:19,082(1353) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:08:19,083(1354) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:08:19,084(1355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:08:19,084(1355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:08:19,084(1355) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:08:19,087(1358) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:08:19,087(1358) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:08:19,088(1359) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 15:08:19,088(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:19,088(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:19,088(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:08:19,088(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:08:19,088(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:08:19,089(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:08:19,089(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:19,089(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:19,089(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:08:19,089(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:19,089(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:19,090(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:08:19,091(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:08:19,092(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:19,093(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:08:19,093(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:19,093(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:08:19,093(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:19,093(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:08:19,093(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:19,094(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:08:19,094(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:19,094(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:19,094(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:08:19,094(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:08:19,094(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:19,095(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:19,095(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:08:19,095(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:08:19,095(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:19,095(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:08:19,095(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:19,096(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:08:19,097(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:08:19,097(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:08:19,097(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:19,097(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:19,097(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:08:19,097(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:08:19,098(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:19,099(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:19,100(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:19,100(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:19,100(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:19,100(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:19,100(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:19,100(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:08:19,101(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:19,101(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:08:19,101(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1238785  
[DEBUG] 2015-08-06 15:08:19,101(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:08:19,101(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:08:19,101(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:08:19,102(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:08:19,102(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:08:19,102(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:08:19,102(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:08:19,102(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:08:19,102(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:08:19,103(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:08:19,104(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:08:19,105(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:08:19,105(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:08:19,105(1376) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:08:19,106(1377) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:08:19,106(1377) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:08:19,108(1379) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:19,108(1379) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:08:19,108(1379) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:08:19,109(1380) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:08:19,109(1380) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:08:19,109(1380) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:08:19,110(1381) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,110(1381) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,111(1382) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:19,111(1382) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:19,111(1382) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:19,111(1382) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:08:19,112(1383) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:19,112(1383) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:08:19,112(1383) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,112(1383) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,113(1384) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,113(1384) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,113(1384) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 9bc73381-f26c-4e0b-be3f-e3ee0ecc0027 (unnamed)  
[INFO ] 2015-08-06 15:08:19,113(1384) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:08:19,113(1384) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:08:19,113(1384) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:08:19,113(1384) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:08:19,114(1385) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:08:19,114(1385) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:08:19,114(1385) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:08:19,114(1385) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:08:19,114(1385) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:19,114(1385) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:08:19,114(1385) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:08:19,115(1386) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:08:19,115(1386) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:08:19,115(1386) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:08:19,115(1386) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:08:19,116(1387) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:08:19,116(1387) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:08:19,116(1387) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:08:19,130(1401) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:08:19,130(1401) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:08:19,131(1402) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:08:19,131(1402) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:08:19,131(1402) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:08:19,131(1402) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:08:19,132(1403) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:08:19,132(1403) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:08:19,164(1435) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:19,164(1435) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:08:19,205(1476) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448991  
[DEBUG] 2015-08-06 15:08:19,205(1476) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:08:19,207(1478) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:08:19,208(1479) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:08:19,208(1479) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:08:19,216(1487) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949590079602688, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:08:19,227(1498) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:19,227(1498) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:08:19,228(1499) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949590080585729, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:08:19,228(1499) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:19,228(1499) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:08:19,228(1499) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949590080651266, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:08:19,228(1499) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:08:19,229(1500) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:08:19,229(1500) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949590080716803, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:08:19,229(1500) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:08:19,229(1500) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:08:19,230(1501) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:08:19,231(1502) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:08:19,232(1503) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:08:19,232(1503) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:08:19,233(1504) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:08:19,234(1505) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949590080651266, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:08:19,234(1505) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949590080716803, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:08:19,234(1505) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949590079602688, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:08:19,234(1505) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949590080585729, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:08:19,256(1527) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,257(1528) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:08:19,274(1545) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:08:19,274(1545) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:08:19,275(1546) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:08:19,275(1546) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:08:19,275(1546) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:08:19,275(1546) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:08:19,276(1547) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:08:19,278(1549) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,385(1656) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:08:19,385(1656) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:08:19,386(1657) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:08:19,406(1677) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448994  
[DEBUG] 2015-08-06 15:08:19,463(1734) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:08:19,474(1745) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:08:19,474(1745) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:08:19,506(1777) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:08:19,525(1796) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:08:19,530(1801) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:08:19,531(1802) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:08:19,536(1807) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:08:19,541(1812) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:08:19,542(1813) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:08:19,542(1813) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:08:19,542(1813) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:08:19,559(1830) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:08:19,559(1830) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:08:19,560(1831) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:08:19,576(1847) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,576(1847) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:08:19,576(1847) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:08:19,578(1849) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,578(1849) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,578(1849) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,580(1851) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:08:19,581(1852) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:08:19,582(1853) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:08:19,582(1853) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388448995  
[DEBUG] 2015-08-06 15:08:19,582(1853) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:08:19,585(1856) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:08:19,585(1856) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:08:19,586(1857) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:08:19,587(1858) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:08:19,588(1859) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:08:19,588(1859) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:08:19,588(1859) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:08:19,589(1860) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:08:19,589(1860) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:08:19,590(1861) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:08:19,590(1861) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:08:19,590(1861) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:08:19,590(1861) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:08:19,590(1861) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:08:19,591(1862) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,591(1862) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:08:19,591(1862) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:08:19,592(1863) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,592(1863) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,593(1864) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,593(1864) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:08:19,593(1864) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:08:19,593(1864) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:08:19,597(1868) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:08:19,597(1868) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,598(1869) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:08:19,598(1869) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,599(1870) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,599(1870) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,599(1870) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,599(1870) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:08:19,600(1871) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:08:19,600(1871) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:08:19,600(1871) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:08:19,600(1871) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:08:19,600(1871) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,601(1872) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:08:19,601(1872) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:08:19,602(1873) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:08:19,602(1873) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,602(1873) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:08:19,602(1873) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:08:19,602(1873) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:08:19,603(1874) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:08:19,603(1874) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:08:19,603(1874) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:08:19,603(1874) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:08:19,606(1877) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:08:19,606(1877) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:10:54,828(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:54,831(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:54,833(5) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:54,834(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:10:54,836(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:10:54,836(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:10:54,838(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:54,839(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:54,839(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:54,840(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:54,840(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:54,840(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:54,847(19) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:54,847(19) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:54,847(19) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:54,849(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:54,851(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:54,851(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:54,853(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:54,853(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:54,853(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:54,855(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:54,855(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:54,856(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:54,857(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:54,857(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:54,858(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:54,860(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:10:54,860(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:10:54,862(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:10:54,862(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:10:54,863(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:10:54,863(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:10:54,865(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:10:54,865(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:10:54,867(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:10:54,867(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:10:54,869(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:10:54,869(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:10:54,872(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:54,872(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:54,872(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:54,873(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:10:54,875(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:54,875(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:54,875(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:54,876(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:10:54,878(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:10:54,878(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:10:54,879(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:10:54,880(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:10:54,881(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:10:54,881(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:10:54,882(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:10:54,882(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:10:54,885(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:10:54,885(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:10:54,886(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:10:54,887(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:10:54,888(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:54,888(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:54,888(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:54,890(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:54,890(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:54,890(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:54,891(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:10:54,892(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:54,892(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:54,892(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:54,894(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:54,894(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:54,894(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:54,895(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:10:54,902(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:10:54,902(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:10:54,903(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:10:54,904(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:10:54,908(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:10:54,908(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:10:54,909(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:10:54,910(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:10:54,910(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:10:54,912(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:10:54,915(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:10:54,916(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:10:54,916(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 15:10:54,916(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:10:54,917(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:10:54,917(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:10:54,917(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:10:54,917(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:10:54,917(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:10:54,917(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:10:54,955(127) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:10:54,956(128) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:10:54,965(137) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:10:54,967(139) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:10:54,972(144) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:10:54,975(147) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:10:55,024(196) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:10:55,025(197) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:10:55,026(198) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:10:55,027(199) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:10:55,029(201) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:10:55,030(202) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:10:55,031(203) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:10:55,032(204) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:10:55,033(205) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:10:55,034(206) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:10:55,034(206) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:10:55,035(207) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:10:55,036(208) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:10:55,037(209) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:10:55,038(210) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:10:55,039(211) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:10:55,039(211) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:10:55,082(254) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:10:55,082(254) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:10:55,082(254) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:10:55,083(255) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:10:55,104(276) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:10:55,104(276) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:10:55,104(276) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:10:55,105(277) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:10:55,106(278) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:10:55,110(282) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:55,111(283) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:55,112(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:55,112(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:55,112(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:55,112(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:55,112(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:55,112(284) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:55,113(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:55,113(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:55,113(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:55,113(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:55,113(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:55,113(285) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:55,114(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:55,114(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:55,114(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:55,114(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:55,114(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:55,114(286) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:55,115(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:55,115(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:10:55,115(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:10:55,115(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:10:55,115(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:10:55,115(287) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:10:55,116(288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:10:55,116(288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:10:55,116(288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:10:55,116(288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:10:55,116(288) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:10:55,117(289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:10:55,117(289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:10:55,117(289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:55,117(289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:55,117(289) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:55,118(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:10:55,118(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:55,118(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:55,118(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:55,118(290) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:10:55,119(291) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:55,120(292) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:55,121(293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:55,121(293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:55,121(293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:55,121(293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:55,121(293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:10:55,121(293) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:55,122(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:55,122(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:55,122(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:55,122(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:55,122(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:55,122(294) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:10:55,123(295) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:10:55,124(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:10:55,124(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:10:55,124(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:10:55,124(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:10:55,124(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:10:55,124(296) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:10:55,125(297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:10:55,126(298) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:10:55,126(298) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:10:55,126(298) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:10:55,126(298) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:10:55,126(298) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:10:55,127(299) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:10:55,128(300) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:10:55,128(300) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:10:55,128(300) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:10:55,128(300) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:10:55,128(300) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:10:55,133(305) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:10:55,133(305) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:10:55,134(306) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:10:55,134(306) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:10:55,137(309) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:10:55,137(309) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:10:55,137(309) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:10:55,138(310) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:10:55,139(311) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:10:55,139(311) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:10:55,140(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:55,140(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:55,140(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:10:55,141(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:10:55,141(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:10:55,141(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:10:55,141(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:55,141(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:55,141(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:10:55,142(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:55,143(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:55,143(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:10:55,143(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:55,143(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:55,143(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:10:55,143(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:55,144(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:55,144(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:10:55,144(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:55,144(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:55,144(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:10:55,144(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:10:55,145(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:10:55,146(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:10:55,146(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:10:55,146(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:10:55,146(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:10:55,146(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:55,146(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:55,147(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:10:55,147(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:10:55,147(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:55,147(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:55,147(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:10:55,147(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:10:55,148(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:10:55,149(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:10:55,149(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:10:55,149(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:10:55,149(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:10:55,149(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:10:55,149(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:10:55,150(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:10:55,151(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:10:55,152(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:10:55,153(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:10:55,154(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:10:55,154(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:10:55,154(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:10:55,154(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:10:55,154(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:10:55,154(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:10:55,155(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:10:55,156(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:10:55,156(328) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:10:55,156(328) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:10:55,158(330) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:10:55,158(330) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:10:55,158(330) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:10:55,159(331) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:10:55,162(334) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:10:55,163(335) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:10:55,164(336) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:10:55,180(352) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:10:55,223(395) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:10:55,223(395) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:10:55,232(404) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:10:55,266(438) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:10:55,269(441) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:10:55,275(447) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:10:55,279(451) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:10:55,308(480) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:10:55,312(484) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:10:55,314(486) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:10:55,316(488) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:10:55,320(492) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:10:55,320(492) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:10:55,321(493) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:10:55,321(493) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
