[DEBUG] 2015-08-06 14:45:36,217(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,221(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,224(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,226(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16df84b  
[DEBUG] 2015-08-06 14:45:36,228(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@a46701  
[DEBUG] 2015-08-06 14:45:36,229(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@120cc56  
[DEBUG] 2015-08-06 14:45:36,232(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,233(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,233(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,234(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,234(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,234(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,242(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,243(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,243(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,246(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,248(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,248(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,251(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,251(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,251(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,255(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,255(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,255(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,258(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,258(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,258(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,261(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:36,262(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:36,264(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:36,264(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:36,265(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:36,265(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:36,267(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:36,267(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:36,269(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:36,269(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:36,272(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:36,272(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:36,274(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,274(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,275(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,276(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fe748f  
[DEBUG] 2015-08-06 14:45:36,277(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,277(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,277(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,279(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d85f79  
[DEBUG] 2015-08-06 14:45:36,281(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:36,281(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:36,282(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:36,282(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:36,283(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:36,284(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:36,285(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:36,285(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:36,287(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:36,287(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:36,288(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d6776d  
[DEBUG] 2015-08-06 14:45:36,289(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a8a02  
[DEBUG] 2015-08-06 14:45:36,290(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,290(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,290(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,291(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,292(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,292(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,293(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@12a3722  
[DEBUG] 2015-08-06 14:45:36,295(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,295(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,295(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,296(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,297(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,297(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,298(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a31e1b  
[DEBUG] 2015-08-06 14:45:36,305(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:36,305(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:36,306(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:36,306(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:36,311(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:36,311(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:36,312(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:36,313(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:36,313(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:36,315(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@198a455  
[DEBUG] 2015-08-06 14:45:36,318(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:36,318(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:36,319(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cbfe9d  
[DEBUG] 2015-08-06 14:45:36,319(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 14:45:36,319(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 14:45:36,320(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 14:45:36,320(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 14:45:36,320(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 14:45:36,320(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 14:45:36,320(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 14:45:36,361(144) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 14:45:36,361(144) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 14:45:36,369(152) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 14:45:36,371(154) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 14:45:36,374(157) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 14:45:36,377(160) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 14:45:36,429(212) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:45:36,429(212) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:45:36,431(214) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:45:36,431(214) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:45:36,433(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:45:36,434(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:45:36,435(218) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:45:36,436(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:45:36,438(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:45:36,438(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:45:36,439(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:45:36,440(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:45:36,440(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:45:36,441(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:45:36,442(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:45:36,444(227) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:45:36,444(227) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:45:36,491(274) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:45:36,491(274) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:45:36,492(275) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:45:36,492(275) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:45:36,515(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:45:36,516(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:45:36,517(300) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:45:36,517(300) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:45:36,517(300) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:45:36,524(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,524(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,524(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,524(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16df84b  
[DEBUG] 2015-08-06 14:45:36,524(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@a46701  
[DEBUG] 2015-08-06 14:45:36,525(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@120cc56  
[DEBUG] 2015-08-06 14:45:36,525(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,525(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,525(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,525(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,526(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,526(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,526(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,526(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,526(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,527(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,527(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,527(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,527(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,528(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,528(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,528(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,528(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,528(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,529(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,529(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,529(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,530(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:36,530(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:36,530(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:36,530(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,531(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fe748f  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d85f79  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:36,532(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d6776d  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a8a02  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,533(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@12a3722  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,534(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a31e1b  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:36,535(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@198a455  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e0f2f6  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 14:45:36,536(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:45:36,537(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:45:36,538(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:45:36,539(322) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:45:36,539(322) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:45:36,544(327) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:45:36,544(327) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:45:36,545(328) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:45:36,545(328) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:45:36,548(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:45:36,548(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:45:36,548(331) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:45:36,549(332) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:45:36,551(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,551(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,551(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:36,551(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16df84b  
[DEBUG] 2015-08-06 14:45:36,551(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@a46701  
[DEBUG] 2015-08-06 14:45:36,551(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@120cc56  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,552(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,553(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:36,553(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,553(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,553(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:36,553(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,554(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,554(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:36,554(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,554(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,554(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:36,555(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:36,556(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fe748f  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:36,557(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d85f79  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:36,558(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:36,559(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:36,559(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:36,559(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:36,559(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d6776d  
[DEBUG] 2015-08-06 14:45:36,559(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a8a02  
[DEBUG] 2015-08-06 14:45:36,559(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,560(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,560(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:36,560(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,560(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,560(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:36,560(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@12a3722  
[DEBUG] 2015-08-06 14:45:36,561(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,561(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,561(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:36,561(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,561(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,561(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a31e1b  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:36,562(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@198a455  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:36,563(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@814013  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 14:45:36,564(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:45:36,565(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:45:36,566(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:45:36,567(350) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:45:36,567(350) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:45:36,569(352) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:45:36,569(352) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:45:36,569(352) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:45:36,570(353) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:45:36,574(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:45:36,574(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 14:45:36,574(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:45:36,574(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:45:36,574(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:45:36,574(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:45:36,575(358) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:45:36,575(358) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 14:45:36,575(358) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:45:36,575(358) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:45:36,575(358) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 14:45:36,598(381) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:45:36,643(426) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:45:36,644(427) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 14:45:36,648(431) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:36,683(466) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 14:45:36,685(468) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 14:45:36,694(477) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 14:45:36,698(481) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 14:45:36,731(514) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:45:36,736(519) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 14:45:36,739(522) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 14:45:36,742(525) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 14:45:36,746(529) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:45:36,746(529) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 14:45:36,747(530) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 14:45:36,747(530) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 14:45:36,747(530) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:45:36,747(530) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 14:45:36,747(530) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 14:45:36,747(530) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 14:45:36,748(531) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:45:36,748(531) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 14:45:36,748(531) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 14:45:36,748(531) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 14:45:36,748(531) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:45:36,748(531) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 14:45:36,749(532) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 14:45:36,749(532) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 14:45:36,751(534) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 14:45:36,751(534) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 14:45:36,751(534) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 14:45:36,751(534) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 14:45:36,751(534) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 14:45:36,752(535) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:45:36,753(536) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:36,753(536) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:36,754(537) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:45:36,754(537) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:45:36,754(537) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:45:36,754(537) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 14:45:36,760(543) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 14:45:36,784(567) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 14:45:36,796(579) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:45:36,797(580) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:45:36,801(584) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:45:36,807(590) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:45:36,884(667) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:45:36,884(667) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:45:36,884(667) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:45:36,885(668) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:45:36,885(668) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:45:36,890(673) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:45:36,890(673) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:45:36,897(680) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:45:36,897(680) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:45:36,897(680) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:45:36,903(686) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 14:45:36,904(687) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 14:45:36,904(687) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:45:37,143(926) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 14:45:37,163(946) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:45:37,175(958) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:45:37,175(958) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:45:37,177(960) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:45:37,178(961) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:45:37,178(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:45:37,178(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:45:37,178(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:45:37,178(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:45:37,179(962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:45:37,179(962) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:45:37,184(967) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:45:37,184(967) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:45:37,185(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:45:37,185(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:45:37,185(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:45:37,185(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:45:37,185(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:45:37,185(968) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:45:37,188(971) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:45:37,188(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:45:37,188(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:45:37,188(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:45:37,188(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:45:37,188(971) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:45:37,189(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:45:37,189(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:45:37,193(976) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:45:37,194(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:45:37,194(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:45:37,194(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:45:37,194(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:45:37,194(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:45:37,212(995) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:45:37,216(999) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 14:45:37,218(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:37,218(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:37,218(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16df84b  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@a46701  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@120cc56  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:37,219(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:37,220(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:37,220(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:37,220(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:37,220(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:37,220(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:37,221(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:37,222(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:37,222(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:37,222(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:37,222(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:37,223(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:37,224(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:37,224(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:37,224(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:37,224(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:37,224(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:37,224(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fe748f  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d85f79  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:37,225(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:37,226(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d6776d  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a8a02  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:37,227(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@12a3722  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:37,228(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a31e1b  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@198a455  
[DEBUG] 2015-08-06 14:45:37,229(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 14:45:37,230(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:45:37,231(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:45:37,232(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:37,234(1017) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:45:37,234(1017) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:45:37,247(1030) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 14:45:37,252(1035) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 14:45:37,400(1183) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:37,400(1183) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:45:37,400(1183) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:45:37,400(1183) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:45:37,401(1184) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:45:37,401(1184) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:45:37,421(1204) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,421(1204) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,421(1204) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,422(1205) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,422(1205) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,423(1206) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:45:37,423(1206) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,423(1206) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,424(1207) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,424(1207) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,432(1215) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,432(1215) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,452(1235) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 14:45:37,453(1236) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 36b90311-562b-41aa-8fd4-2368742e6a70 (unnamed)  
[INFO ] 2015-08-06 14:45:37,453(1236) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:45:37,453(1236) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:45:37,458(1241) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:45:37,459(1242) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:45:37,460(1243) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:45:37,460(1243) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:45:37,461(1244) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:45:37,461(1244) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:45:37,461(1244) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:45:37,462(1245) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:45:37,485(1268) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 14:45:37,485(1268) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 14:45:37,485(1268) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 14:45:37,485(1268) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 14:45:37,486(1269) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:45:37,486(1269) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:45:37,489(1272) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:45:37,489(1272) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:37,491(1274) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:45:37,492(1275) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:45:37,492(1275) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:45:37,492(1275) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:45:37,493(1276) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:45:37,493(1276) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:45:37,493(1276) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:45:37,494(1277) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:45:37,501(1284) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:45:37,501(1284) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:45:37,501(1284) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:45:37,502(1285) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:45:37,505(1288) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:45:37,507(1290) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:45:37,507(1290) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:45:37,508(1291) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:45:37,508(1291) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:45:37,508(1291) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:45:37,508(1291) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:45:37,508(1291) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 14:45:37,508(1291) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:45:37,527(1310) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 14:45:37,527(1310) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:45:37,528(1311) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:45:37,528(1311) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:45:37,528(1311) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:45:37,528(1311) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:45:37,528(1311) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:45:37,528(1311) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:45:37,529(1312) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:45:37,530(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:45:37,531(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:45:37,532(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:45:37,532(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:45:37,532(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:45:37,532(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:45:37,536(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:45:37,536(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 14:45:37,536(1319) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 14:45:37,537(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:37,537(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:37,537(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18088c0  
[DEBUG] 2015-08-06 14:45:37,537(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16df84b  
[DEBUG] 2015-08-06 14:45:37,537(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@a46701  
[DEBUG] 2015-08-06 14:45:37,537(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@120cc56  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@763f5d  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d19bc8  
[DEBUG] 2015-08-06 14:45:37,538(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:37,539(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:37,539(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1995d80  
[DEBUG] 2015-08-06 14:45:37,539(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:37,539(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:37,539(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@105738  
[DEBUG] 2015-08-06 14:45:37,540(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:37,540(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:37,540(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e7820  
[DEBUG] 2015-08-06 14:45:37,540(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:37,540(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:37,540(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1479feb  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f11404  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d15445  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:37,541(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@704baa  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@bfea1d  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@b2002f  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@b2a2d8  
[DEBUG] 2015-08-06 14:45:37,542(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:37,543(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@861f24  
[DEBUG] 2015-08-06 14:45:37,543(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:37,543(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:37,543(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f26605  
[DEBUG] 2015-08-06 14:45:37,543(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fe748f  
[DEBUG] 2015-08-06 14:45:37,543(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:37,544(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:37,544(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f6235  
[DEBUG] 2015-08-06 14:45:37,544(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d85f79  
[DEBUG] 2015-08-06 14:45:37,544(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:37,544(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c282a1  
[DEBUG] 2015-08-06 14:45:37,544(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e79f1  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1dfc547  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@111a3a4  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:37,545(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f78ef1  
[DEBUG] 2015-08-06 14:45:37,546(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d6776d  
[DEBUG] 2015-08-06 14:45:37,546(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17a8a02  
[DEBUG] 2015-08-06 14:45:37,546(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:37,546(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:37,546(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@12b3d53  
[DEBUG] 2015-08-06 14:45:37,546(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3570b0  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@12a3722  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@982589  
[DEBUG] 2015-08-06 14:45:37,547(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c0e45a  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a31e1b  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:37,548(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@198a455  
[DEBUG] 2015-08-06 14:45:37,549(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1112783  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 14:45:37,550(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 14:45:37,551(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 14:45:37,551(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19a0feb  
[DEBUG] 2015-08-06 14:45:37,551(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:45:37,551(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@134f69a  
[DEBUG] 2015-08-06 14:45:37,551(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:45:37,551(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@a4e2e3  
[DEBUG] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:45:37,552(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,553(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:45:37,553(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@a4e743  
[DEBUG] 2015-08-06 14:45:37,553(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:45:37,553(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@a6d51e  
[DEBUG] 2015-08-06 14:45:37,553(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:45:37,553(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@9f671b  
[DEBUG] 2015-08-06 14:45:37,554(1337) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:45:37,554(1337) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:45:37,554(1337) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 14:45:37,556(1339) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:37,557(1340) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:45:37,557(1340) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:45:37,557(1340) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:45:37,557(1340) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:45:37,557(1340) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:45:37,557(1340) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,558(1341) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,558(1341) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,558(1341) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,559(1342) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,559(1342) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:45:37,559(1342) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,559(1342) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:45:37,560(1343) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,560(1343) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,560(1343) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,561(1344) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:45:37,561(1344) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 4ae50f64-99f6-4dac-bbbb-4afcf2e403df (unnamed)  
[INFO ] 2015-08-06 14:45:37,561(1344) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:45:37,561(1344) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:45:37,561(1344) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:45:37,561(1344) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:45:37,562(1345) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:45:37,562(1345) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:45:37,563(1346) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:45:37,563(1346) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:45:37,563(1346) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:45:37,564(1347) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:45:37,564(1347) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:45:37,564(1347) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:45:37,576(1359) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 14:45:37,576(1359) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 14:45:37,576(1359) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 14:45:37,576(1359) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 14:45:37,577(1360) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:45:37,577(1360) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:45:37,578(1361) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:45:37,578(1361) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:45:37,604(1387) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:37,604(1387) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:45:37,649(1432) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388435376  
[DEBUG] 2015-08-06 14:45:37,649(1432) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 14:45:37,652(1435) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 14:45:37,652(1435) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 14:45:37,652(1435) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 14:45:37,662(1445) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949500848799744, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:45:37,672(1455) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:37,673(1456) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:45:37,673(1456) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949500849782785, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:45:37,673(1456) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:37,673(1456) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:45:37,673(1456) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949500849782786, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:45:37,674(1457) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:45:37,674(1457) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:45:37,674(1457) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949500849848323, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:45:37,674(1457) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 14:45:37,674(1457) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 14:45:37,675(1458) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 14:45:37,675(1458) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 14:45:37,677(1460) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 14:45:37,677(1460) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 14:45:37,677(1460) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 14:45:37,678(1461) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949500848799744, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 14:45:37,678(1461) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949500849782785, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 14:45:37,678(1461) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949500849848323, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 14:45:37,678(1461) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949500849782786, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 14:45:37,694(1477) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 14:45:37,694(1477) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:45:37,711(1494) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:45:37,711(1494) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:45:37,712(1495) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:45:37,712(1495) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:45:37,712(1495) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:45:37,712(1495) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:45:37,713(1496) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 14:45:37,714(1497) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 14:45:37,715(1498) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:225) –> [main] Could not execute JDBC batch update [insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)]  
java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:108)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:81)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:30)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[WARN ] 2015-08-06 14:45:37,716(1499) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:233) –> [main] SQL Error: 1264, SQLState: 22001  
[ERROR] 2015-08-06 14:45:37,716(1499) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:234) –> [main] Data truncation: Out of range value for column 'ID' at row 1  
[WARN ] 2015-08-06 14:45:37,717(1500) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:127) –> [main] exception commiting underlying transaction  
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:102)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:275)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:108)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:81)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:30)
Caused by: java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	... 11 more
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[DEBUG] 2015-08-06 14:45:37,717(1500) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 14:45:37,719(1502) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 14:45:37,719(1502) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:45:37,721(1504) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 14:45:37,721(1504) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:47:04,662(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:04,665(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:04,668(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:04,669(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:47:04,671(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:47:04,671(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:47:04,673(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:04,673(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:04,674(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:04,676(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:04,676(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:04,676(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:04,686(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:04,686(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:04,687(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:04,690(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:04,692(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:04,692(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:04,695(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:04,695(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:04,695(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:04,697(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:04,698(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:04,698(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:04,700(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:04,700(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:04,701(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:04,703(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:04,703(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:04,705(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:04,705(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:04,707(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:04,707(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:04,708(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:04,708(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:04,712(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:04,712(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:04,715(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:04,715(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:04,718(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:04,718(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:04,718(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:04,720(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:47:04,723(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:04,724(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:04,724(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:04,725(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:47:04,727(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:04,727(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:04,729(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:04,729(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:04,731(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:04,731(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:04,733(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:04,733(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:04,736(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:04,736(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:04,737(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:47:04,738(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:47:04,741(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:04,741(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:04,741(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:04,743(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:04,743(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:04,743(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:04,744(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:47:04,746(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:04,746(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:04,747(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:04,749(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:04,749(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:04,749(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:04,750(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:47:04,758(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:04,758(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:04,759(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:04,760(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:04,764(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:04,764(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:04,765(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:04,767(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:04,767(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:04,770(108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:47:04,775(113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:04,775(113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:04,776(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 14:47:04,776(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 14:47:04,776(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 14:47:04,777(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 14:47:04,777(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 14:47:04,777(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 14:47:04,777(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 14:47:04,777(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 14:47:04,823(161) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 14:47:04,823(161) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 14:47:04,833(171) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 14:47:04,835(173) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 14:47:04,840(178) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 14:47:04,844(182) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 14:47:04,902(240) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:47:04,903(241) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:47:04,904(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:47:04,904(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:47:04,907(245) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:47:04,907(245) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:47:04,909(247) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:47:04,910(248) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:47:04,910(248) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:47:04,911(249) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:47:04,912(250) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:47:04,913(251) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:47:04,914(252) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:47:04,914(252) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:47:04,916(254) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:47:04,918(256) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:47:04,918(256) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:47:04,973(311) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:47:04,973(311) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:47:04,974(312) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:47:04,974(312) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:47:04,998(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:47:04,999(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:47:04,999(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:47:04,999(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:47:04,999(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:47:04,999(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:47:04,999(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:47:05,000(338) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:47:05,000(338) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:47:05,000(338) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:47:05,000(338) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:47:05,000(338) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:47:05,007(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,007(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,008(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,008(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:47:05,008(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:47:05,008(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:47:05,008(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,009(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,009(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,009(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,009(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,009(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,009(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,010(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,010(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,010(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,010(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,010(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,010(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,011(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,011(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,011(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,011(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,012(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,012(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,012(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,012(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,012(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:05,013(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:05,013(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:05,013(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:05,013(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:05,014(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:05,014(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:05,014(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:05,014(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:05,015(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:05,015(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:05,015(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:05,015(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,015(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,016(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,016(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:47:05,016(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,016(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:05,017(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,018(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,019(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:05,020(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:05,021(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 14:47:05,022(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 14:47:05,023(361) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:47:05,023(361) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:47:05,023(361) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:47:05,023(361) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:47:05,023(361) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:47:05,024(362) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:47:05,025(363) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:47:05,025(363) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:47:05,025(363) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:47:05,025(363) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:47:05,025(363) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:47:05,031(369) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:47:05,031(369) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:47:05,031(369) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:47:05,032(370) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:47:05,036(374) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:47:05,037(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:47:05,037(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:47:05,037(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:47:05,037(375) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:47:05,037(375) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:47:05,038(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,038(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,039(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,039(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:47:05,039(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:47:05,039(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:47:05,039(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,039(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,040(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,040(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,040(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,040(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,040(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,040(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,041(379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,042(380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,042(380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,042(380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,042(380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,042(380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,042(380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:05,043(381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:05,044(382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:05,044(382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:05,044(382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:05,044(382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:05,044(382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:05,044(382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,045(383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,045(383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,045(383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:47:05,045(383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,045(383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,045(383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,046(384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:47:05,046(384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:05,046(384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:05,046(384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:05,046(384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:05,046(384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:05,047(385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:05,047(385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:05,047(385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:05,047(385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:05,047(385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:05,047(385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,048(386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:47:05,049(387) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,049(387) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,049(387) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,049(387) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:05,050(388) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:05,051(389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,051(389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,051(389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:05,051(389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:05,051(389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:05,051(389) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 14:47:05,052(390) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 14:47:05,053(391) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 14:47:05,053(391) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 14:47:05,053(391) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 14:47:05,053(391) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:47:05,053(391) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:47:05,054(392) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:47:05,055(393) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:47:05,055(393) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:47:05,055(393) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:47:05,055(393) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:47:05,055(393) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:47:05,055(393) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:47:05,056(394) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:47:05,056(394) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:47:05,058(396) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:47:05,058(396) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:47:05,059(397) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:47:05,059(397) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:47:05,063(401) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:47:05,063(401) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 14:47:05,063(401) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:47:05,064(402) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:47:05,064(402) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:47:05,064(402) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:47:05,064(402) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:47:05,064(402) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 14:47:05,064(402) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:47:05,065(403) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:47:05,065(403) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 14:47:05,085(423) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:47:05,135(473) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:47:05,135(473) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 14:47:05,141(479) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:05,172(510) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 14:47:05,175(513) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 14:47:05,183(521) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 14:47:05,187(525) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 14:47:05,221(559) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:47:05,226(564) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 14:47:05,228(566) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 14:47:05,230(568) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 14:47:05,237(575) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:47:05,237(575) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 14:47:05,237(575) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 14:47:05,237(575) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 14:47:05,237(575) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 14:47:05,238(576) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 14:47:05,239(577) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:47:05,239(577) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 14:47:05,239(577) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 14:47:05,239(577) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 14:47:05,242(580) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 14:47:05,242(580) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 14:47:05,242(580) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 14:47:05,242(580) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 14:47:05,243(581) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 14:47:05,243(581) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:47:05,245(583) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:05,246(584) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:05,246(584) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:47:05,246(584) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:47:05,246(584) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:47:05,246(584) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 14:47:05,253(591) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 14:47:05,284(622) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 14:47:05,297(635) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:47:05,298(636) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:47:05,301(639) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:47:05,306(644) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:47:05,375(713) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:47:05,375(713) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:47:05,376(714) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:47:05,376(714) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:47:05,377(715) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:47:05,381(719) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:47:05,382(720) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:47:05,389(727) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:47:05,390(728) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:47:05,390(728) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:47:05,398(736) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 14:47:05,398(736) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 14:47:05,398(736) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:47:05,693(1031) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 14:47:05,712(1050) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:47:05,727(1065) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:47:05,727(1065) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:47:05,729(1067) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:47:05,731(1069) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:47:05,731(1069) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:47:05,731(1069) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:47:05,731(1069) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:47:05,731(1069) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:47:05,732(1070) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:47:05,732(1070) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:47:05,737(1075) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:47:05,737(1075) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:47:05,738(1076) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:47:05,738(1076) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:47:05,738(1076) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:47:05,739(1077) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:47:05,739(1077) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:47:05,739(1077) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:47:05,741(1079) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:47:05,741(1079) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:47:05,741(1079) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:47:05,741(1079) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:47:05,741(1079) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:47:05,742(1080) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:47:05,742(1080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:47:05,742(1080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:47:05,746(1084) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:47:05,747(1085) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:47:05,747(1085) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:47:05,747(1085) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:47:05,747(1085) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:47:05,747(1085) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:47:05,763(1101) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:47:05,768(1106) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 14:47:05,769(1107) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,769(1107) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,770(1108) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:05,771(1109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,771(1109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,771(1109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:05,771(1109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,771(1109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,772(1110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:05,773(1111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,773(1111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,773(1111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:05,773(1111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:05,773(1111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:05,773(1111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:05,774(1112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,775(1113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:05,776(1114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:05,777(1115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,778(1116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,778(1116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:05,778(1116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:47:05,778(1116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,778(1116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,778(1116) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,779(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:05,780(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:05,780(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,780(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,780(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:05,780(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:05,780(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:05,781(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:47:05,781(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:05,781(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:05,781(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 14:47:05,781(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 14:47:05,781(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:47:05,782(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:47:05,783(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:05,784(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:47:05,785(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:05,787(1125) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:47:05,787(1125) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:47:05,802(1140) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 14:47:05,806(1144) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 14:47:05,937(1275) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:05,937(1275) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:47:05,937(1275) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:47:05,937(1275) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:47:05,937(1275) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:47:05,937(1275) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:47:05,957(1295) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:05,957(1295) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:05,958(1296) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:05,958(1296) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:05,958(1296) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:05,958(1296) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:47:05,958(1296) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:05,959(1297) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:05,959(1297) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:05,959(1297) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:05,965(1303) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:05,965(1303) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:05,983(1321) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 14:47:05,983(1321) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 989b63c9-e4b1-4b0a-b817-4538c5e198df (unnamed)  
[INFO ] 2015-08-06 14:47:05,983(1321) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:47:05,984(1322) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:47:05,988(1326) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:47:05,989(1327) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:47:05,990(1328) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:47:05,990(1328) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:47:05,991(1329) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:47:05,991(1329) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:47:05,991(1329) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:47:05,992(1330) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:47:05,992(1330) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:47:05,992(1330) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:47:05,999(1337) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 14:47:05,999(1337) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:47:06,000(1338) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 14:47:06,000(1338) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 14:47:06,000(1338) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) –> [main] create table anno_contact (ID decimal(19,2) not null, EMAIL varchar(255), LOGINid varchar(255), NAME varchar(255), PASSWORD varchar(255), primary key (ID))  
[INFO ] 2015-08-06 14:47:06,353(1691) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:47:06,360(1698) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:47:06,361(1699) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:47:06,363(1701) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:47:06,363(1701) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:47:06,363(1701) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:47:06,364(1702) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:47:06,364(1702) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:06,364(1702) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:06,364(1702) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:47:06,365(1703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:47:06,365(1703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:47:06,365(1703) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:47:06,367(1705) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:47:06,367(1705) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:47:06,368(1706) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:47:06,369(1707) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:47:06,376(1714) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:47:06,377(1715) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:47:06,377(1715) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:47:06,378(1716) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:47:06,379(1717) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:47:06,381(1719) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:47:06,381(1719) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:47:06,381(1719) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:47:06,382(1720) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:47:06,382(1720) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:47:06,382(1720) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:47:06,382(1720) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 14:47:06,382(1720) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:47:06,413(1751) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 14:47:06,414(1752) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:47:06,414(1752) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:47:06,414(1752) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:47:06,415(1753) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:47:06,415(1753) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:47:06,416(1754) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:47:06,417(1755) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:47:06,418(1756) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:47:06,418(1756) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:47:06,418(1756) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:47:06,418(1756) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:47:06,422(1760) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:47:06,422(1760) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 14:47:06,422(1760) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@19fdbcb after already scoped org.hibernate.impl.SessionFactoryImpl@13c550f  
[DEBUG] 2015-08-06 14:47:06,423(1761) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:06,423(1761) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:06,423(1761) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:47:06,423(1761) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:47:06,423(1761) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:47:06,423(1761) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:47:06,424(1762) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:06,425(1763) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:47:06,426(1764) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:06,427(1765) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:47:06,427(1765) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:06,427(1765) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:47:06,427(1765) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:06,427(1765) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:47:06,427(1765) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:47:06,428(1766) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:47:06,429(1767) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:06,429(1767) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:06,429(1767) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:47:06,429(1767) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:47:06,429(1767) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:06,429(1767) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:47:06,430(1768) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:06,431(1769) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:47:06,431(1769) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:47:06,431(1769) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:47:06,431(1769) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:06,431(1769) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:06,431(1769) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:47:06,432(1770) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:06,432(1770) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:06,432(1770) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:47:06,432(1770) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:47:06,432(1770) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:47:06,433(1771) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:06,434(1772) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:06,434(1772) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:06,434(1772) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:06,434(1772) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:06,434(1772) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:06,434(1772) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:06,435(1773) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:06,435(1773) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:06,435(1773) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:47:06,435(1773) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:06,435(1773) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:47:06,436(1774) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12d8ecd  
[DEBUG] 2015-08-06 14:47:06,436(1774) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1fa5e5e  
[DEBUG] 2015-08-06 14:47:06,436(1774) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@497062  
[DEBUG] 2015-08-06 14:47:06,436(1774) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1716fa0  
[DEBUG] 2015-08-06 14:47:06,436(1774) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57807a  
[DEBUG] 2015-08-06 14:47:06,436(1774) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b3cac9  
[DEBUG] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c67248  
[DEBUG] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b5c22f  
[DEBUG] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:06,437(1775) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:47:06,438(1776) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:06,439(1777) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:47:06,439(1777) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:47:06,439(1777) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:47:06,439(1777) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:47:06,439(1777) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:47:06,439(1777) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:47:06,440(1778) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:47:06,440(1778) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:47:06,440(1778) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 14:47:06,443(1781) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:06,443(1781) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:47:06,443(1781) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:47:06,443(1781) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:47:06,443(1781) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:47:06,443(1781) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:47:06,444(1782) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:06,444(1782) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:06,444(1782) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:06,444(1782) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:06,445(1783) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:06,445(1783) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:47:06,445(1783) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:06,446(1784) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:47:06,446(1784) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:06,446(1784) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:06,447(1785) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:06,447(1785) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:47:06,447(1785) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: fac4d124-8188-468a-810a-c1e1c04ab143 (unnamed)  
[INFO ] 2015-08-06 14:47:06,447(1785) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:47:06,447(1785) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:47:06,447(1785) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:47:06,447(1785) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:47:06,449(1787) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:47:06,449(1787) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:47:06,450(1788) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:47:06,450(1788) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:47:06,450(1788) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:47:06,451(1789) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:47:06,455(1793) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 14:47:06,455(1793) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:47:06,456(1794) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: anno_contact  
[DEBUG] 2015-08-06 14:47:06,457(1795) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 14:47:06,457(1795) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) –> [main] create table anno_contact (ID decimal(19,2) not null, EMAIL varchar(255), LOGINid varchar(255), NAME varchar(255), PASSWORD varchar(255), primary key (ID))  
[INFO ] 2015-08-06 14:47:06,753(2091) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:47:06,755(2093) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:47:06,755(2093) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:47:06,779(2117) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:06,780(2118) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:47:06,819(2157) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388436267  
[DEBUG] 2015-08-06 14:47:06,819(2157) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 14:47:06,822(2160) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 14:47:06,822(2160) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 14:47:06,822(2160) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 14:47:06,830(2168) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949506692513792, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:47:06,847(2185) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:06,847(2185) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:47:06,847(2185) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949506693890049, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:47:06,848(2186) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:06,848(2186) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:47:06,848(2186) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949506693955586, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:47:06,848(2186) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:47:06,849(2187) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:47:06,849(2187) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949506694021123, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:47:06,849(2187) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 14:47:06,849(2187) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 14:47:06,850(2188) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 14:47:06,851(2189) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 14:47:06,853(2191) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 14:47:06,853(2191) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 14:47:06,854(2192) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 14:47:06,854(2192) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949506694021123, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 14:47:06,854(2192) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949506693955586, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 14:47:06,855(2193) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949506693890049, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 14:47:06,855(2193) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949506692513792, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 14:47:06,875(2213) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 14:47:06,876(2214) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:47:06,895(2233) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:47:06,895(2233) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:47:06,896(2234) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:47:06,896(2234) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:47:06,896(2234) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:47:06,896(2234) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:47:06,896(2234) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 14:47:06,898(2236) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 14:47:06,900(2238) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:225) –> [main] Could not execute JDBC batch update [insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)]  
java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:108)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:81)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:30)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[WARN ] 2015-08-06 14:47:06,901(2239) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:233) –> [main] SQL Error: 1264, SQLState: 22001  
[ERROR] 2015-08-06 14:47:06,901(2239) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:234) –> [main] Data truncation: Out of range value for column 'ID' at row 1  
[WARN ] 2015-08-06 14:47:06,901(2239) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:127) –> [main] exception commiting underlying transaction  
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:102)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:275)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:108)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:81)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:30)
Caused by: java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	... 11 more
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[DEBUG] 2015-08-06 14:47:06,902(2240) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 14:47:06,903(2241) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 14:47:06,903(2241) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:47:06,905(2243) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 14:47:06,905(2243) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:49:57,364(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,368(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,370(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,372(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:49:57,374(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:49:57,375(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:49:57,378(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,378(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,379(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,380(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,380(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,381(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,389(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,389(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,389(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,391(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,393(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,393(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,395(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,396(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,396(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,398(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,398(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,398(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,400(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,400(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,400(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,403(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:57,404(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:57,405(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:57,406(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:57,407(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:57,407(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:57,408(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:57,408(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:57,411(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:57,411(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:57,413(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:57,414(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:57,416(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,416(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,416(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,417(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:49:57,419(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,419(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,419(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,421(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:49:57,423(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:57,423(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:57,425(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:57,425(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:57,426(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:57,426(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:57,428(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:57,428(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:57,431(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:57,431(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:57,432(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:49:57,433(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:49:57,435(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,435(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,435(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,437(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,437(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,437(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,438(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:49:57,439(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,439(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,439(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,441(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,441(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,441(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,442(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:49:57,450(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:57,451(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:57,452(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:57,453(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:57,459(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:57,459(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:57,459(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:57,460(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:57,461(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:57,463(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:49:57,467(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:57,467(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:57,468(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 14:49:57,468(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 14:49:57,468(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 14:49:57,468(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 14:49:57,469(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 14:49:57,469(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 14:49:57,469(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 14:49:57,469(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 14:49:57,511(147) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 14:49:57,512(148) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 14:49:57,519(155) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 14:49:57,522(158) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 14:49:57,526(162) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 14:49:57,529(165) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 14:49:57,583(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:49:57,584(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:49:57,585(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:49:57,585(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:49:57,587(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:49:57,588(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:49:57,590(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:49:57,591(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:49:57,592(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:49:57,592(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:49:57,593(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:49:57,593(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:49:57,594(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:49:57,594(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:49:57,595(231) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:49:57,597(233) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:49:57,598(234) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:49:57,643(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:49:57,643(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:49:57,643(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:49:57,644(280) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:49:57,678(314) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:49:57,678(314) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:49:57,678(314) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:49:57,679(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:49:57,679(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:49:57,679(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:49:57,679(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:49:57,680(316) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:49:57,680(316) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:49:57,680(316) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:49:57,680(316) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:49:57,681(317) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:49:57,688(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,688(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,688(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,688(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:49:57,688(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:49:57,689(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:49:57,689(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,689(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,689(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,689(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,689(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,690(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,690(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,690(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,690(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,691(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,691(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,691(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,691(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,692(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,692(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,692(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,692(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,692(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,693(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,693(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,693(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,693(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:57,694(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:57,694(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:57,694(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:57,694(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:57,695(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:57,695(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:57,695(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:57,695(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:57,695(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:57,696(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:57,696(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:57,696(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,696(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,696(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,696(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:49:57,697(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,697(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,697(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,697(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:49:57,697(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:57,697(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:57,698(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:57,698(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:57,698(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:57,698(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:57,698(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:57,698(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:57,699(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:57,699(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:57,699(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:49:57,699(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:49:57,699(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:49:57,700(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,701(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,701(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,701(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,701(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,701(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,701(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:57,702(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 14:49:57,703(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 14:49:57,704(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 14:49:57,704(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 14:49:57,704(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 14:49:57,704(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 14:49:57,704(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 14:49:57,705(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 14:49:57,705(341) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:49:57,705(341) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:49:57,705(341) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:49:57,705(341) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:49:57,706(342) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:49:57,707(343) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:49:57,707(343) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:49:57,707(343) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:49:57,707(343) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:49:57,707(343) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:49:57,707(343) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:49:57,715(351) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:49:57,715(351) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:49:57,715(351) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:49:57,716(352) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:49:57,720(356) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:49:57,720(356) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:49:57,720(356) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:49:57,721(357) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:49:57,722(358) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:49:57,722(358) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:49:57,723(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,724(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:57,725(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,725(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,725(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:57,725(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,725(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,725(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:57,726(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:57,727(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,728(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:57,729(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,730(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:57,731(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:57,732(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:57,733(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:57,733(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:57,733(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:57,733(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:49:57,733(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:57,733(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:57,734(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 14:49:57,734(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 14:49:57,734(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 14:49:57,734(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 14:49:57,734(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 14:49:57,734(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 14:49:57,735(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 14:49:57,735(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 14:49:57,735(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:49:57,735(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:49:57,735(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:49:57,735(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:49:57,736(372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:49:57,737(373) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:49:57,737(373) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:49:57,737(373) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:49:57,737(373) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:49:57,737(373) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:49:57,737(373) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:49:57,740(376) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:49:57,740(376) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:49:57,740(376) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:49:57,741(377) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:49:57,745(381) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:49:57,746(382) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 14:49:57,746(382) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:49:57,746(382) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:49:57,746(382) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 14:49:57,768(404) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:49:57,826(462) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:49:57,826(462) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 14:49:57,832(468) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:57,862(498) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 14:49:57,865(501) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 14:49:57,874(510) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 14:49:57,878(514) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 14:49:57,912(548) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:49:57,919(555) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 14:49:57,922(558) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 14:49:57,924(560) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 14:49:57,929(565) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:49:57,930(566) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 14:49:57,930(566) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 14:49:57,930(566) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 14:49:57,931(567) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:49:57,931(567) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 14:49:57,931(567) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 14:49:57,931(567) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 14:49:57,932(568) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:49:57,932(568) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 14:49:57,932(568) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 14:49:57,932(568) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 14:49:57,932(568) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:49:57,932(568) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 14:49:57,933(569) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 14:49:57,933(569) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 14:49:57,935(571) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 14:49:57,935(571) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 14:49:57,935(571) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 14:49:57,935(571) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 14:49:57,935(571) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 14:49:57,936(572) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:49:57,937(573) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:57,937(573) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:57,937(573) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:49:57,937(573) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:49:57,937(573) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:49:57,938(574) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 14:49:57,941(577) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 14:49:57,963(599) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 14:49:57,974(610) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:49:57,976(612) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:49:57,980(616) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:49:57,984(620) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:49:58,060(696) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:49:58,060(696) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:49:58,061(697) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:49:58,061(697) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:49:58,061(697) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:49:58,066(702) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:49:58,067(703) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:49:58,074(710) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:49:58,074(710) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:49:58,075(711) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:49:58,082(718) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 14:49:58,083(719) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 14:49:58,083(719) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:49:58,347(983) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 14:49:58,366(1002) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:49:58,378(1014) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:49:58,378(1014) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:49:58,379(1015) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:49:58,381(1017) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:49:58,382(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:49:58,382(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:49:58,382(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:49:58,382(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:49:58,383(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:49:58,383(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:49:58,383(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:49:58,383(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:49:58,388(1024) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:49:58,388(1024) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:49:58,389(1025) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:49:58,389(1025) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:49:58,389(1025) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:49:58,389(1025) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:49:58,391(1027) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:49:58,391(1027) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:49:58,391(1027) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:49:58,391(1027) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:49:58,391(1027) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:49:58,392(1028) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:49:58,392(1028) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:49:58,393(1029) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:49:58,396(1032) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:49:58,397(1033) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:49:58,397(1033) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:49:58,397(1033) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:49:58,397(1033) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:49:58,397(1033) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:49:58,417(1053) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:49:58,421(1057) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:58,423(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:58,424(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:58,425(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:58,425(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:58,425(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:58,425(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:58,425(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:58,425(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:58,426(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:58,427(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:58,428(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:58,428(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:58,428(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:58,428(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:49:58,428(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:58,429(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:58,429(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:58,429(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:49:58,429(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:58,429(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:58,429(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:58,430(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:58,431(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,432(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:58,433(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 14:49:58,434(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:58,435(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:49:58,436(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:58,439(1075) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:49:58,439(1075) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:49:58,449(1085) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 14:49:58,454(1090) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 14:49:58,583(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:58,583(1219) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:49:58,584(1220) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:49:58,584(1220) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:49:58,584(1220) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:49:58,584(1220) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:49:58,607(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,607(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,607(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,607(1243) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,608(1244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,608(1244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:49:58,608(1244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,608(1244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,608(1244) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,609(1245) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,614(1250) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,615(1251) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,638(1274) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 14:49:58,639(1275) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 42d33154-7e50-4180-b4a2-064fbf5e4744 (unnamed)  
[INFO ] 2015-08-06 14:49:58,639(1275) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:49:58,639(1275) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:49:58,646(1282) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:49:58,646(1282) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:49:58,648(1284) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:49:58,648(1284) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:49:58,648(1284) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:49:58,648(1284) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:49:58,649(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:58,649(1285) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:58,649(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:49:58,649(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:49:58,649(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:49:58,649(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:49:58,650(1286) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:49:58,651(1287) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:49:58,651(1287) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:49:58,652(1288) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:49:58,680(1316) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 14:49:58,681(1317) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 14:49:58,681(1317) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 14:49:58,681(1317) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 14:49:58,681(1317) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:49:58,682(1318) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:49:58,684(1320) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:49:58,684(1320) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:49:58,685(1321) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:49:58,685(1321) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:49:58,685(1321) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:49:58,685(1321) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:49:58,686(1322) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:58,686(1322) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:58,686(1322) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:49:58,686(1322) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:49:58,686(1322) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:49:58,686(1322) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:49:58,687(1323) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:49:58,687(1323) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:49:58,687(1323) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:49:58,688(1324) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:49:58,694(1330) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:49:58,694(1330) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:49:58,694(1330) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:49:58,695(1331) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:49:58,698(1334) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:49:58,701(1337) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:49:58,701(1337) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:49:58,701(1337) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:49:58,701(1337) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:49:58,701(1337) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:49:58,702(1338) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:49:58,702(1338) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 14:49:58,702(1338) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:49:58,720(1356) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 14:49:58,722(1358) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:49:58,723(1359) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:49:58,723(1359) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:49:58,723(1359) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:49:58,723(1359) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:49:58,724(1360) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:49:58,725(1361) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:49:58,726(1362) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:49:58,730(1366) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:49:58,730(1366) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 14:49:58,730(1366) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 14:49:58,731(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:58,731(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:58,731(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:49:58,731(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:49:58,731(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:49:58,731(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:49:58,732(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:58,733(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:49:58,734(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:58,735(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:58,736(1372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:58,737(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:49:58,737(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:49:58,737(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:58,737(1373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:49:58,738(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:58,738(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:49:58,738(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:58,738(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:49:58,738(1374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:58,739(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:49:58,739(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:58,739(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:49:58,739(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:49:58,739(1375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:49:58,740(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:58,740(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:58,740(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:49:58,740(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:58,740(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:58,740(1376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:49:58,741(1377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:49:58,741(1377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:58,741(1377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:58,741(1377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:49:58,742(1378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:58,742(1378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:58,742(1378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:49:58,742(1378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:49:58,742(1378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,743(1379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,743(1379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:58,743(1379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:58,743(1379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,743(1379) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,744(1380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:58,744(1380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:58,744(1380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:58,744(1380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:49:58,744(1380) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:58,745(1381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:49:58,745(1381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 14:49:58,745(1381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 14:49:58,745(1381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 14:49:58,745(1381) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 14:49:58,746(1382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 14:49:58,746(1382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ce663c  
[DEBUG] 2015-08-06 14:49:58,746(1382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19a0feb  
[DEBUG] 2015-08-06 14:49:58,746(1382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18b1f8f  
[DEBUG] 2015-08-06 14:49:58,746(1382) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:49:58,747(1383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:49:58,747(1383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:49:58,747(1383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,747(1383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:49:58,747(1383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:49:58,747(1383) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:49:58,748(1384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:49:58,748(1384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:49:58,748(1384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:49:58,748(1384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:49:58,748(1384) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,749(1385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:49:58,749(1385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:49:58,749(1385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:49:58,749(1385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:49:58,749(1385) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:49:58,750(1386) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:49:58,750(1386) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:49:58,750(1386) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:49:58,751(1387) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 14:49:58,753(1389) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:58,753(1389) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:49:58,753(1389) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:49:58,753(1389) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:49:58,753(1389) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:49:58,753(1389) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:49:58,754(1390) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,754(1390) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,754(1390) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,755(1391) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,755(1391) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,755(1391) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:49:58,756(1392) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,756(1392) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:49:58,756(1392) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,756(1392) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,757(1393) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,757(1393) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:49:58,757(1393) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: d338594e-f19a-4afa-91dc-f55a3e941a48 (unnamed)  
[INFO ] 2015-08-06 14:49:58,757(1393) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:49:58,757(1393) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:49:58,758(1394) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:49:58,758(1394) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:49:58,758(1394) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:49:58,758(1394) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:49:58,758(1394) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:49:58,759(1395) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:49:58,760(1396) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:49:58,760(1396) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:49:58,761(1397) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:49:58,761(1397) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:49:58,774(1410) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 14:49:58,774(1410) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 14:49:58,774(1410) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 14:49:58,774(1410) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 14:49:58,775(1411) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:49:58,775(1411) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:49:58,776(1412) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:49:58,776(1412) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:49:58,801(1437) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:58,801(1437) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:49:58,844(1480) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388437988  
[DEBUG] 2015-08-06 14:49:58,845(1481) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 14:49:58,847(1483) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 14:49:58,848(1484) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 14:49:58,848(1484) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 14:49:58,857(1493) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949517966540800, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:49:58,872(1508) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:58,872(1508) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:49:58,873(1509) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949517967785985, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:49:58,873(1509) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:58,873(1509) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:49:58,873(1509) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949517967785986, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:49:58,874(1510) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:49:58,874(1510) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 14:49:58,874(1510) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949517967851523, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 14:49:58,874(1510) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 14:49:58,875(1511) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 14:49:58,875(1511) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 14:49:58,876(1512) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 14:49:58,879(1515) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 14:49:58,879(1515) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 14:49:58,880(1516) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 14:49:58,881(1517) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949517967785985, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 14:49:58,881(1517) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949517967851523, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 14:49:58,881(1517) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949517967785986, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 14:49:58,881(1517) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949517966540800, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 14:49:58,908(1544) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 14:49:58,908(1544) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:49:58,931(1567) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:49:58,932(1568) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:49:58,932(1568) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:49:58,932(1568) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:49:58,933(1569) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 14:49:58,933(1569) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:49:58,934(1570) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 14:49:58,936(1572) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 14:49:58,938(1574) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:225) –> [main] Could not execute JDBC batch update [insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)]  
java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:109)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:82)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:31)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[WARN ] 2015-08-06 14:49:58,940(1576) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:233) –> [main] SQL Error: 1264, SQLState: 22001  
[ERROR] 2015-08-06 14:49:58,940(1576) org.hibernate.util.JDBCExceptionReporter.logExceptions(JDBCExceptionReporter.java:234) –> [main] Data truncation: Out of range value for column 'ID' at row 1  
[WARN ] 2015-08-06 14:49:58,940(1576) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:127) –> [main] exception commiting underlying transaction  
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:102)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:275)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:268)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:184)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1216)
	at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:383)
	at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:133)
	at org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:125)
	at cn.cjp.demo.hibernate.shards.annotation.Main.ShardsTestCreate(Main.java:109)
	at cn.cjp.demo.hibernate.shards.annotation.Main.HibernateShardsTest(Main.java:82)
	at cn.cjp.demo.hibernate.shards.annotation.Main.main(Main.java:31)
Caused by: java.sql.BatchUpdateException: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2054)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:1467)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
	... 11 more
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'ID' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4094)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4028)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2490)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2651)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2734)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2155)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2458)
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:2006)
	... 14 more
[DEBUG] 2015-08-06 14:49:58,941(1577) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 14:49:58,943(1579) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 14:49:58,943(1579) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:49:58,946(1582) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 14:49:58,946(1582) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:51:36,517(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:36,521(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:36,523(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:36,524(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1adc30  
[DEBUG] 2015-08-06 14:51:36,527(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bc887b  
[DEBUG] 2015-08-06 14:51:36,527(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@166a22b  
[DEBUG] 2015-08-06 14:51:36,529(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:36,530(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:36,530(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:36,531(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:36,532(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:36,532(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:36,538(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:36,538(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:36,539(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:36,541(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:36,543(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:36,543(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:36,545(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:36,545(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:36,545(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:36,547(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:36,547(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:36,548(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:36,550(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:36,550(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:36,551(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:36,553(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:36,553(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:36,555(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:36,555(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:36,556(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:36,556(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:36,558(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:36,558(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:36,560(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:36,561(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:36,563(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:36,563(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:36,565(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:36,565(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:36,565(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:36,566(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@544ec1  
[DEBUG] 2015-08-06 14:51:36,568(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:36,568(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:36,568(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:36,569(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a212  
[DEBUG] 2015-08-06 14:51:36,571(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:36,571(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:36,573(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:36,573(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:36,574(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:36,575(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:36,576(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:36,576(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:36,578(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:36,578(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:36,579(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c9a690  
[DEBUG] 2015-08-06 14:51:36,580(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4fce71  
[DEBUG] 2015-08-06 14:51:36,582(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:36,583(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:36,583(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:36,585(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:36,585(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:36,586(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:36,587(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@10a2d64  
[DEBUG] 2015-08-06 14:51:36,588(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:36,588(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:36,588(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:36,590(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:36,590(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:36,590(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:36,591(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a17083  
[DEBUG] 2015-08-06 14:51:36,598(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:36,599(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:36,599(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12bb7e0  
[DEBUG] 2015-08-06 14:51:36,600(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 14:51:36,605(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:36,606(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:36,606(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4aeb52  
[DEBUG] 2015-08-06 14:51:36,607(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12a3793  
[DEBUG] 2015-08-06 14:51:36,607(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 14:51:36,609(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@d1fa5  
[DEBUG] 2015-08-06 14:51:36,612(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:36,612(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:36,613(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1394894  
[DEBUG] 2015-08-06 14:51:36,613(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cbfe9d  
[DEBUG] 2015-08-06 14:51:36,613(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 14:51:36,613(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 14:51:36,614(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 14:51:36,614(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 14:51:36,614(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 14:51:36,614(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 14:51:36,658(141) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 14:51:36,658(141) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 14:51:36,665(148) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 14:51:36,667(150) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 14:51:36,672(155) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 14:51:36,675(158) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 14:51:36,734(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:51:36,735(218) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:51:36,736(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:51:36,736(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:51:36,737(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:51:36,738(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:51:36,739(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:51:36,739(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:51:36,740(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:51:36,741(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:51:36,741(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:51:36,742(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:51:36,742(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:51:36,743(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:51:36,744(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:51:36,745(228) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: xml/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:51:36,746(229) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: xml/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:51:36,794(277) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:51:36,794(277) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:51:36,794(277) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:51:36,795(278) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:51:36,823(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:51:36,823(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:51:36,823(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:51:36,823(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:51:36,823(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:51:36,824(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:51:36,824(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLInnoDBDialect  
[DEBUG] 2015-08-06 14:51:36,824(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=validate  
[DEBUG] 2015-08-06 14:51:36,824(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:51:36,824(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[DEBUG] 2015-08-06 14:51:36,825(308) org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2343) –> [main] session-factory config [null] named resource [xml/ContactEntity.hbm.xml] for mapping  
[INFO ] 2015-08-06 14:51:36,825(308) org.hibernate.cfg.Configuration.addResource(Configuration.java:789) –> [main] Reading mappings from resource : xml/ContactEntity.hbm.xml  
[DEBUG] 2015-08-06 14:51:36,848(331) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]  
[WARN ] 2015-08-06 14:51:36,849(332) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:51:36,849(332) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:51:36,849(332) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath  
[INFO ] 2015-08-06 14:51:37,049(532) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:51:37,049(532) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=validate, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=validate, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.xml.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:51:37,051(534) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,051(534) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,051(534) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1adc30  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bc887b  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@166a22b  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,060(543) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,061(544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,061(544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,061(544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,061(544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,061(544) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,062(545) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,062(545) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,062(545) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,065(548) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,065(548) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,065(548) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,066(549) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,066(549) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,066(549) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,066(549) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,067(550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,067(550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,067(550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:37,067(550) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:37,068(551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:37,068(551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:37,068(551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:37,068(551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:37,068(551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:37,068(551) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:37,069(552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:37,069(552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:37,069(552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:37,069(552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:37,069(552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,069(552) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,070(553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,070(553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@544ec1  
[DEBUG] 2015-08-06 14:51:37,070(553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,070(553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,070(553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,070(553) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a212  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:37,071(554) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c9a690  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4fce71  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,072(555) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,073(556) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,073(556) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,073(556) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,073(556) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@10a2d64  
[DEBUG] 2015-08-06 14:51:37,073(556) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,073(556) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a17083  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,074(557) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12bb7e0  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4aeb52  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12a3793  
[DEBUG] 2015-08-06 14:51:37,075(558) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 14:51:37,076(559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@d1fa5  
[DEBUG] 2015-08-06 14:51:37,076(559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:37,076(559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:37,076(559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b0668  
[DEBUG] 2015-08-06 14:51:37,076(559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d5a0  
[DEBUG] 2015-08-06 14:51:37,076(559) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@701a27  
[DEBUG] 2015-08-06 14:51:37,077(560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c50507  
[DEBUG] 2015-08-06 14:51:37,077(560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cd107f  
[DEBUG] 2015-08-06 14:51:37,077(560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f64158  
[DEBUG] 2015-08-06 14:51:37,077(560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c2378  
[DEBUG] 2015-08-06 14:51:37,077(560) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cc262  
[DEBUG] 2015-08-06 14:51:37,077(560) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:51:37,078(561) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:51:37,079(562) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:51:37,079(562) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:51:37,079(562) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:51:37,079(562) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:51:37,079(562) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:51:37,079(562) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:51:37,079(562) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: xml/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:51:37,079(562) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: xml/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:51:37,081(564) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:51:37,081(564) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:51:37,081(564) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:51:37,082(565) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:51:37,085(568) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:51:37,085(568) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:51:37,085(568) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:51:37,085(568) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:51:37,085(568) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:51:37,085(568) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:51:37,086(569) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLInnoDBDialect  
[DEBUG] 2015-08-06 14:51:37,086(569) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=validate  
[DEBUG] 2015-08-06 14:51:37,086(569) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:51:37,086(569) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[DEBUG] 2015-08-06 14:51:37,086(569) org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2343) –> [main] session-factory config [null] named resource [xml/ContactEntity.hbm.xml] for mapping  
[INFO ] 2015-08-06 14:51:37,086(569) org.hibernate.cfg.Configuration.addResource(Configuration.java:789) –> [main] Reading mappings from resource : xml/ContactEntity.hbm.xml  
[DEBUG] 2015-08-06 14:51:37,088(571) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]  
[WARN ] 2015-08-06 14:51:37,089(572) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:51:37,089(572) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:51:37,089(572) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath  
[INFO ] 2015-08-06 14:51:37,108(591) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:51:37,108(591) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=validate, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=validate, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.xml.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:51:37,109(592) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,109(592) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,109(592) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,109(592) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1adc30  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bc887b  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@166a22b  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,110(593) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,111(594) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:37,112(595) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,113(596) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@544ec1  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a212  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:37,114(597) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:37,115(598) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:37,115(598) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:37,115(598) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:37,115(598) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:37,115(598) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c9a690  
[DEBUG] 2015-08-06 14:51:37,115(598) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4fce71  
[DEBUG] 2015-08-06 14:51:37,116(599) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,116(599) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,116(599) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,116(599) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,116(599) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,116(599) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@10a2d64  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,117(600) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,118(601) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a17083  
[DEBUG] 2015-08-06 14:51:37,118(601) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,118(601) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,118(601) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12bb7e0  
[DEBUG] 2015-08-06 14:51:37,118(601) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 14:51:37,118(601) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4aeb52  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12a3793  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@d1fa5  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c623af  
[DEBUG] 2015-08-06 14:51:37,119(602) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@50ca0c  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e753  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15311bd  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b1aebf  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1478a43  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c65216  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1372656  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:51:37,120(603) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:51:37,121(604) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:51:37,122(605) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:51:37,122(605) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: xml/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:51:37,122(605) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: xml/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:51:37,124(607) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:51:37,124(607) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:51:37,124(607) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:51:37,125(608) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:51:37,126(609) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:51:37,126(609) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 14:51:37,126(609) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:51:37,127(610) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:51:37,127(610) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLInnoDBDialect  
[DEBUG] 2015-08-06 14:51:37,127(610) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 14:51:37,127(610) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:51:37,127(610) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:51:37,127(610) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.xml.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLInnoDBDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 14:51:37,149(632) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:51:37,189(672) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[INFO ] 2015-08-06 14:51:37,209(692) org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:353) –> [main] Mapping class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity -> CONTACT  
[DEBUG] 2015-08-06 14:51:37,219(702) org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) –> [main] Mapped property: Id -> ID  
[DEBUG] 2015-08-06 14:51:37,225(708) org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) –> [main] Mapped property: EMail -> EMAIL  
[DEBUG] 2015-08-06 14:51:37,225(708) org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) –> [main] Mapped property: Name -> NAME  
[DEBUG] 2015-08-06 14:51:37,225(708) org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) –> [main] Mapped property: LoginId -> LOGIN_ID  
[DEBUG] 2015-08-06 14:51:37,226(709) org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1354) –> [main] Mapped property: Password -> PASSWORD  
[DEBUG] 2015-08-06 14:51:37,226(709) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:51:37,227(710) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:51:37,228(711) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:51:37,228(711) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:51:37,228(711) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:51:37,228(711) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:51:37,228(711) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:51:37,228(711) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 14:51:37,229(712) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 14:51:37,249(732) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 14:51:37,258(741) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:51:37,259(742) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:51:37,262(745) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:51:37,266(749) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:51:37,363(846) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:51:37,363(846) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:51:37,363(846) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:51:37,364(847) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:51:37,364(847) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:51:37,368(851) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:51:37,368(851) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:51:37,377(860) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:51:37,377(860) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:51:37,377(860) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:51:37,384(867) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 14:51:37,384(867) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 14:51:37,384(867) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:51:37,649(1132) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 14:51:37,670(1153) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLInnoDBDialect  
[INFO ] 2015-08-06 14:51:37,683(1166) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:51:37,684(1167) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:51:37,685(1168) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:51:37,687(1170) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:51:37,687(1170) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:51:37,687(1170) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:51:37,687(1170) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:51:37,687(1170) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:51:37,688(1171) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:51:37,688(1171) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:51:37,688(1171) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:51:37,688(1171) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:51:37,689(1172) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:51:37,689(1172) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:51:37,689(1172) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:51:37,689(1172) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:51:37,689(1172) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:51:37,689(1172) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:51:37,691(1174) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:51:37,691(1174) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:51:37,691(1174) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:51:37,691(1174) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:51:37,691(1174) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:51:37,691(1174) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:51:37,692(1175) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:51:37,692(1175) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:51:37,701(1184) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:51:37,702(1185) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:51:37,702(1185) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:51:37,703(1186) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:51:37,703(1186) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:51:37,703(1186) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:51:37,721(1204) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:51:37,726(1209) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 14:51:37,727(1210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,727(1210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,727(1210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a786c3  
[DEBUG] 2015-08-06 14:51:37,727(1210) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1adc30  
[DEBUG] 2015-08-06 14:51:37,728(1211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bc887b  
[DEBUG] 2015-08-06 14:51:37,728(1211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@166a22b  
[DEBUG] 2015-08-06 14:51:37,728(1211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,728(1211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,728(1211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa57fb  
[DEBUG] 2015-08-06 14:51:37,728(1211) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@186768e  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10bc49d  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,729(1212) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,730(1213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ab28fe  
[DEBUG] 2015-08-06 14:51:37,730(1213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,730(1213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,730(1213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15b0afd  
[DEBUG] 2015-08-06 14:51:37,730(1213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,730(1213) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37fb1e  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14c1103  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ea5671  
[DEBUG] 2015-08-06 14:51:37,731(1214) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139eeda  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1b4fad5  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@c68c3  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:37,732(1215) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1df5a8f  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@196c1b0  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1db699b  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@544ec1  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,733(1216) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,734(1217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14da8f4  
[DEBUG] 2015-08-06 14:51:37,734(1217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78a212  
[DEBUG] 2015-08-06 14:51:37,734(1217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:37,734(1217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@115273a  
[DEBUG] 2015-08-06 14:51:37,734(1217) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8bdcd2  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bd928a  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bcc0bc  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@134a7d8  
[DEBUG] 2015-08-06 14:51:37,735(1218) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c9a690  
[DEBUG] 2015-08-06 14:51:37,736(1219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4fce71  
[DEBUG] 2015-08-06 14:51:37,736(1219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,736(1219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,736(1219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1db7df8  
[DEBUG] 2015-08-06 14:51:37,736(1219) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,737(1220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,737(1220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21b220  
[DEBUG] 2015-08-06 14:51:37,737(1220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@10a2d64  
[DEBUG] 2015-08-06 14:51:37,737(1220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,737(1220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,737(1220) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@17ce4e7  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62937c  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@a17083  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12bb7e0  
[DEBUG] 2015-08-06 14:51:37,738(1221) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4aeb52  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12a3793  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@d1fa5  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:37,739(1222) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@14c194d  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b675e  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@df83e5  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c6320  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ffd135  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1000bcf  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@754fc  
[DEBUG] 2015-08-06 14:51:37,740(1223) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15c998a  
[DEBUG] 2015-08-06 14:51:37,741(1224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6458a6  
[DEBUG] 2015-08-06 14:51:37,741(1224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@118223d  
[INFO ] 2015-08-06 14:51:37,741(1224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@12a3793  
[DEBUG] 2015-08-06 14:51:37,741(1224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1700391  
[INFO ] 2015-08-06 14:51:37,741(1224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 14:51:37,741(1224) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@137d4a4  
[INFO ] 2015-08-06 14:51:37,742(1225) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,742(1225) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@137d4a4  
[INFO ] 2015-08-06 14:51:37,742(1225) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@a9c09e  
[DEBUG] 2015-08-06 14:51:37,742(1225) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b22920  
[INFO ] 2015-08-06 14:51:37,742(1225) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@12bb7e0  
[DEBUG] 2015-08-06 14:51:37,742(1225) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@33b121  
[INFO ] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@33b121  
[INFO ] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1431340  
[DEBUG] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6963d0  
[INFO ] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@4aeb52  
[DEBUG] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1aa2c23  
[INFO ] 2015-08-06 14:51:37,743(1226) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 14:51:37,746(1229) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:51:37,746(1229) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=validate, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=validate, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.xml.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:51:37,759(1242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]  
[DEBUG] 2015-08-06 14:51:37,908(1391) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:51:37,908(1391) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from CONTACT where ID =?  
[DEBUG] 2015-08-06 14:51:37,909(1392) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.NAME as NAME0_, contactent_.LOGIN_ID as LOGIN4_0_, contactent_.PASSWORD as PASSWORD0_ from CONTACT contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:51:37,909(1392) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into CONTACT (EMAIL, NAME, LOGIN_ID, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:51:37,909(1392) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update CONTACT set EMAIL=?, NAME=?, LOGIN_ID=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:51:37,909(1392) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from CONTACT where ID=?  
[DEBUG] 2015-08-06 14:51:37,909(1392) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) –> [main]  Identity insert: insert into CONTACT (EMAIL, NAME, LOGIN_ID, PASSWORD) values (?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:51:37,930(1413) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:51:37,931(1414) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:51:37,931(1414) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:51:37,931(1414) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:51:37,931(1414) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:51:37,931(1414) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:51:37,932(1415) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:51:37,932(1415) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:51:37,932(1415) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:51:37,932(1415) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:51:37,938(1421) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:51:37,939(1422) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.NAME as NAME0_0_, contactent0_.LOGIN_ID as LOGIN4_0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from CONTACT contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:51:37,962(1445) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 14:51:37,963(1446) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: e04da5f8-0921-40d3-8425-fe75df677277 (unnamed)  
[INFO ] 2015-08-06 14:51:37,964(1447) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:51:37,964(1447) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:51:37,966(1449) org.hibernate.tool.hbm2ddl.SchemaValidator.validate(SchemaValidator.java:121) –> [main] Running schema validator  
[INFO ] 2015-08-06 14:51:37,966(1449) org.hibernate.tool.hbm2ddl.SchemaValidator.validate(SchemaValidator.java:129) –> [main] fetching database metadata  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:51:37,967(1450) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:51:37,968(1451) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:51:37,968(1451) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:51:37,969(1452) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:51:37,969(1452) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:51:37,978(1461) org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:119) –> [main] table not found: CONTACT  
[DEBUG] 2015-08-06 14:53:04,784(1) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:04,787(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:04,789(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:04,791(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:53:04,793(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:53:04,794(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:53:04,797(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:04,797(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:04,797(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:04,799(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:04,799(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:04,799(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:04,807(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:04,807(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:04,807(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:04,809(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:04,811(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:04,812(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:04,814(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:04,815(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:04,815(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:04,817(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:04,818(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:04,818(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:04,820(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:04,820(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:04,821(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:04,823(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:04,823(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:04,825(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:04,825(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:04,826(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:04,827(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:04,829(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:04,829(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:04,832(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:04,832(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:04,834(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:04,834(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:04,836(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:04,836(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:04,837(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:04,838(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:53:04,840(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:04,840(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:04,840(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:04,842(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:53:04,843(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:04,844(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:04,845(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:04,846(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:04,847(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:04,847(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:04,848(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:04,848(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:04,850(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:04,850(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:04,851(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:53:04,853(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:53:04,855(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:04,855(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:04,856(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:04,857(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:04,857(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:04,858(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:04,858(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:53:04,860(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:04,860(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:04,860(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:04,862(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:04,862(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:04,862(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:04,864(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:53:04,872(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:04,872(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:04,873(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:53:04,873(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:53:04,878(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:04,878(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:04,879(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:53:04,880(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:53:04,880(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:53:04,882(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:53:04,885(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:04,885(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:04,886(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 14:53:04,886(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 14:53:04,886(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 14:53:04,886(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 14:53:04,886(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 14:53:04,886(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 14:53:04,887(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 14:53:04,887(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 14:53:04,933(150) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 14:53:04,933(150) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 14:53:04,940(157) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 14:53:04,941(158) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 14:53:04,945(162) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 14:53:04,949(166) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 14:53:05,003(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:53:05,003(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:53:05,004(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:53:05,004(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:53:05,006(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:53:05,006(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:53:05,007(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:53:05,008(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:53:05,008(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:53:05,009(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:53:05,009(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:53:05,010(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:53:05,010(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:53:05,011(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:53:05,012(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:53:05,013(230) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:53:05,014(231) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:53:05,056(273) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:53:05,056(273) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:53:05,057(274) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:53:05,057(274) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:53:05,080(297) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:53:05,081(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:53:05,081(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:53:05,081(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:53:05,081(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:53:05,081(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:53:05,081(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:53:05,082(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:53:05,082(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:53:05,082(299) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:53:05,082(299) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:53:05,082(299) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:53:05,088(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,088(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,088(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,088(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:53:05,088(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:53:05,088(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:53:05,089(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,089(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,089(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,089(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,089(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,089(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,090(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,090(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,090(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,090(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,090(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,090(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,091(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,091(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,091(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,091(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,091(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,091(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,092(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,092(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,092(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,092(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:05,092(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:05,093(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:05,093(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:05,093(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:05,094(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:05,094(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:05,094(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:05,094(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:05,094(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,095(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:05,096(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,097(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,098(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,099(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,099(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:53:05,099(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,099(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,099(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:53:05,099(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:53:05,100(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,100(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,100(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:53:05,100(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:53:05,100(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:53:05,101(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:53:05,101(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:05,101(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:05,101(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 14:53:05,101(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 14:53:05,101(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 14:53:05,102(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 14:53:05,102(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 14:53:05,102(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 14:53:05,102(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 14:53:05,102(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:53:05,103(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:53:05,104(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:53:05,104(321) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:53:05,105(322) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:53:05,110(327) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:53:05,110(327) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:53:05,110(327) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:53:05,111(328) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:53:05,115(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:53:05,115(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 14:53:05,115(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:53:05,115(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:53:05,115(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 14:53:05,115(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:53:05,116(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:53:05,116(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 14:53:05,116(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 14:53:05,116(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:53:05,116(333) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:53:05,116(333) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 14:53:05,117(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,117(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,118(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,119(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:05,120(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,121(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:05,122(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,123(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,124(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:53:05,125(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 14:53:05,126(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 14:53:05,127(344) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 14:53:05,128(345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 14:53:05,128(345) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 14:53:05,128(345) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 14:53:05,130(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 14:53:05,130(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 14:53:05,130(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 14:53:05,131(348) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 14:53:05,133(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 14:53:05,134(351) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 14:53:05,153(370) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:53:05,210(427) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:53:05,210(427) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 14:53:05,215(432) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:53:05,250(467) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 14:53:05,253(470) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 14:53:05,262(479) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 14:53:05,266(483) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 14:53:05,302(519) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:53:05,306(523) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 14:53:05,308(525) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 14:53:05,310(527) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 14:53:05,314(531) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:53:05,315(532) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 14:53:05,315(532) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 14:53:05,315(532) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 14:53:05,315(532) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:53:05,315(532) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 14:53:05,316(533) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 14:53:05,317(534) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 14:53:05,317(534) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 14:53:05,317(534) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 14:53:05,319(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 14:53:05,319(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 14:53:05,319(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 14:53:05,319(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 14:53:05,319(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 14:53:05,320(537) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:53:05,321(538) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:53:05,321(538) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:53:05,322(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:53:05,322(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:53:05,322(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:53:05,322(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 14:53:05,326(543) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 14:53:05,350(567) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 14:53:05,359(576) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:53:05,360(577) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:53:05,363(580) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:53:05,367(584) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:53:05,436(653) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:53:05,437(654) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:53:05,437(654) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:53:05,437(654) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:53:05,437(654) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:53:05,441(658) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:53:05,442(659) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:53:05,448(665) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:53:05,448(665) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:53:05,448(665) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:53:05,455(672) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 14:53:05,455(672) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 14:53:05,455(672) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:53:05,717(934) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 14:53:05,738(955) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:53:05,751(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:53:05,751(968) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:53:05,753(970) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:53:05,755(972) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:53:05,755(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:53:05,755(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:53:05,755(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:53:05,755(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:53:05,756(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:53:05,756(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:53:05,756(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:53:05,756(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:53:05,762(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:53:05,762(979) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:53:05,763(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:53:05,763(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:53:05,763(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:53:05,763(980) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:53:05,765(982) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:53:05,765(982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:53:05,765(982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:53:05,765(982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:53:05,765(982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:53:05,765(982) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:53:05,766(983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:53:05,766(983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:53:05,770(987) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:53:05,770(987) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:53:05,770(987) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:53:05,770(987) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:53:05,771(988) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:53:05,771(988) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:53:05,787(1004) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:53:05,793(1010) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 14:53:05,794(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,794(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,794(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:05,794(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,795(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,796(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:05,797(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,798(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 14:53:05,799(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,800(1017) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,801(1018) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:53:05,802(1019) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 14:53:05,803(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 14:53:05,804(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 14:53:05,805(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 14:53:05,807(1024) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 14:53:05,807(1024) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 14:53:05,819(1036) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 14:53:05,825(1042) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 14:53:05,955(1172) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 14:53:05,955(1172) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 14:53:05,955(1172) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 14:53:05,956(1173) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 14:53:05,956(1173) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 14:53:05,956(1173) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 14:53:05,978(1195) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:53:05,978(1195) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:53:05,978(1195) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:53:05,978(1195) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:53:05,979(1196) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:53:05,979(1196) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 14:53:05,979(1196) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:53:05,979(1196) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 14:53:05,979(1196) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:53:05,980(1197) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:53:05,986(1203) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:53:05,986(1203) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 14:53:06,008(1225) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 14:53:06,009(1226) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 3d8bb465-ef19-46e4-8589-e06c81aa7d1e (unnamed)  
[INFO ] 2015-08-06 14:53:06,009(1226) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 14:53:06,009(1226) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 14:53:06,015(1232) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 14:53:06,015(1232) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 14:53:06,017(1234) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 14:53:06,017(1234) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:53:06,017(1234) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:53:06,017(1234) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:53:06,018(1235) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:53:06,018(1235) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:53:06,018(1235) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:53:06,018(1235) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:53:06,018(1235) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:53:06,018(1235) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:53:06,019(1236) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:53:06,020(1237) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:53:06,020(1237) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:53:06,021(1238) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 14:53:06,049(1266) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 14:53:06,049(1266) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 14:53:06,049(1266) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 14:53:06,049(1266) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 14:53:06,050(1267) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 14:53:06,050(1267) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 14:53:06,052(1269) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 14:53:06,052(1269) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 14:53:06,053(1270) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 14:53:06,053(1270) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 14:53:06,053(1270) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 14:53:06,053(1270) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 14:53:06,054(1271) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:53:06,054(1271) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 14:53:06,054(1271) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 14:53:06,054(1271) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 14:53:06,054(1271) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 14:53:06,054(1271) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 14:53:06,055(1272) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:53:06,055(1272) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:53:06,055(1272) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:53:06,056(1273) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:53:06,061(1278) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 14:53:06,062(1279) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 14:53:06,062(1279) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 14:53:06,062(1279) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 14:53:06,065(1282) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 14:53:06,067(1284) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 14:53:06,067(1284) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 14:53:06,068(1285) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 14:53:06,068(1285) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 14:53:06,068(1285) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 14:53:06,068(1285) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 14:53:06,069(1286) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 14:53:06,069(1286) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 14:53:06,083(1300) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 14:53:06,084(1301) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 14:53:06,084(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 14:53:06,084(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 14:53:06,084(1301) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 14:53:06,084(1301) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 14:53:06,084(1301) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 14:53:06,085(1302) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 14:53:06,086(1303) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 14:53:06,087(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 14:53:06,087(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 14:53:06,087(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 14:53:06,087(1304) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 14:53:06,091(1308) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 14:53:06,091(1308) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 14:53:06,091(1308) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 14:53:06,092(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:06,092(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:06,092(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 14:53:06,093(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 14:53:06,093(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 14:53:06,093(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 14:53:06,093(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:06,093(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:06,093(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 14:53:06,094(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:06,094(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:06,094(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 14:53:06,094(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:06,094(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 14:53:06,094(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
