[INFO ] 2015-08-06 15:30:14,363(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:30:14,363(1313) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:30:14,363(1313) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:30:14,363(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:30:14,363(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:30:14,363(1313) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:30:14,364(1314) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:30:14,365(1315) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:30:14,366(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:30:14,366(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:30:14,366(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:30:14,366(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:30:14,366(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:30:14,366(1316) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:30:14,369(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:30:14,369(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:30:14,369(1319) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@d61aef after already scoped org.hibernate.impl.SessionFactoryImpl@198c6f3  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:30:14,370(1320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:14,371(1321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:14,372(1322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:14,373(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:14,373(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:14,373(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:14,373(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:14,373(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:14,373(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:14,374(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:14,374(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:14,374(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:14,374(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:14,374(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:14,374(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:14,375(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:14,376(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:14,376(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:30:14,376(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:14,376(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:14,376(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:14,376(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:14,377(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:14,378(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:14,379(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:30:14,379(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:14,379(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:14,379(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:14,379(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:14,379(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:14,380(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:14,381(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ce663c  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19a0feb  
[DEBUG] 2015-08-06 15:30:14,382(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18b1f8f  
[DEBUG] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:30:14,383(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:30:14,384(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:14,385(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:30:14,385(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:14,385(1335) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:30:14,385(1335) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:30:14,386(1336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:30:14,387(1337) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:14,387(1337) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:30:14,388(1338) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:30:14,388(1338) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:14,388(1338) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:30:14,388(1338) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:30:14,388(1338) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:14,388(1338) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:14,389(1339) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:14,389(1339) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:14,389(1339) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:14,390(1340) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:30:14,390(1340) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:14,390(1340) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:14,391(1341) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:14,391(1341) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:14,391(1341) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:14,391(1341) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:14,391(1341) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: ec7fccb7-9461-40b2-986f-fd285bb3ec01 (unnamed)  
[INFO ] 2015-08-06 15:30:14,391(1341) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:30:14,392(1342) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:30:14,392(1342) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:30:14,392(1342) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:30:14,392(1342) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:30:14,392(1342) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:30:14,393(1343) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:30:14,394(1344) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:14,394(1344) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:14,394(1344) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:14,395(1345) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:30:14,407(1357) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:30:14,407(1357) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:30:14,407(1357) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:30:14,407(1357) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:30:14,407(1357) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:30:14,408(1358) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:30:14,409(1359) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:30:14,409(1359) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:30:14,435(1385) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:14,435(1385) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:30:14,476(1426) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462144  
[DEBUG] 2015-08-06 15:30:14,476(1426) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:14,478(1428) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:14,478(1428) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:14,478(1428) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:14,487(1437) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419179948048384, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:14,498(1448) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:14,498(1448) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:14,499(1449) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:14,500(1450) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:14,501(1451) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:14,501(1451) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:14,502(1452) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:14,502(1452) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419179948048384, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:14,519(1469) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:14,519(1469) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:14,535(1485) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:14,536(1486) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:14,604(1554) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:14,604(1554) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:14,605(1555) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:14,611(1561) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:14,612(1562) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:30:14,612(1562) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462146  
[DEBUG] 2015-08-06 15:30:14,612(1562) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:14,613(1563) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:14,613(1563) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:14,613(1563) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:14,614(1564) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419179956568065, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:14,615(1565) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:14,615(1565) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:14,615(1565) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:14,615(1565) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:14,616(1566) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:14,616(1566) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:14,617(1567) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:14,617(1567) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419179956568065, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:14,618(1568) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:14,618(1568) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:14,619(1569) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:14,620(1570) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:14,710(1660) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:14,710(1660) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:14,711(1661) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:14,712(1662) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:14,712(1662) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:30:14,712(1662) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462147  
[DEBUG] 2015-08-06 15:30:14,713(1663) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:14,713(1663) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:14,713(1663) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:14,713(1663) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:14,714(1664) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419179963056130, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:14,714(1664) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:14,714(1664) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:14,714(1664) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:14,715(1665) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:14,715(1665) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:14,715(1665) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:14,715(1665) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:14,716(1666) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419179963056130, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:14,716(1666) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:14,716(1666) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:14,718(1668) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:14,719(1669) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:14,951(1901) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:14,951(1901) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:14,951(1901) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:14,952(1902) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:14,952(1902) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:30:14,952(1902) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462149  
[DEBUG] 2015-08-06 15:30:14,952(1902) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:14,952(1902) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:14,952(1902) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419179978784771, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:14,953(1903) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:14,954(1904) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:14,954(1904) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:14,954(1904) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419179978784771, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:14,954(1904) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:14,954(1904) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:14,955(1905) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:14,955(1905) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:14,996(1946) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:14,996(1946) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:14,996(1946) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462149  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:14,997(1947) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419179981733892, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:14,998(1948) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419179981733892, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:14,999(1949) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:14,999(1949) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:14,999(1949) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:15,000(1950) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,043(1993) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:15,043(1993) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:15,043(1993) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:15,051(2001) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462150  
[DEBUG] 2015-08-06 15:30:15,095(2045) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:15,104(2054) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:30:15,104(2054) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:15,138(2088) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:15,155(2105) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:30:15,160(2110) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:15,160(2110) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:30:15,164(2114) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:30:15,168(2118) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:30:15,169(2119) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:15,170(2120) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:30:15,170(2120) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:15,185(2135) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:15,186(2136) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:15,186(2136) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:15,198(2148) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,198(2148) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:15,198(2148) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:15,199(2149) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,199(2149) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,199(2149) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,200(2150) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:15,201(2151) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:15,202(2152) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:15,202(2152) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462152  
[DEBUG] 2015-08-06 15:30:15,202(2152) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:15,204(2154) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:30:15,204(2154) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:15,205(2155) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:15,206(2156) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:30:15,206(2156) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:15,206(2156) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:30:15,207(2157) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:30:15,207(2157) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:30:15,207(2157) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:15,208(2158) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:30:15,208(2158) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:15,208(2158) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:15,208(2158) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:15,208(2158) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:15,209(2159) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,209(2159) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:15,209(2159) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:15,210(2160) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,210(2160) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,210(2160) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,210(2160) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:15,211(2161) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:15,211(2161) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:15,216(2166) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:30:15,216(2166) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,216(2166) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:15,216(2166) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:15,218(2168) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:15,219(2169) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:30:15,219(2169) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,219(2169) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:15,219(2169) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:15,220(2170) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:15,221(2171) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,221(2171) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:15,221(2171) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:15,221(2171) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:30:15,221(2171) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:15,221(2171) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:30:15,222(2172) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:30:15,222(2172) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:30:15,224(2174) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:30:15,224(2174) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:30:26,894(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:26,898(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:26,900(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:26,901(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:30:26,903(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:30:26,904(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:30:26,906(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:26,906(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:26,906(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:26,908(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:26,908(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:26,908(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:26,916(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:26,916(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:26,916(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:26,919(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:26,921(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:26,921(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:26,924(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:26,924(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:26,924(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:26,926(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:26,926(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:26,926(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:26,928(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:26,928(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:26,929(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:26,931(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:26,931(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:26,933(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:26,933(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:26,935(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:26,935(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:26,936(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:26,936(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:26,939(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:26,940(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:26,942(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:26,942(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:26,945(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:26,945(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:26,945(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:26,946(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:30:26,948(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:26,948(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:26,948(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:26,949(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:30:26,951(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:26,951(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:26,952(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:26,952(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:26,954(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:26,954(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:26,955(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:26,955(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:26,958(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:26,958(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:26,959(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:30:26,960(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:30:26,962(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:26,963(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:26,963(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:26,964(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:26,964(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:26,964(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:26,965(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:30:26,966(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:26,966(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:26,967(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:26,968(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:26,968(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:26,968(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:26,970(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:30:26,981(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:26,981(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:26,982(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:26,983(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:26,989(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:26,990(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:26,990(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:26,991(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:26,992(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:26,994(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:30:26,998(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:26,998(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:26,999(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:30:26,999(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:30:26,999(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:30:26,999(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:30:27,000(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:30:27,000(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:30:27,000(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:30:27,000(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 15:30:27,047(153) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:30:27,047(153) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:30:27,056(162) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:30:27,058(164) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:30:27,063(169) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:30:27,066(172) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:30:27,124(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:30:27,125(231) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:30:27,126(232) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:30:27,126(232) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:30:27,129(235) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:30:27,129(235) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:30:27,131(237) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:30:27,132(238) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:30:27,133(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:30:27,133(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:30:27,134(240) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:30:27,135(241) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:30:27,136(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:30:27,137(243) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:30:27,138(244) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:30:27,140(246) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:30:27,140(246) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:30:27,194(300) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:30:27,194(300) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:30:27,194(300) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:30:27,195(301) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:30:27,220(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:30:27,221(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:30:27,221(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:30:27,221(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:30:27,221(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:30:27,221(327) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:30:27,222(328) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:30:27,222(328) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:30:27,222(328) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:30:27,222(328) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:30:27,223(329) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:30:27,223(329) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:30:27,228(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,228(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,228(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,228(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,229(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,230(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,230(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,230(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,230(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,230(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,230(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,231(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,231(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,231(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,231(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,231(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,231(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,232(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,232(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,232(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,232(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,232(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:27,232(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:27,233(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:27,233(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:27,233(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:27,234(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,235(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:30:27,236(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:27,237(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:30:27,238(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,239(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,239(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,239(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,239(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,239(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,239(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:27,240(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:30:27,241(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:30:27,242(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:30:27,243(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:30:27,243(349) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:30:27,243(349) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:30:27,250(356) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:30:27,250(356) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:30:27,251(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:30:27,251(357) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:30:27,255(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:30:27,255(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:30:27,255(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:30:27,255(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:30:27,256(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:30:27,256(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:30:27,256(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:30:27,256(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:30:27,256(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:30:27,256(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:30:27,257(363) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:30:27,257(363) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:30:27,258(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,258(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,258(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,258(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:30:27,259(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:30:27,259(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:30:27,259(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,259(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,259(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,259(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,260(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,261(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:27,262(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:30:27,263(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,264(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,264(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,264(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:30:27,264(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:27,264(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:27,264(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:27,265(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:27,265(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:27,265(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:27,265(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:27,265(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:27,265(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,266(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,267(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,267(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,267(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:30:27,267(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,267(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,267(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,268(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:27,269(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:27,269(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,269(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,269(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:27,269(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:27,269(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:27,270(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:30:27,270(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:27,270(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:27,270(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:30:27,270(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:30:27,270(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:30:27,271(377) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:30:27,272(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:30:27,273(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:30:27,273(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:30:27,273(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:30:27,273(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:30:27,273(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:30:27,273(379) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:30:27,273(379) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:30:27,276(382) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:30:27,276(382) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:30:27,276(382) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:30:27,276(382) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:30:27,280(386) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:30:27,280(386) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:30:27,280(386) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:30:27,280(386) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:30:27,280(386) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:30:27,280(386) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:30:27,281(387) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:30:27,281(387) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:30:27,281(387) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:30:27,281(387) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:30:27,281(387) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:30:27,300(406) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:30:27,345(451) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:30:27,345(451) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:30:27,350(456) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:27,381(487) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:30:27,383(489) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:30:27,391(497) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:30:27,394(500) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:30:27,433(539) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:30:27,438(544) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:30:27,440(546) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:30:27,442(548) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:30:27,448(554) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:30:27,448(554) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:30:27,448(554) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:30:27,449(555) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:30:27,449(555) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:30:27,449(555) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:30:27,449(555) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:30:27,449(555) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:30:27,450(556) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:30:27,450(556) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:30:27,450(556) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:30:27,450(556) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:30:27,450(556) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:30:27,450(556) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:30:27,451(557) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:30:27,451(557) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:30:27,453(559) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:30:27,453(559) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:30:27,453(559) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:30:27,453(559) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:30:27,454(560) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:30:27,454(560) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:30:27,456(562) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:27,456(562) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:27,456(562) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:30:27,456(562) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:30:27,456(562) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:30:27,456(562) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:30:27,461(567) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:30:27,486(592) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:30:27,497(603) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:27,499(605) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:27,501(607) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:27,506(612) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:30:27,576(682) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:30:27,576(682) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:27,576(682) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:27,577(683) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:27,577(683) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:30:27,581(687) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:30:27,581(687) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:30:27,587(693) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:30:27,587(693) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:30:27,587(693) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:30:27,597(703) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:30:27,597(703) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:30:27,597(703) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:30:27,852(958) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:30:27,871(977) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:30:27,882(988) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:30:27,882(988) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:30:27,883(989) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:30:27,884(990) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:30:27,885(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:30:27,885(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:30:27,885(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:30:27,885(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:30:27,885(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:30:27,886(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:30:27,886(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:30:27,886(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:30:27,891(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:30:27,891(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:30:27,891(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:30:27,891(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:30:27,891(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:30:27,891(997) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:30:27,893(999) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:30:27,893(999) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:30:27,893(999) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:30:27,894(1000) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:30:27,894(1000) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:30:27,894(1000) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:30:27,894(1000) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:30:27,895(1001) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:30:27,898(1004) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:30:27,899(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:30:27,899(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:30:27,899(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:30:27,899(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:30:27,899(1005) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:30:27,915(1021) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:30:27,921(1027) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:30:27,923(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,924(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,925(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:27,925(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,925(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,925(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:27,925(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,925(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,926(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:27,926(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,926(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,926(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:27,926(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:27,926(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:27,927(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:27,928(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:27,928(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:27,928(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,928(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,928(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:27,928(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:27,929(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:30:27,930(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:30:27,931(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,932(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:30:27,933(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:30:27,934(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:30:27,935(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:30:27,935(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:30:27,935(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:30:27,935(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:27,935(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:30:27,935(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:30:27,936(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,937(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:30:27,937(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:27,937(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:30:27,937(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:27,937(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:30:27,937(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:27,939(1045) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:30:27,940(1046) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:30:27,957(1063) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:30:27,963(1069) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:30:28,096(1202) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,096(1202) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:30:28,096(1202) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:30:28,096(1202) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:28,096(1202) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:30:28,097(1203) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:30:28,118(1224) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,118(1224) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,118(1224) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,119(1225) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,119(1225) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,119(1225) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:30:28,119(1225) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,120(1226) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,120(1226) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,120(1226) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,127(1233) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,128(1234) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,148(1254) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:30:28,149(1255) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 5b49c0a2-ea69-44aa-9269-25ee4057fbce (unnamed)  
[INFO ] 2015-08-06 15:30:28,149(1255) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:30:28,149(1255) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:30:28,154(1260) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:30:28,154(1260) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:30:28,155(1261) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:30:28,155(1261) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:30:28,155(1261) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:30:28,155(1261) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:30:28,156(1262) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:28,156(1262) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:28,156(1262) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:30:28,156(1262) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:30:28,156(1262) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:30:28,156(1262) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:30:28,157(1263) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:28,157(1263) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:28,157(1263) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:28,158(1264) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:30:28,181(1287) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:30:28,182(1288) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:30:28,182(1288) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:30:28,182(1288) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:30:28,182(1288) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:30:28,183(1289) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:30:28,186(1292) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:30:28,186(1292) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:30:28,187(1293) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:30:28,187(1293) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:30:28,187(1293) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:30:28,187(1293) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:30:28,188(1294) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:28,188(1294) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:28,188(1294) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:30:28,188(1294) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:30:28,188(1294) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:30:28,188(1294) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:30:28,189(1295) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:28,189(1295) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:28,190(1296) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:28,191(1297) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:30:28,196(1302) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:30:28,197(1303) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:28,197(1303) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:28,197(1303) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:28,200(1306) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:30:28,202(1308) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:30:28,203(1309) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:30:28,203(1309) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:30:28,203(1309) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:30:28,203(1309) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:30:28,203(1309) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:30:28,204(1310) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:30:28,204(1310) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:30:28,223(1329) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:30:28,223(1329) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:30:28,224(1330) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:30:28,224(1330) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:30:28,224(1330) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:30:28,224(1330) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:30:28,224(1330) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:30:28,224(1330) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:30:28,225(1331) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:30:28,226(1332) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:30:28,227(1333) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:30:28,228(1334) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:30:28,228(1334) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:30:28,228(1334) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:30:28,228(1334) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:30:28,228(1334) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:30:28,230(1336) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:30:28,231(1337) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:30:28,231(1337) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 15:30:28,231(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:28,231(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:28,231(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:28,232(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:28,233(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:28,234(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:30:28,235(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:28,236(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:28,237(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:30:28,237(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:30:28,237(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:28,237(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:30:28,237(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:28,237(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:30:28,238(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:30:28,239(1345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:30:28,239(1345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:28,239(1345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:28,239(1345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:30:28,239(1345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:28,239(1345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:28,240(1346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:30:28,240(1346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:30:28,240(1346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:28,240(1346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:28,240(1346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:28,241(1347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:30:28,242(1348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:28,243(1349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:30:28,243(1349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b5c22f  
[DEBUG] 2015-08-06 15:30:28,243(1349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1dfd90f  
[DEBUG] 2015-08-06 15:30:28,243(1349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1238785  
[DEBUG] 2015-08-06 15:30:28,243(1349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:30:28,243(1349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:30:28,244(1350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:30:28,245(1351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:30:28,246(1352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:30:28,247(1353) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:30:28,247(1353) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:30:28,248(1354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:30:28,250(1356) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,250(1356) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:30:28,250(1356) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:30:28,250(1356) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:28,250(1356) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:30:28,250(1356) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:30:28,251(1357) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,251(1357) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,251(1357) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,252(1358) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,252(1358) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,252(1358) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:30:28,253(1359) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,253(1359) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:30:28,253(1359) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,253(1359) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,254(1360) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,254(1360) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:28,254(1360) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 2d99cc01-750d-44ef-85dc-48474470b08d (unnamed)  
[INFO ] 2015-08-06 15:30:28,254(1360) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:30:28,254(1360) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:30:28,254(1360) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:30:28,255(1361) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:30:28,255(1361) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:30:28,255(1361) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:30:28,255(1361) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:30:28,255(1361) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:30:28,255(1361) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:28,256(1362) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:30:28,256(1362) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:30:28,256(1362) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:30:28,256(1362) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:30:28,256(1362) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:30:28,257(1363) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:30:28,257(1363) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:30:28,257(1363) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:30:28,258(1364) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:30:28,271(1377) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:30:28,271(1377) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:30:28,271(1377) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:30:28,271(1377) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:30:28,271(1377) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:30:28,272(1378) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:30:28,273(1379) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:30:28,273(1379) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:30:28,296(1402) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,296(1402) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:30:28,335(1441) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462282  
[DEBUG] 2015-08-06 15:30:28,336(1442) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:28,338(1444) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:28,338(1444) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:28,338(1444) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:28,346(1452) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949677185531904, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:28,357(1463) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:28,357(1463) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:28,358(1464) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:28,359(1465) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:28,360(1466) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:28,360(1466) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:28,361(1467) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:28,362(1468) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949677185531904, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:28,380(1486) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:28,380(1486) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:28,396(1502) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:28,396(1502) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:28,471(1577) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:28,471(1577) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:28,472(1578) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:28,477(1583) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,478(1584) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:30:28,479(1585) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462284  
[DEBUG] 2015-08-06 15:30:28,479(1585) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:28,479(1585) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:28,479(1585) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:28,479(1585) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:28,480(1586) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949677194510337, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:28,480(1586) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:28,480(1586) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:28,481(1587) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:28,481(1587) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:28,481(1587) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:28,481(1587) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:28,481(1587) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:28,481(1587) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949677194510337, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:28,482(1588) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:28,482(1588) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:28,483(1589) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:28,483(1589) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:28,621(1727) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:28,621(1727) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:28,621(1727) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:28,621(1727) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,621(1727) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462286  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949677203816450, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:28,622(1728) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:28,623(1729) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:28,623(1729) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:28,623(1729) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949677203816450, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:28,623(1729) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:28,623(1729) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:28,624(1730) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:28,625(1731) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:28,810(1916) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:28,812(1918) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:28,812(1918) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:28,813(1919) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,813(1919) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:30:28,814(1920) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462288  
[DEBUG] 2015-08-06 15:30:28,814(1920) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:28,814(1920) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:28,814(1920) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:28,814(1920) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:28,815(1921) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949677216464899, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:28,815(1921) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:28,815(1921) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:28,816(1922) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:28,816(1922) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:28,816(1922) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:28,816(1922) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:28,817(1923) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:28,817(1923) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949677216464899, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:28,818(1924) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:28,818(1924) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:28,819(1925) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:28,821(1927) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:28,996(2102) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:28,996(2102) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:28,997(2103) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:28,998(2104) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:30:28,998(2104) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:30:28,999(2105) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462289  
[DEBUG] 2015-08-06 15:30:28,999(2105) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:30:28,999(2105) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:30:28,999(2105) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:28,999(2105) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:30:29,000(2106) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949677228589060, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:30:29,001(2107) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:30:29,001(2107) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:30:29,001(2107) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:30:29,001(2107) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:30:29,002(2108) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:30:29,002(2108) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:30:29,002(2108) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:30:29,002(2108) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949677228589060, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:30:29,003(2109) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,004(2110) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:30:29,005(2111) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:30:29,009(2115) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,118(2224) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:30:29,118(2224) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:29,119(2225) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:29,137(2243) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462291  
[DEBUG] 2015-08-06 15:30:29,191(2297) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:29,202(2308) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:30:29,202(2308) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:29,236(2342) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:29,250(2356) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:30:29,255(2361) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:29,256(2362) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:30:29,260(2366) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:30:29,264(2370) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:30:29,265(2371) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:29,265(2371) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:30:29,266(2372) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:29,282(2388) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:29,283(2389) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:29,283(2389) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:29,295(2401) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,296(2402) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:29,296(2402) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:29,297(2403) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,297(2403) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,297(2403) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,298(2404) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:29,299(2405) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:29,300(2406) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:29,300(2406) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388462293  
[DEBUG] 2015-08-06 15:30:29,300(2406) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:29,302(2408) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:30:29,302(2408) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:29,303(2409) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:29,304(2410) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:30:29,304(2410) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:29,305(2411) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:30:29,305(2411) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:30:29,305(2411) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:30:29,305(2411) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:30:29,306(2412) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:30:29,306(2412) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:29,306(2412) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:30:29,306(2412) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:29,306(2412) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:30:29,307(2413) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,307(2413) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:29,307(2413) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:30:29,308(2414) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,308(2414) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,308(2414) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,308(2414) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:29,308(2414) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:29,308(2414) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:29,313(2419) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:30:29,313(2419) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,313(2419) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:29,313(2419) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:29,314(2420) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,315(2421) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,315(2421) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,315(2421) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:29,315(2421) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:30:29,315(2421) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:29,315(2421) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:30:29,316(2422) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:30:29,316(2422) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,316(2422) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:30:29,316(2422) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:30:29,317(2423) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:30:29,317(2423) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,317(2423) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:30:29,318(2424) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:30:29,318(2424) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:30:29,318(2424) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:30:29,318(2424) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:30:29,318(2424) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:30:29,318(2424) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:30:29,323(2429) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:30:29,323(2429) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:42:04,792(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:04,795(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:04,797(5) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:04,799(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:42:04,800(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:42:04,801(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:42:04,803(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:04,803(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:04,803(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:04,805(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:04,805(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:04,805(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:04,812(20) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:04,812(20) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:04,812(20) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:04,814(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:04,816(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:04,816(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:04,818(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:04,819(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:04,819(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:04,822(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:04,822(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:04,822(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:04,824(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:04,824(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:04,824(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:04,826(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:04,827(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:04,829(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:04,829(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:04,831(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:04,831(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:04,832(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:04,832(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:04,835(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:04,835(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:04,838(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:04,838(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:04,841(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:04,841(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:04,841(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:04,842(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:42:04,844(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:04,844(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:04,845(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:04,846(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:42:04,848(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:04,848(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:04,850(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:04,850(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:04,852(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:04,852(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:04,853(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:04,853(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:04,855(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:04,856(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:04,856(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:42:04,857(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:42:04,859(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:04,859(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:04,859(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:04,861(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:04,862(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:04,862(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:04,863(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:42:04,865(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:04,865(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:04,865(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:04,867(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:04,867(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:04,867(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:04,869(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:42:04,878(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:04,879(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:04,879(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:04,880(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:04,885(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:04,885(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:04,886(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:04,887(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:04,887(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:04,889(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:42:04,892(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:04,892(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:04,893(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:42:04,894(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:42:04,894(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:42:04,894(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:42:04,894(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:42:04,894(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:42:04,895(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:42:04,895(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 15:42:04,936(144) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:42:04,936(144) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:42:04,944(152) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:42:04,946(154) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:42:04,949(157) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:42:04,953(161) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:42:05,010(218) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:42:05,011(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:42:05,012(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:42:05,012(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:42:05,015(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:42:05,015(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:42:05,017(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:42:05,017(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:42:05,018(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:42:05,019(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:42:05,020(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:42:05,021(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:42:05,021(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:42:05,022(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:42:05,023(231) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:42:05,025(233) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:42:05,025(233) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:42:05,074(282) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:42:05,074(282) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:42:05,074(282) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:42:05,075(283) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:42:05,098(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:42:05,098(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:42:05,098(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:42:05,098(306) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:42:05,099(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:42:05,099(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:42:05,099(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:42:05,099(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:42:05,099(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:42:05,099(307) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:42:05,100(308) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:42:05,100(308) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:42:05,105(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,105(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,105(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,105(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:42:05,105(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:42:05,105(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,106(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,107(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,107(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,107(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,107(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,107(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,107(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,108(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,108(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,108(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,108(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,108(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,108(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,109(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,109(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,109(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:05,109(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:05,109(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:05,109(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:05,110(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:05,110(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:05,110(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:05,110(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,111(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:05,112(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:05,113(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:05,114(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:05,114(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:42:05,114(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:42:05,114(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,115(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:05,116(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:05,117(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:42:05,118(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:42:05,119(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:42:05,119(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:42:05,119(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:42:05,119(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:42:05,119(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:42:05,119(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:42:05,120(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:42:05,120(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:42:05,120(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:42:05,120(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:42:05,120(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:42:05,120(328) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:42:05,121(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:42:05,121(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:42:05,121(329) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:42:05,121(329) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:42:05,121(329) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:42:05,128(336) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:42:05,128(336) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:42:05,128(336) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:42:05,128(336) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:42:05,132(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:42:05,133(341) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:42:05,133(341) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:42:05,133(341) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,134(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,135(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,136(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:05,137(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,138(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:05,139(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:05,140(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:05,140(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:05,140(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:42:05,140(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:42:05,140(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:42:05,141(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,142(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,142(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,142(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,142(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,142(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,142(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,143(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:05,144(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:05,144(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:05,144(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:42:05,144(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:05,144(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:05,144(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:42:05,145(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:42:05,146(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:42:05,146(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:42:05,146(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:42:05,146(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:42:05,146(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:42:05,147(355) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:42:05,148(356) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:42:05,148(356) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:42:05,148(356) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:42:05,148(356) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:42:05,148(356) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:42:05,150(358) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:42:05,151(359) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:42:05,151(359) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:42:05,152(360) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:42:05,155(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:42:05,156(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:42:05,157(365) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:42:05,157(365) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:42:05,178(386) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:42:05,227(435) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:42:05,227(435) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:42:05,232(440) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:05,264(472) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:42:05,266(474) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:42:05,273(481) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:42:05,277(485) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:42:05,313(521) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:42:05,319(527) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:42:05,321(529) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:42:05,323(531) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:42:05,328(536) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:42:05,328(536) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:42:05,328(536) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:42:05,329(537) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:42:05,329(537) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:42:05,329(537) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:42:05,329(537) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:42:05,329(537) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:42:05,330(538) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:42:05,330(538) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:42:05,330(538) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:42:05,330(538) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:42:05,331(539) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:42:05,331(539) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:42:05,331(539) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:42:05,331(539) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:42:05,333(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:42:05,333(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:42:05,333(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:42:05,333(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:42:05,333(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:42:05,334(542) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:42:05,336(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:05,336(544) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:05,336(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:42:05,336(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:42:05,336(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:42:05,336(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:42:05,341(549) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:42:05,364(572) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:42:05,374(582) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:42:05,375(583) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:42:05,378(586) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:42:05,383(591) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:42:05,453(661) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:42:05,454(662) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:42:05,454(662) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:42:05,454(662) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:42:05,455(663) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:42:05,459(667) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:42:05,459(667) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:42:05,465(673) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:42:05,465(673) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:42:05,465(673) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:42:05,472(680) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:42:05,472(680) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:42:05,472(680) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:42:05,741(949) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:42:05,761(969) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:42:05,773(981) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:42:05,773(981) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:42:05,774(982) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:42:05,776(984) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:42:05,776(984) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:42:05,776(984) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:42:05,776(984) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:42:05,776(984) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:42:05,777(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:42:05,783(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:42:05,783(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:42:05,783(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:42:05,784(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:42:05,784(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:42:05,785(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:42:05,785(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:42:05,785(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:42:05,785(993) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:42:05,787(995) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:42:05,787(995) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:42:05,787(995) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:42:05,787(995) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:42:05,787(995) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:42:05,787(995) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:42:05,788(996) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:42:05,788(996) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:42:05,792(1000) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:42:05,793(1001) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:42:05,793(1001) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:42:05,793(1001) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:42:05,794(1002) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:42:05,794(1002) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:42:05,812(1020) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:42:05,818(1026) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:42:05,820(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,820(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,820(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:05,820(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:42:05,820(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:42:05,821(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:42:05,821(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,821(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,821(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:05,821(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,821(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,822(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:05,823(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,823(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,823(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:05,823(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,823(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,823(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:05,824(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:05,825(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:05,825(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:05,825(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:05,825(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:05,825(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:05,825(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:42:05,826(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:05,827(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:05,828(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:42:05,829(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:42:05,829(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,829(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,829(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:05,829(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,829(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,830(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:05,831(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:05,832(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164b9b6  
[DEBUG] 2015-08-06 15:42:05,833(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:05,834(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:42:05,835(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:05,837(1045) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:42:05,837(1045) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:42:05,848(1056) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:42:05,853(1061) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:42:05,982(1190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:05,982(1190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:42:05,982(1190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:42:05,982(1190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:05,982(1190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:42:05,982(1190) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:42:06,003(1211) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,004(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,004(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,004(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,004(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,005(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:42:06,005(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,006(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,006(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,007(1215) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,015(1223) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,015(1223) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,034(1242) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:42:06,035(1243) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: b6212067-32ec-4c84-abb4-676d46cdc811 (unnamed)  
[INFO ] 2015-08-06 15:42:06,036(1244) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:42:06,036(1244) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:42:06,040(1248) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:42:06,041(1249) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:42:06,042(1250) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:42:06,042(1250) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:42:06,043(1251) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:42:06,043(1251) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:42:06,043(1251) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:42:06,044(1252) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:42:06,044(1252) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:42:06,069(1277) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:42:06,069(1277) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:42:06,069(1277) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:42:06,070(1278) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:42:06,070(1278) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:42:06,071(1279) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:42:06,073(1281) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:42:06,073(1281) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:42:06,074(1282) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:42:06,074(1282) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:42:06,074(1282) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:42:06,074(1282) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:42:06,074(1282) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:06,075(1283) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:06,075(1283) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:42:06,075(1283) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:42:06,075(1283) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:42:06,075(1283) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:42:06,076(1284) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:42:06,076(1284) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:42:06,076(1284) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:42:06,077(1285) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:42:06,083(1291) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:42:06,084(1292) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:42:06,084(1292) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:42:06,085(1293) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:42:06,088(1296) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:42:06,090(1298) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:42:06,090(1298) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:42:06,091(1299) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:42:06,091(1299) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:42:06,091(1299) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:42:06,091(1299) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:42:06,091(1299) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:42:06,092(1300) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:42:06,108(1316) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:42:06,108(1316) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:42:06,109(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:42:06,110(1318) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:42:06,111(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:42:06,112(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:42:06,114(1322) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:42:06,114(1322) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:42:06,115(1323) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@d61aef after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:06,115(1323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:06,116(1324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:42:06,117(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:06,117(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:06,117(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:42:06,117(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:06,117(1325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:06,118(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:42:06,118(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:06,118(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:06,118(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:42:06,118(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:06,118(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:42:06,119(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:06,120(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:42:06,120(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:06,120(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:42:06,120(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:06,120(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:06,120(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:42:06,121(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:42:06,121(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:06,121(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:06,121(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:42:06,121(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:42:06,121(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:06,122(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:06,123(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:42:06,124(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:06,124(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:06,124(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:06,125(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:42:06,126(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:42:06,126(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:06,126(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:06,126(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:06,126(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:06,126(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:06,127(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:06,127(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:06,127(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:06,127(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:06,127(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:42:06,127(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:06,128(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:42:06,128(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1238785  
[DEBUG] 2015-08-06 15:42:06,128(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:42:06,128(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:42:06,128(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:42:06,128(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:42:06,129(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:42:06,129(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:42:06,129(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:42:06,133(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:42:06,134(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:42:06,134(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:42:06,134(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:42:06,135(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:42:06,135(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:06,135(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:42:06,135(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:42:06,136(1344) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:42:06,136(1344) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:42:06,137(1345) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:42:06,140(1348) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:06,140(1348) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:42:06,140(1348) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:42:06,141(1349) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:06,141(1349) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:42:06,141(1349) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:42:06,141(1349) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,141(1349) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,142(1350) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,142(1350) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,142(1350) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,143(1351) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:42:06,143(1351) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,143(1351) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:42:06,143(1351) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,144(1352) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,144(1352) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,144(1352) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,144(1352) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 936c00f5-8ed9-4811-ab0e-60c5deba751d (unnamed)  
[INFO ] 2015-08-06 15:42:06,144(1352) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:42:06,144(1352) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:42:06,144(1352) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:42:06,145(1353) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:42:06,145(1353) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:42:06,145(1353) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:42:06,145(1353) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:42:06,145(1353) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:42:06,145(1353) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:06,146(1354) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:42:06,146(1354) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:42:06,146(1354) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:42:06,146(1354) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:42:06,146(1354) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:42:06,147(1355) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:42:06,147(1355) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:42:06,147(1355) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:42:06,148(1356) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:42:06,163(1371) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:42:06,163(1371) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:42:06,164(1372) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:42:06,164(1372) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:42:06,164(1372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:42:06,164(1372) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:42:06,165(1373) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:42:06,165(1373) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:42:06,192(1400) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:06,192(1400) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:42:06,229(1437) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469261  
[DEBUG] 2015-08-06 15:42:06,229(1437) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:42:06,232(1440) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:42:06,232(1440) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,232(1440) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:42:06,241(1449) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949722922713088, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:42:06,252(1460) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:42:06,252(1460) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:42:06,253(1461) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:42:06,253(1461) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:42:06,255(1463) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:42:06,255(1463) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:42:06,256(1464) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:42:06,256(1464) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949722922713088, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:42:06,274(1482) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,275(1483) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:06,290(1498) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:42:06,291(1499) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,355(1563) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:42:06,355(1563) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,356(1564) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,371(1579) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:06,372(1580) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:42:06,372(1580) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469263  
[DEBUG] 2015-08-06 15:42:06,372(1580) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:42:06,372(1580) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:42:06,372(1580) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,373(1581) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:42:06,373(1581) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949722931625985, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:42:06,373(1581) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:42:06,373(1581) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:42:06,374(1582) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:42:06,374(1582) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:42:06,374(1582) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:42:06,374(1582) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:42:06,374(1582) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:42:06,375(1583) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949722931625985, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:42:06,375(1583) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,376(1584) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:06,376(1584) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:42:06,377(1585) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,418(1626) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:42:06,419(1627) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,419(1627) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,419(1627) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:06,419(1627) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469264  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949722934706178, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:42:06,420(1628) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:42:06,421(1629) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949722934706178, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:42:06,422(1630) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,422(1630) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:06,423(1631) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:42:06,423(1631) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,507(1715) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:42:06,508(1716) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,508(1716) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,509(1717) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:06,509(1717) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:42:06,510(1718) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469265  
[DEBUG] 2015-08-06 15:42:06,510(1718) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:42:06,510(1718) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:42:06,510(1718) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,510(1718) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:42:06,511(1719) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949722940669955, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:42:06,511(1719) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:42:06,513(1721) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:42:06,513(1721) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:42:06,513(1721) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:42:06,513(1721) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:42:06,514(1722) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:42:06,514(1722) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:42:06,515(1723) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949722940669955, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:42:06,515(1723) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,516(1724) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:06,517(1725) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:42:06,524(1732) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,629(1837) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:42:06,630(1838) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,630(1838) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,630(1838) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:42:06,631(1839) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:42:06,631(1839) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469266  
[DEBUG] 2015-08-06 15:42:06,631(1839) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949722948599812, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:42:06,632(1840) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:42:06,633(1841) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:42:06,633(1841) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:42:06,633(1841) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:42:06,633(1841) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949722948599812, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:42:06,633(1841) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,633(1841) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:42:06,634(1842) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:42:06,634(1842) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,707(1915) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:42:06,708(1916) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,708(1916) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,730(1938) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469267  
[DEBUG] 2015-08-06 15:42:06,782(1990) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:42:06,794(2002) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:42:06,795(2003) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:42:06,837(2045) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:42:06,854(2062) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:42:06,861(2069) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:42:06,861(2069) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:42:06,867(2075) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:42:06,871(2079) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:42:06,871(2079) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:42:06,873(2081) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:42:06,873(2081) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:42:06,888(2096) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:42:06,888(2096) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:42:06,888(2096) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:42:06,900(2108) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,900(2108) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,900(2108) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:42:06,901(2109) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,902(2110) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,902(2110) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,903(2111) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:42:06,905(2113) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,905(2113) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,905(2113) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388469269  
[DEBUG] 2015-08-06 15:42:06,906(2114) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:42:06,908(2116) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:42:06,909(2117) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:42:06,909(2117) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:42:06,910(2118) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:42:06,911(2119) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:42:06,911(2119) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:42:06,911(2119) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:42:06,912(2120) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:42:06,912(2120) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:42:06,912(2120) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:42:06,912(2120) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:42:06,913(2121) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:42:06,913(2121) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:42:06,913(2121) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:42:06,913(2121) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,913(2121) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,913(2121) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:42:06,914(2122) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,914(2122) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,915(2123) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,915(2123) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:42:06,915(2123) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,915(2123) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,919(2127) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:42:06,919(2127) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,919(2127) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,920(2128) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,921(2129) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,921(2129) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,921(2129) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,922(2130) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:42:06,922(2130) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:42:06,922(2130) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,922(2130) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:42:06,922(2130) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:42:06,922(2130) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,923(2131) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:42:06,923(2131) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:42:06,924(2132) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:42:06,924(2132) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,924(2132) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:42:06,924(2132) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:42:06,925(2133) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:42:06,925(2133) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:42:06,925(2133) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:42:06,925(2133) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:42:06,925(2133) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:42:06,927(2135) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:42:06,927(2135) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:48:43,480(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,484(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,486(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,488(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:48:43,490(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:48:43,491(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:48:43,494(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,494(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,495(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,496(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,497(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,497(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,504(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,504(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,504(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,507(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,509(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,509(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,512(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,512(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,512(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,515(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,515(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,516(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,519(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,519(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,519(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,522(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:43,522(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:43,524(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:43,524(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:43,526(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:43,527(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:43,529(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:43,529(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:43,531(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:43,532(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:43,535(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:43,535(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:43,538(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,539(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,539(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,540(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:48:43,542(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,542(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,542(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,543(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:48:43,545(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:43,545(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:43,547(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:43,547(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:43,549(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:43,549(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:43,550(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:43,550(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:43,553(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:43,554(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:43,554(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:48:43,556(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:48:43,558(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,558(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,558(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,560(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,560(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,561(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,562(82) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:48:43,564(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,564(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,564(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,566(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,566(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,567(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,568(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:48:43,577(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:43,577(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:43,578(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:43,578(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:43,585(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:43,585(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:43,586(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:43,586(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:43,587(107) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:43,589(109) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:48:43,593(113) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:43,594(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:43,594(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 15:48:43,594(114) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:48:43,595(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:48:43,595(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:48:43,595(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:48:43,595(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:48:43,595(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:48:43,595(115) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:48:43,636(156) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:48:43,636(156) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:48:43,643(163) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:48:43,645(165) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:48:43,649(169) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:48:43,652(172) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:48:43,708(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:48:43,709(229) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:48:43,710(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:48:43,710(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:48:43,711(231) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:48:43,713(233) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:48:43,714(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:48:43,714(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:48:43,715(235) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:48:43,715(235) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:48:43,716(236) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:48:43,717(237) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:48:43,717(237) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:48:43,718(238) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:48:43,719(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:48:43,721(241) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:48:43,721(241) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:48:43,768(288) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:48:43,769(289) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:48:43,769(289) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:48:43,770(290) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:48:43,794(314) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:48:43,794(314) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:48:43,794(314) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:48:43,795(315) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:48:43,796(316) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:48:43,801(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,801(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,801(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,801(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,802(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,803(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,804(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,804(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,804(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,804(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,804(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,804(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,805(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,805(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,805(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,805(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:43,805(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:43,805(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:43,806(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:43,806(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:43,806(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:43,806(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:43,806(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:43,807(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:43,807(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:43,807(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:43,807(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:43,807(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,808(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,808(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,808(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:48:43,808(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,808(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,808(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,809(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:48:43,809(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:43,809(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:43,809(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:43,809(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:43,809(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:48:43,810(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,811(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:43,812(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:48:43,813(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:48:43,814(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:48:43,815(335) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:48:43,815(335) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:48:43,815(335) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:48:43,815(335) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:48:43,815(335) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:48:43,816(336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:48:43,817(337) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:48:43,817(337) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:48:43,817(337) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:48:43,817(337) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:48:43,824(344) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:48:43,824(344) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:48:43,824(344) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:48:43,825(345) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:48:43,829(349) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:48:43,829(349) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:48:43,829(349) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:48:43,829(349) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:48:43,829(349) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:48:43,830(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:48:43,830(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:48:43,830(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:48:43,830(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:48:43,830(350) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:48:43,830(350) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:48:43,831(351) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:48:43,832(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,832(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,832(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:43,832(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:48:43,832(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:48:43,833(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:48:43,833(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,833(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,833(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:43,833(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,833(353) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,834(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:43,834(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,834(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,834(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:43,834(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,834(354) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,835(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:43,835(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,835(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,835(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:43,835(355) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,836(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,836(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:43,836(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,836(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,836(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:43,836(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:43,837(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:43,838(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:43,839(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:43,840(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:43,840(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:43,840(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:43,840(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:43,840(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:43,841(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:43,841(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:43,841(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:48:43,841(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:48:43,841(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,841(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,842(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:43,843(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:43,844(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:48:43,845(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:48:43,846(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:48:43,846(366) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:48:43,846(366) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:48:43,846(366) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:48:43,846(366) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:48:43,846(366) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:48:43,847(367) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:48:43,848(368) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:48:43,848(368) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:48:43,848(368) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:48:43,848(368) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:48:43,848(368) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:48:43,850(370) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:48:43,851(371) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:48:43,851(371) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:48:43,851(371) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:48:43,855(375) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:48:43,856(376) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:48:43,856(376) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:48:43,856(376) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:48:43,856(376) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:48:43,879(399) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:48:43,930(450) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:48:43,930(450) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:48:43,936(456) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:43,971(491) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:48:43,974(494) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:48:43,981(501) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:48:43,985(505) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:48:44,018(538) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:48:44,024(544) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:48:44,026(546) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:48:44,028(548) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:48:44,033(553) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:48:44,033(553) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:48:44,033(553) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:48:44,033(553) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:48:44,034(554) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:48:44,034(554) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:48:44,034(554) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:48:44,034(554) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:48:44,035(555) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:48:44,035(555) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:48:44,035(555) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:48:44,036(556) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:48:44,036(556) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:48:44,036(556) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:48:44,036(556) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:48:44,036(556) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:48:44,039(559) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:48:44,040(560) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:48:44,040(560) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:48:44,040(560) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:48:44,040(560) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:48:44,041(561) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:48:44,043(563) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,043(563) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,043(563) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:48:44,043(563) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:48:44,043(563) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:48:44,043(563) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:48:44,049(569) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:48:44,073(593) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:48:44,083(603) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:48:44,085(605) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:48:44,088(608) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:48:44,094(614) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:48:44,164(684) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:48:44,165(685) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:48:44,165(685) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:48:44,165(685) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:48:44,165(685) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:48:44,171(691) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:48:44,171(691) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:48:44,178(698) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:48:44,178(698) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:48:44,178(698) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:48:44,186(706) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:48:44,186(706) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:48:44,186(706) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:48:44,453(973) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:48:44,474(994) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:48:44,489(1009) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:48:44,489(1009) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:48:44,490(1010) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:48:44,492(1012) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:48:44,492(1012) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:48:44,492(1012) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:48:44,492(1012) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:48:44,492(1012) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:48:44,493(1013) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:48:44,493(1013) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:48:44,498(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:48:44,498(1018) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:48:44,499(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:48:44,499(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:48:44,499(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:48:44,499(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:48:44,499(1019) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:48:44,499(1019) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:48:44,501(1021) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:48:44,501(1021) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:48:44,501(1021) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:48:44,502(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:48:44,502(1022) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:48:44,502(1022) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:48:44,503(1023) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:48:44,503(1023) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:48:44,508(1028) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:48:44,509(1029) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:48:44,509(1029) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:48:44,509(1029) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:48:44,510(1030) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:48:44,510(1030) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:48:44,531(1051) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:48:44,536(1056) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:48:44,538(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:44,538(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:44,538(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:44,538(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:48:44,538(1058) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:44,539(1059) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:44,540(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:44,540(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:44,540(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:44,540(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:44,540(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:44,540(1060) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:44,541(1061) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:44,542(1062) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:44,543(1063) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:44,544(1064) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:48:44,545(1065) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:48:44,546(1066) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:48:44,547(1067) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,548(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,548(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:44,548(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:44,548(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,548(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,548(1068) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:48:44,549(1069) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:48:44,550(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:48:44,550(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:48:44,550(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:48:44,550(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:48:44,550(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:48:44,550(1070) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164b9b6  
[DEBUG] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:44,551(1071) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,552(1072) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:48:44,553(1073) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,554(1074) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:48:44,555(1075) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:48:44,565(1085) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:48:44,570(1090) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:48:44,706(1226) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:44,706(1226) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:48:44,706(1226) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:48:44,706(1226) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:44,706(1226) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:48:44,707(1227) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:48:44,729(1249) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,729(1249) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,729(1249) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,729(1249) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,730(1250) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,730(1250) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:48:44,730(1250) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,730(1250) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,731(1251) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,731(1251) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,739(1259) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,739(1259) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,758(1278) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:48:44,759(1279) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 05a20964-718e-498e-84af-911e3caa1d7b (unnamed)  
[INFO ] 2015-08-06 15:48:44,760(1280) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:48:44,760(1280) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:48:44,767(1287) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:48:44,767(1287) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:48:44,768(1288) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:48:44,768(1288) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:48:44,768(1288) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:48:44,768(1288) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:48:44,768(1288) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,768(1288) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,769(1289) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:48:44,769(1289) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:48:44,769(1289) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:48:44,769(1289) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:48:44,769(1289) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:48:44,770(1290) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:48:44,770(1290) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:48:44,771(1291) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:48:44,793(1313) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:48:44,794(1314) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:48:44,794(1314) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:48:44,794(1314) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:48:44,794(1314) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:48:44,795(1315) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:48:44,797(1317) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:48:44,797(1317) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:48:44,797(1317) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:48:44,798(1318) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:48:44,799(1319) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:48:44,799(1319) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:48:44,799(1319) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:48:44,800(1320) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:48:44,805(1325) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:48:44,806(1326) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:48:44,806(1326) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:48:44,806(1326) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:48:44,809(1329) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:48:44,811(1331) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:48:44,811(1331) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:48:44,811(1331) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:48:44,811(1331) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:48:44,811(1331) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:48:44,811(1331) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:48:44,811(1331) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:48:44,811(1331) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:48:44,828(1348) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:48:44,829(1349) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:48:44,829(1349) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:48:44,829(1349) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:48:44,829(1349) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:48:44,829(1349) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:48:44,830(1350) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:48:44,831(1351) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:48:44,832(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:48:44,832(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:48:44,832(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:48:44,832(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:48:44,832(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:48:44,832(1352) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:48:44,835(1355) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:48:44,835(1355) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:48:44,836(1356) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@d61aef after already scoped org.hibernate.impl.SessionFactoryImpl@198c6f3  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:48:44,836(1356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:44,837(1357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:44,838(1358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:48:44,839(1359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:44,840(1360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:44,841(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:48:44,841(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:48:44,841(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:44,841(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:44,841(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:48:44,841(1361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:48:44,842(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:44,842(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:48:44,842(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:44,842(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:48:44,842(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:44,842(1362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:48:44,843(1363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:44,844(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:44,844(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:48:44,844(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:44,844(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:44,844(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:48:44,844(1364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:48:44,845(1365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,846(1366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:48:44,847(1367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:48:44,848(1368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:48:44,849(1369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:48:44,850(1370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:48:44,851(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,851(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:48:44,851(1371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:48:44,851(1371) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:48:44,852(1372) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:48:44,852(1372) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:48:44,854(1374) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:44,854(1374) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:48:44,855(1375) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:48:44,855(1375) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:44,855(1375) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:48:44,855(1375) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:48:44,855(1375) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,856(1376) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,856(1376) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,856(1376) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,856(1376) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,857(1377) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:48:44,857(1377) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,857(1377) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:48:44,858(1378) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,858(1378) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,858(1378) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,858(1378) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:44,859(1379) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 3ef8287f-ce03-47ce-a759-a19bef08a87a (unnamed)  
[INFO ] 2015-08-06 15:48:44,859(1379) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:48:44,859(1379) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:48:44,859(1379) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:48:44,859(1379) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:48:44,860(1380) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:48:44,860(1380) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:48:44,861(1381) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:48:44,861(1381) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:48:44,861(1381) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:48:44,862(1382) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:48:44,862(1382) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:48:44,862(1382) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:48:44,874(1394) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:48:44,875(1395) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:48:44,875(1395) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:48:44,875(1395) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:48:44,875(1395) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:48:44,875(1395) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:48:44,876(1396) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:48:44,876(1396) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:48:44,903(1423) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:44,903(1423) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:48:44,946(1466) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473249  
[DEBUG] 2015-08-06 15:48:44,946(1466) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:48:44,948(1468) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:48:44,948(1468) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:44,948(1468) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:48:44,958(1478) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419252723810304, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:48:44,970(1490) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:48:44,970(1490) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:48:44,971(1491) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:48:44,972(1492) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:48:44,973(1493) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:48:44,974(1494) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:48:44,974(1494) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:48:44,975(1495) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419252723810304, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:48:44,992(1512) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:44,992(1512) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:45,009(1529) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:48:45,010(1530) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,073(1593) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:48:45,073(1593) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,074(1594) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,078(1598) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:45,079(1599) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:48:45,079(1599) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473250  
[DEBUG] 2015-08-06 15:48:45,079(1599) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:48:45,080(1600) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:48:45,080(1600) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,080(1600) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:48:45,081(1601) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419252732067841, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:48:45,081(1601) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:48:45,081(1601) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:48:45,081(1601) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:48:45,082(1602) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:48:45,082(1602) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:48:45,083(1603) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:48:45,083(1603) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:48:45,083(1603) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419252732067841, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:48:45,084(1604) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,084(1604) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:45,086(1606) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:48:45,088(1608) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,173(1693) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:48:45,173(1693) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,174(1694) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,174(1694) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:45,175(1695) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:48:45,175(1695) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473251  
[DEBUG] 2015-08-06 15:48:45,175(1695) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:48:45,175(1695) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:48:45,176(1696) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,176(1696) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:48:45,176(1696) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419252738359298, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:48:45,177(1697) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:48:45,177(1697) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:48:45,177(1697) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:48:45,177(1697) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:48:45,178(1698) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:48:45,178(1698) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:48:45,178(1698) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:48:45,179(1699) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419252738359298, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:48:45,179(1699) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,179(1699) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:45,181(1701) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:48:45,190(1710) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473252  
[DEBUG] 2015-08-06 15:48:45,262(1782) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419252744060931, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:48:45,263(1783) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:48:45,264(1784) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419252744060931, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:48:45,264(1784) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,264(1784) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:45,264(1784) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:48:45,265(1785) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,309(1829) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:48:45,309(1829) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,309(1829) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,309(1829) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 0 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:48:45,309(1829) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 0  
[DEBUG] 2015-08-06 15:48:45,309(1829) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473253  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 1301283503232016391419252747141124, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects  
[DEBUG] 2015-08-06 15:48:45,310(1830) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:48:45,311(1831) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:48:45,311(1831) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=1301283503232016391419252747141124, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:48:45,311(1831) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,311(1831) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:48:45,311(1831) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 1  
[DEBUG] 2015-08-06 15:48:45,312(1832) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,350(1870) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:48:45,351(1871) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,351(1871) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,357(1877) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473253  
[DEBUG] 2015-08-06 15:48:45,400(1920) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:48:45,409(1929) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:48:45,409(1929) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:48:45,441(1961) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:48:45,463(1983) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:48:45,468(1988) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:48:45,468(1988) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:48:45,473(1993) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:48:45,477(1997) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:48:45,478(1998) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:48:45,478(1998) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:48:45,478(1998) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:48:45,494(2014) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:48:45,494(2014) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:48:45,495(2015) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:48:45,507(2027) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,507(2027) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,507(2027) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:48:45,508(2028) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,509(2029) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,509(2029) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,510(2030) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:48:45,512(2032) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,512(2032) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,512(2032) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388473255  
[DEBUG] 2015-08-06 15:48:45,513(2033) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:48:45,516(2036) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:48:45,516(2036) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:48:45,516(2036) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:48:45,517(2037) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:48:45,518(2038) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:48:45,519(2039) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:48:45,519(2039) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:48:45,519(2039) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:48:45,519(2039) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:48:45,520(2040) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:48:45,520(2040) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:48:45,521(2041) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:48:45,521(2041) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:48:45,521(2041) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:48:45,521(2041) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,521(2041) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,521(2041) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:48:45,522(2042) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,522(2042) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,523(2043) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,523(2043) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:48:45,523(2043) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,523(2043) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,528(2048) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:48:45,528(2048) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,528(2048) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,529(2049) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:45,530(2050) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,530(2050) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,530(2050) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,530(2050) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:48:45,530(2050) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:48:45,530(2050) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,531(2051) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:48:45,531(2051) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:48:45,531(2051) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,531(2051) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:48:45,531(2051) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:48:45,532(2052) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:48:45,533(2053) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,533(2053) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:48:45,533(2053) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:48:45,533(2053) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:48:45,533(2053) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:48:45,533(2053) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:48:45,533(2053) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:48:45,533(2053) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:48:45,536(2056) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:48:45,536(2056) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:54:15,697(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:15,700(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:15,703(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:15,704(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1171b26  
[DEBUG] 2015-08-06 15:54:15,706(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a42792  
[DEBUG] 2015-08-06 15:54:15,707(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@12a55aa  
[DEBUG] 2015-08-06 15:54:15,714(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:15,714(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:15,714(17) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:15,716(19) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:15,716(19) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:15,716(19) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:15,718(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:15,719(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:15,719(22) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:15,722(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:15,724(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:15,724(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:15,728(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:15,728(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:15,728(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:15,731(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:15,731(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:15,732(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:15,734(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:15,734(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:15,734(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:15,737(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:15,737(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:15,739(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:15,739(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:15,741(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:15,741(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:15,743(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:15,743(46) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:15,747(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:15,747(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:15,749(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:15,749(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:15,752(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:15,752(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:15,752(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:15,753(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106fc94  
[DEBUG] 2015-08-06 15:54:15,755(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:15,756(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:15,756(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:15,757(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@676437  
[DEBUG] 2015-08-06 15:54:15,759(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:15,759(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:15,761(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:15,761(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:15,763(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:15,763(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:15,765(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:15,765(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:15,767(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:15,767(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:15,768(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@81b1fb  
[DEBUG] 2015-08-06 15:54:15,770(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@bac9b9  
[DEBUG] 2015-08-06 15:54:15,772(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:15,772(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:15,772(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:15,774(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:15,774(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:15,774(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:15,775(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@3cc262  
[DEBUG] 2015-08-06 15:54:15,777(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:15,777(80) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:15,778(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:15,780(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:15,780(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:15,780(83) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:15,781(84) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1372656  
[DEBUG] 2015-08-06 15:54:15,790(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:15,790(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:15,791(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b0bdc8  
[DEBUG] 2015-08-06 15:54:15,792(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@19eda2c  
[DEBUG] 2015-08-06 15:54:15,798(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:15,799(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:15,799(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@941db6  
[DEBUG] 2015-08-06 15:54:15,800(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1fbfd6  
[DEBUG] 2015-08-06 15:54:15,801(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1be16f5  
[DEBUG] 2015-08-06 15:54:15,803(106) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@90832e  
[DEBUG] 2015-08-06 15:54:15,807(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:15,807(110) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:15,808(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b02928  
[DEBUG] 2015-08-06 15:54:15,808(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15e234c  
[DEBUG] 2015-08-06 15:54:15,808(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f7107  
[DEBUG] 2015-08-06 15:54:15,808(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f593af  
[DEBUG] 2015-08-06 15:54:15,808(111) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b2c6a6  
[DEBUG] 2015-08-06 15:54:15,809(112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10ffb38  
[DEBUG] 2015-08-06 15:54:15,809(112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36527f  
[DEBUG] 2015-08-06 15:54:15,809(112) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6210fb  
[DEBUG] 2015-08-06 15:54:15,853(156) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:54:15,854(157) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:54:15,861(164) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:54:15,863(166) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:54:15,866(169) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:54:15,870(173) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:54:15,928(231) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:54:15,929(232) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:54:15,931(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:54:15,931(234) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:54:15,936(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:54:15,936(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:54:15,938(241) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:54:15,939(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:54:15,939(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:54:15,941(244) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:54:15,941(244) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:54:15,943(246) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:54:15,943(246) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:54:15,944(247) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:54:15,945(248) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:54:15,947(250) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:54:15,947(250) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:54:15,996(299) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:54:15,996(299) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:54:15,996(299) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:54:15,997(300) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:54:16,021(324) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:54:16,021(324) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:54:16,022(325) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:54:16,022(325) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:54:16,022(325) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:54:16,022(325) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:54:16,022(325) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:54:16,022(325) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:54:16,023(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:54:16,023(326) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:54:16,023(326) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:54:16,023(326) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1171b26  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a42792  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@12a55aa  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,031(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,032(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,033(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:16,034(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:16,035(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:16,035(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:16,035(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:16,035(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:16,035(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:16,035(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:16,036(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,036(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,036(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,036(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106fc94  
[DEBUG] 2015-08-06 15:54:16,036(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,037(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,037(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,037(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@676437  
[DEBUG] 2015-08-06 15:54:16,037(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:16,038(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:16,038(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:16,038(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:16,038(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:16,038(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:16,038(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:16,039(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:16,039(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:16,039(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:16,039(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@81b1fb  
[DEBUG] 2015-08-06 15:54:16,039(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@bac9b9  
[DEBUG] 2015-08-06 15:54:16,039(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,040(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,040(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,040(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,040(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,040(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,040(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@3cc262  
[DEBUG] 2015-08-06 15:54:16,041(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,041(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,041(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,041(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,041(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,041(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,042(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1372656  
[DEBUG] 2015-08-06 15:54:16,042(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,042(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,042(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b0bdc8  
[DEBUG] 2015-08-06 15:54:16,042(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@19eda2c  
[DEBUG] 2015-08-06 15:54:16,042(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,043(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,043(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@941db6  
[DEBUG] 2015-08-06 15:54:16,043(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1fbfd6  
[DEBUG] 2015-08-06 15:54:16,043(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1be16f5  
[DEBUG] 2015-08-06 15:54:16,043(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@90832e  
[DEBUG] 2015-08-06 15:54:16,043(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@eafb71  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@121df2a  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c26b16  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ab2f  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@82d210  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ad2c30  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1302fc5  
[DEBUG] 2015-08-06 15:54:16,044(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@903025  
[DEBUG] 2015-08-06 15:54:16,045(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:54:16,045(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:54:16,045(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:54:16,045(348) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:54:16,046(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:54:16,046(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:54:16,046(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:54:16,046(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:54:16,046(349) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:54:16,047(350) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:54:16,050(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:54:16,050(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:54:16,050(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:54:16,050(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:54:16,051(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:54:16,051(354) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:54:16,051(354) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:54:16,054(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:54:16,054(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:54:16,054(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:54:16,055(358) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:54:16,059(362) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:54:16,060(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:54:16,061(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:54:16,061(364) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:54:16,061(364) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:54:16,061(364) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:54:16,062(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,063(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,063(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,063(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1171b26  
[DEBUG] 2015-08-06 15:54:16,063(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a42792  
[DEBUG] 2015-08-06 15:54:16,063(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@12a55aa  
[DEBUG] 2015-08-06 15:54:16,064(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,064(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,064(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,064(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,064(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,064(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,065(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,066(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:16,067(370) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:16,068(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:16,068(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:16,068(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:16,068(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:16,068(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:16,068(371) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:16,069(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,069(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,069(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,069(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106fc94  
[DEBUG] 2015-08-06 15:54:16,069(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,069(372) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@676437  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:16,070(373) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@81b1fb  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@bac9b9  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,071(374) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@3cc262  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,072(375) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1372656  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b0bdc8  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@19eda2c  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@941db6  
[DEBUG] 2015-08-06 15:54:16,073(376) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1fbfd6  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1be16f5  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@90832e  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20c906  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6db33c  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1263db  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@159e6e8  
[DEBUG] 2015-08-06 15:54:16,074(377) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1469658  
[DEBUG] 2015-08-06 15:54:16,075(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1389b3f  
[DEBUG] 2015-08-06 15:54:16,075(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@158689a  
[DEBUG] 2015-08-06 15:54:16,075(378) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@13b5a3a  
[DEBUG] 2015-08-06 15:54:16,075(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:54:16,075(378) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:54:16,076(379) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:54:16,077(380) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:54:16,077(380) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:54:16,077(380) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:54:16,077(380) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:54:16,077(380) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:54:16,077(380) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:54:16,077(380) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:54:16,078(381) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:54:16,080(383) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:54:16,081(384) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:54:16,081(384) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:54:16,081(384) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:54:16,085(388) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:54:16,086(389) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:54:16,086(389) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:54:16,086(389) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:54:16,086(389) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:54:16,086(389) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:54:16,086(389) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:54:16,087(390) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:54:16,087(390) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:54:16,087(390) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:54:16,087(390) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:54:16,108(411) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:54:16,158(461) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:54:16,158(461) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:54:16,164(467) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:54:16,197(500) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:54:16,200(503) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:54:16,208(511) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:54:16,212(515) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:54:16,254(557) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:54:16,261(564) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:54:16,264(567) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:54:16,266(569) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:54:16,272(575) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:54:16,272(575) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:54:16,272(575) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:54:16,273(576) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:54:16,273(576) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:54:16,273(576) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:54:16,273(576) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:54:16,273(576) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:54:16,274(577) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:54:16,274(577) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:54:16,274(577) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:54:16,274(577) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:54:16,274(577) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:54:16,275(578) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:54:16,275(578) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:54:16,275(578) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:54:16,278(581) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:54:16,279(582) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:54:16,279(582) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:54:16,279(582) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:54:16,279(582) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:54:16,280(583) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:54:16,282(585) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:54:16,282(585) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:54:16,282(585) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:54:16,282(585) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:54:16,282(585) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:54:16,282(585) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:54:16,287(590) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:54:16,312(615) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:54:16,327(630) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:54:16,329(632) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:54:16,332(635) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:54:16,338(641) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:54:16,424(727) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:54:16,425(728) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:54:16,425(728) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:54:16,425(728) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:54:16,425(728) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:54:16,431(734) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:54:16,431(734) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:54:16,440(743) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:54:16,440(743) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:54:16,440(743) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:54:16,448(751) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:54:16,448(751) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:54:16,448(751) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:54:16,720(1023) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:54:16,744(1047) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:54:16,760(1063) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:54:16,760(1063) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:54:16,768(1071) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:54:16,770(1073) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:54:16,770(1073) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:54:16,770(1073) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:54:16,771(1074) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:54:16,771(1074) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:54:16,772(1075) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:54:16,772(1075) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:54:16,772(1075) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:54:16,772(1075) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:54:16,773(1076) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:54:16,774(1077) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:54:16,774(1077) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:54:16,774(1077) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:54:16,774(1077) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:54:16,774(1077) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:54:16,777(1080) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:54:16,777(1080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:54:16,777(1080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:54:16,777(1080) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:54:16,778(1081) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:54:16,778(1081) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:54:16,779(1082) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:54:16,779(1082) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:54:16,784(1087) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:54:16,785(1088) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:54:16,785(1088) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:54:16,785(1088) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:54:16,785(1088) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:54:16,785(1088) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:54:16,806(1109) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:54:16,812(1115) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@102799c  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1171b26  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a42792  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@12a55aa  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,814(1117) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e0f2f6  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f991  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1878144  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,815(1118) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,816(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19bfb30  
[DEBUG] 2015-08-06 15:54:16,816(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,816(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,816(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@15c07d8  
[DEBUG] 2015-08-06 15:54:16,816(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,816(1119) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,817(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8ab708  
[DEBUG] 2015-08-06 15:54:16,817(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,817(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,817(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1649b44  
[DEBUG] 2015-08-06 15:54:16,817(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:16,817(1120) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15e0873  
[DEBUG] 2015-08-06 15:54:16,818(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:16,818(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b7ec5d  
[DEBUG] 2015-08-06 15:54:16,818(1121) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:16,819(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a001ff  
[DEBUG] 2015-08-06 15:54:16,819(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:16,819(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fe88d  
[DEBUG] 2015-08-06 15:54:16,819(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:16,819(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@178460d  
[DEBUG] 2015-08-06 15:54:16,819(1122) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:16,820(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1deeb40  
[DEBUG] 2015-08-06 15:54:16,820(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,820(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,820(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17f242c  
[DEBUG] 2015-08-06 15:54:16,820(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106fc94  
[DEBUG] 2015-08-06 15:54:16,820(1123) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,821(1124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,821(1124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f9b8e  
[DEBUG] 2015-08-06 15:54:16,821(1124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@676437  
[DEBUG] 2015-08-06 15:54:16,821(1124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:16,821(1124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d53f5b  
[DEBUG] 2015-08-06 15:54:16,821(1124) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b1074a  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25c828  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68c26c  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:16,822(1125) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15575e0  
[DEBUG] 2015-08-06 15:54:16,823(1126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@81b1fb  
[DEBUG] 2015-08-06 15:54:16,823(1126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@bac9b9  
[DEBUG] 2015-08-06 15:54:16,823(1126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,823(1126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,823(1126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1687e7c  
[DEBUG] 2015-08-06 15:54:16,823(1126) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701a27  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@3cc262  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@b122a1  
[DEBUG] 2015-08-06 15:54:16,824(1127) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,825(1128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,825(1128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50ca0c  
[DEBUG] 2015-08-06 15:54:16,825(1128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1372656  
[DEBUG] 2015-08-06 15:54:16,825(1128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,825(1128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,825(1128) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b0bdc8  
[DEBUG] 2015-08-06 15:54:16,826(1129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@19eda2c  
[DEBUG] 2015-08-06 15:54:16,826(1129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,826(1129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,826(1129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@941db6  
[DEBUG] 2015-08-06 15:54:16,826(1129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1fbfd6  
[DEBUG] 2015-08-06 15:54:16,826(1129) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1be16f5  
[DEBUG] 2015-08-06 15:54:16,827(1130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@90832e  
[DEBUG] 2015-08-06 15:54:16,827(1130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:16,827(1130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13e754f  
[DEBUG] 2015-08-06 15:54:16,827(1130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ecf608  
[DEBUG] 2015-08-06 15:54:16,827(1130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10cc53e  
[DEBUG] 2015-08-06 15:54:16,827(1130) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1697023  
[DEBUG] 2015-08-06 15:54:16,828(1131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1412b61  
[DEBUG] 2015-08-06 15:54:16,828(1131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@187275d  
[DEBUG] 2015-08-06 15:54:16,828(1131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2982d8  
[DEBUG] 2015-08-06 15:54:16,828(1131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14d55de  
[DEBUG] 2015-08-06 15:54:16,828(1131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40627c  
[DEBUG] 2015-08-06 15:54:16,828(1131) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ba175f  
[INFO ] 2015-08-06 15:54:16,829(1132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@941db6  
[DEBUG] 2015-08-06 15:54:16,829(1132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@10ff62a  
[INFO ] 2015-08-06 15:54:16,829(1132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@19eda2c  
[DEBUG] 2015-08-06 15:54:16,829(1132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@ea7549  
[INFO ] 2015-08-06 15:54:16,829(1132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,829(1132) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ea7549  
[INFO ] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@100bac2  
[DEBUG] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e0420b  
[INFO ] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@1b0bdc8  
[DEBUG] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@a30fd  
[INFO ] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@1be16f5  
[DEBUG] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@1836aea  
[INFO ] 2015-08-06 15:54:16,830(1133) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,831(1134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1836aea  
[INFO ] 2015-08-06 15:54:16,831(1134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@b754b2  
[DEBUG] 2015-08-06 15:54:16,831(1134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1549ceb  
[INFO ] 2015-08-06 15:54:16,831(1134) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@1fbfd6  
[DEBUG] 2015-08-06 15:54:16,833(1136) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:54:16,833(1136) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:54:16,847(1150) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:54:16,851(1154) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:54:17,002(1305) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:54:17,002(1305) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:54:17,002(1305) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:54:17,002(1305) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:54:17,002(1305) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:54:17,002(1305) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:54:17,028(1331) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:54:17,028(1331) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:54:17,028(1331) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:54:17,029(1332) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:54:17,029(1332) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:54:17,029(1332) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:54:17,029(1332) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:54:17,031(1334) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:54:17,031(1334) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:54:17,032(1335) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:54:17,039(1342) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:54:17,039(1342) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:54:17,060(1363) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:54:17,061(1364) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: ae37a66c-de38-471c-a4d0-ed8fc2266a0b (unnamed)  
[INFO ] 2015-08-06 15:54:17,061(1364) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:54:17,061(1364) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:54:17,069(1372) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:54:17,070(1373) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:54:17,071(1374) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:54:17,071(1374) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:54:17,071(1374) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:54:17,071(1374) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:54:17,071(1374) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:54:17,071(1374) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:54:17,072(1375) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:54:17,072(1375) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:54:17,072(1375) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:54:17,072(1375) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:54:17,073(1376) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:54:17,073(1376) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:54:17,073(1376) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:54:17,074(1377) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:54:17,100(1403) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:54:17,100(1403) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:54:17,101(1404) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:54:17,101(1404) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:54:17,101(1404) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:54:17,102(1405) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:54:17,104(1407) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:54:17,104(1407) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:54:17,105(1408) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:54:17,105(1408) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
