[DEBUG] 2015-08-06 15:12:42,888(1188) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:42,888(1188) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:42,889(1189) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:42,889(1189) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:42,889(1189) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:12:42,889(1189) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:42,890(1190) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:42,890(1190) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:42,890(1190) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:42,896(1196) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:42,896(1196) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:42,916(1216) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:12:42,917(1217) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 6596d980-b1bc-43fa-8afc-5d1b692738e8 (unnamed)  
[INFO ] 2015-08-06 15:12:42,917(1217) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:12:42,917(1217) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:12:42,924(1224) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:12:42,924(1224) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:12:42,925(1225) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:12:42,925(1225) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:12:42,925(1225) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:12:42,926(1226) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:12:42,927(1227) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:12:42,928(1228) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:12:42,928(1228) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:12:42,929(1229) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:12:42,953(1253) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:12:42,953(1253) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:12:42,954(1254) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:12:42,954(1254) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:12:42,954(1254) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:12:42,954(1254) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:12:42,956(1256) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:12:42,957(1257) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:12:42,957(1257) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:12:42,957(1257) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:12:42,957(1257) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:12:42,958(1258) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:12:42,959(1259) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:12:42,959(1259) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:12:42,959(1259) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:12:42,960(1260) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:12:42,964(1264) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:12:42,964(1264) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:12:42,969(1269) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:12:42,970(1270) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:12:42,971(1271) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:12:42,972(1272) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:12:42,973(1273) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:12:42,973(1273) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:12:42,973(1273) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:12:42,973(1273) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:12:42,973(1273) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:12:42,973(1273) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:12:42,974(1274) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:12:42,989(1289) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:12:42,989(1289) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:12:42,989(1289) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:12:42,990(1290) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:12:42,991(1291) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:12:42,992(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:12:42,993(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:12:42,993(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:12:42,993(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:12:42,993(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:12:42,993(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:12:42,993(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:12:42,996(1296) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:12:42,997(1297) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:12:42,997(1297) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 15:12:42,997(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:12:42,997(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:12:42,997(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:12:42,997(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:12:42,998(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:12:42,999(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:12:43,000(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:12:43,001(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:12:43,002(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:12:43,003(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:12:43,004(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:12:43,005(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b3cac9  
[DEBUG] 2015-08-06 15:12:43,006(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c67248  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dfd90f  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:12:43,007(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:12:43,008(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:12:43,009(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:12:43,009(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:12:43,009(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:12:43,009(1309) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:12:43,009(1309) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:12:43,010(1310) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:12:43,011(1311) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:12:43,011(1311) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:12:43,011(1311) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:12:43,011(1311) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:12:43,011(1311) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:12:43,012(1312) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:12:43,012(1312) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,012(1312) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,012(1312) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:43,012(1312) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:43,013(1313) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:43,013(1313) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:12:43,013(1313) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:43,013(1313) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:12:43,014(1314) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,014(1314) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,014(1314) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,014(1314) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,014(1314) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 402a60fb-50fc-4f5d-9e70-1568b7ed1762 (unnamed)  
[INFO ] 2015-08-06 15:12:43,014(1314) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:12:43,014(1314) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:12:43,014(1314) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:12:43,015(1315) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:12:43,015(1315) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:12:43,015(1315) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:12:43,015(1315) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:12:43,016(1316) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:12:43,017(1317) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:12:43,017(1317) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:12:43,018(1318) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:12:43,018(1318) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:12:43,032(1332) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:12:43,032(1332) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:12:43,032(1332) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:12:43,032(1332) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:12:43,033(1333) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:12:43,033(1333) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:12:43,034(1334) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:12:43,034(1334) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:12:43,060(1360) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:12:43,061(1361) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:12:43,102(1402) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388451630  
[DEBUG] 2015-08-06 15:12:43,103(1403) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:12:43,105(1405) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:12:43,105(1405) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:12:43,106(1406) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:12:43,115(1415) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949607374422016, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:12:43,125(1425) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:12:43,125(1425) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:12:43,126(1426) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949607375405057, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:12:43,126(1426) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:12:43,126(1426) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:12:43,126(1426) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949607375470594, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:12:43,127(1427) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:12:43,127(1427) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:12:43,127(1427) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949607375536131, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:12:43,127(1427) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:12:43,127(1427) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:12:43,128(1428) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:12:43,129(1429) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:12:43,131(1431) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:12:43,131(1431) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:12:43,132(1432) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:12:43,133(1433) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949607374422016, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:12:43,133(1433) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949607375536131, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:12:43,133(1433) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949607375405057, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:12:43,133(1433) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949607375470594, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:12:43,152(1452) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,152(1452) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:12:43,172(1472) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:12:43,172(1472) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:12:43,173(1473) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:12:43,173(1473) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:12:43,173(1473) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:12:43,174(1474) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:12:43,174(1474) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:12:43,175(1475) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,228(1528) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:12:43,229(1529) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:12:43,229(1529) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:12:43,239(1539) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388451632  
[DEBUG] 2015-08-06 15:12:43,283(1583) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:12:43,294(1594) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:12:43,294(1594) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:12:43,327(1627) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:12:43,347(1647) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:12:43,354(1654) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:12:43,354(1654) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:12:43,359(1659) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:12:43,362(1662) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:12:43,363(1663) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:12:43,363(1663) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:12:43,363(1663) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:12:43,380(1680) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:12:43,381(1681) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:12:43,381(1681) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:12:43,395(1695) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,396(1696) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:12:43,396(1696) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:12:43,397(1697) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,397(1697) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,398(1698) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,399(1699) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:12:43,400(1700) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:12:43,401(1701) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:12:43,401(1701) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388451634  
[DEBUG] 2015-08-06 15:12:43,402(1702) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:12:43,404(1704) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:12:43,404(1704) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:12:43,406(1706) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:12:43,406(1706) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:12:43,408(1708) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:12:43,408(1708) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:12:43,408(1708) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:12:43,408(1708) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:12:43,409(1709) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:12:43,409(1709) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:12:43,409(1709) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:12:43,410(1710) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:12:43,410(1710) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:12:43,410(1710) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:12:43,410(1710) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,410(1710) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:12:43,411(1711) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:12:43,412(1712) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,412(1712) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,412(1712) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,412(1712) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:12:43,412(1712) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:12:43,413(1713) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:12:43,417(1717) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:12:43,417(1717) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,417(1717) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:12:43,417(1717) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,418(1718) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,418(1718) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:12:43,419(1719) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:12:43,426(1726) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:12:43,426(1726) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,426(1726) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:12:43,426(1726) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:12:43,426(1726) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:12:43,426(1726) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:12:43,427(1727) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:12:43,427(1727) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:12:43,427(1727) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:12:43,429(1729) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:12:43,430(1730) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:14:04,224(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,228(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,231(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,232(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:14:04,234(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:14:04,235(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:14:04,238(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,238(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,238(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,239(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,240(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,240(16) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,247(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,247(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,248(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,251(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,252(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,253(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,255(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,255(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,255(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,258(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,258(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,258(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,260(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,260(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,260(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,263(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:04,263(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:04,265(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:04,265(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:04,266(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:04,267(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:04,268(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:04,268(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:04,271(47) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:04,272(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:04,274(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:04,275(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:04,277(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,277(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,277(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,279(55) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:14:04,280(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,280(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,280(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,282(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:14:04,284(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:04,284(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:04,286(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:04,286(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:04,287(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:04,288(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:04,289(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:04,289(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:04,291(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:04,292(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:04,292(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:14:04,293(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:14:04,295(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,295(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,295(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,296(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,297(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,297(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,298(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:14:04,300(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,300(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,300(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,301(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,302(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,302(78) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,303(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:14:04,310(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:04,311(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:04,311(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:04,312(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:04,317(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:04,318(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:04,318(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:04,319(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:04,319(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:04,322(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:14:04,326(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:04,326(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:04,327(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:14:04,327(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:14:04,328(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:14:04,328(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:14:04,328(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:14:04,328(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:14:04,328(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:14:04,328(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1198891  
[DEBUG] 2015-08-06 15:14:04,370(146) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:14:04,371(147) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:14:04,379(155) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:14:04,380(156) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:14:04,384(160) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:14:04,387(163) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:14:04,452(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:14:04,452(228) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:14:04,454(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:14:04,454(230) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:14:04,457(233) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:14:04,457(233) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:14:04,459(235) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:14:04,460(236) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:14:04,461(237) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:14:04,461(237) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:14:04,462(238) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:14:04,463(239) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:14:04,464(240) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:14:04,465(241) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:14:04,466(242) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:14:04,468(244) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:14:04,468(244) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:14:04,516(292) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:14:04,517(293) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:14:04,517(293) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:14:04,518(294) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:14:04,541(317) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:14:04,541(317) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:14:04,542(318) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:14:04,543(319) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:14:04,543(319) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:14:04,543(319) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:14:04,548(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,548(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,548(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,548(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:14:04,549(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:14:04,549(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:14:04,549(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,549(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,549(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,550(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,550(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,550(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,550(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,550(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,550(326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,551(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,551(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,551(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,551(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,551(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,551(327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,552(328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:04,553(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:04,553(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:04,553(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:04,553(329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:04,554(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:04,554(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:04,554(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:04,554(330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:04,555(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:04,555(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:04,555(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:04,555(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,555(331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,556(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,556(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:14:04,556(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,556(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,556(332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:04,557(333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:14:04,558(334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,559(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,559(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,559(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,559(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,559(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,559(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,560(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:14:04,561(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:04,561(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:04,561(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:04,561(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:04,561(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:04,561(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:14:04,562(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:14:04,563(339) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:14:04,564(340) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:14:04,565(341) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:14:04,565(341) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:14:04,565(341) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:14:04,571(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:14:04,571(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:14:04,571(347) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:14:04,572(348) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:14:04,576(352) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:14:04,577(353) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:14:04,577(353) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:14:04,577(353) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:14:04,577(353) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:14:04,577(353) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:14:04,577(353) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:14:04,578(354) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:14:04,578(354) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:14:04,578(354) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:14:04,578(354) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:14:04,578(354) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:14:04,580(356) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,581(357) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,582(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:04,582(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,582(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,582(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:04,582(358) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,583(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,583(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:04,583(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,583(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,583(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:04,583(359) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,584(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,584(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:04,584(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:04,584(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:04,584(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:04,584(360) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:04,585(361) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:04,586(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:04,586(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,586(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,586(362) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:04,587(363) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:14:04,588(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,588(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,588(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:04,588(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:14:04,588(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:04,588(364) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:14:04,589(365) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,590(366) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:04,591(367) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:14:04,592(368) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:14:04,593(369) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:14:04,594(370) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:14:04,595(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:14:04,595(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:14:04,595(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:14:04,595(371) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:14:04,595(371) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:14:04,595(371) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:14:04,597(373) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:14:04,598(374) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:14:04,598(374) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:14:04,598(374) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:14:04,602(378) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:14:04,602(378) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:14:04,602(378) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:14:04,602(378) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:14:04,603(379) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:14:04,603(379) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:14:04,603(379) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:14:04,603(379) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:14:04,603(379) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:14:04,603(379) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:14:04,604(380) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:14:04,627(403) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:14:04,675(451) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:14:04,676(452) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:14:04,680(456) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:04,707(483) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:14:04,709(485) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:14:04,716(492) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:14:04,719(495) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:14:04,747(523) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:14:04,752(528) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:14:04,754(530) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:14:04,756(532) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:14:04,759(535) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:14:04,760(536) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:14:04,760(536) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:14:04,760(536) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:14:04,760(536) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:14:04,760(536) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:14:04,761(537) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:14:04,761(537) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:14:04,761(537) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:14:04,761(537) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:14:04,761(537) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:14:04,761(537) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:14:04,762(538) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:14:04,762(538) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:14:04,762(538) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:14:04,762(538) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:14:04,764(540) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:14:04,765(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:14:04,765(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:14:04,765(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:14:04,765(541) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:14:04,766(542) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:14:04,767(543) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:04,767(543) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:04,767(543) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:14:04,767(543) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:14:04,767(543) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:14:04,768(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:14:04,772(548) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:14:04,797(573) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:14:04,807(583) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:14:04,809(585) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:14:04,811(587) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:14:04,816(592) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:14:04,887(663) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:14:04,887(663) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:14:04,888(664) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:14:04,888(664) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:14:04,889(665) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:14:04,894(670) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:14:04,894(670) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:14:04,901(677) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:14:04,901(677) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:14:04,901(677) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:14:04,909(685) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:14:04,909(685) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:14:04,909(685) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:14:05,175(951) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:14:05,194(970) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:14:05,206(982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:14:05,206(982) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:14:05,207(983) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:14:05,208(984) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:14:05,208(984) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:14:05,209(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:14:05,209(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:14:05,209(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:14:05,209(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:14:05,209(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:14:05,210(986) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:14:05,210(986) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:14:05,217(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:14:05,217(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:14:05,217(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:14:05,217(993) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:14:05,218(994) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:14:05,218(994) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:14:05,220(996) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:14:05,220(996) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:14:05,221(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:14:05,221(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:14:05,221(997) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:14:05,221(997) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:14:05,222(998) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:14:05,223(999) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:14:05,226(1002) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:14:05,227(1003) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:14:05,227(1003) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:14:05,227(1003) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:14:05,227(1003) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:14:05,227(1003) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:14:05,246(1022) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:14:05,251(1027) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:14:05,252(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:05,252(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:05,253(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:05,254(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:05,255(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:05,255(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:05,255(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:05,255(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:05,255(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:05,255(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:05,256(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:05,257(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:05,257(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:05,257(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:05,257(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:05,257(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:05,257(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:05,258(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:05,258(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:05,258(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:05,258(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:05,258(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:05,258(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:05,259(1035) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:14:05,260(1036) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:05,261(1037) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,262(1038) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,263(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:05,263(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:05,263(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:05,263(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:14:05,263(1039) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:14:05,264(1040) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:14:05,265(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:14:05,265(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:14:05,265(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:14:05,265(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:05,265(1041) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:14:05,266(1042) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:14:05,267(1043) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:05,269(1045) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:14:05,269(1045) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:14:05,280(1056) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:14:05,285(1061) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:14:05,413(1189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:05,413(1189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:14:05,413(1189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:14:05,413(1189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:14:05,413(1189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:14:05,413(1189) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:14:05,436(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,436(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,436(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,437(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,437(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,437(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:14:05,437(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,437(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,438(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,438(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,444(1220) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,444(1220) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,463(1239) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:14:05,464(1240) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 4cfacba3-d8cd-416d-8c45-46322605a3cf (unnamed)  
[INFO ] 2015-08-06 15:14:05,465(1241) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:14:05,465(1241) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:14:05,471(1247) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:14:05,471(1247) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:14:05,472(1248) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:14:05,473(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:14:05,474(1250) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:14:05,474(1250) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:14:05,474(1250) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:14:05,475(1251) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:14:05,499(1275) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:14:05,500(1276) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:14:05,500(1276) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:14:05,500(1276) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:14:05,500(1276) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:14:05,501(1277) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:14:05,503(1279) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:14:05,503(1279) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:14:05,504(1280) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:14:05,505(1281) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:14:05,505(1281) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:14:05,505(1281) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:14:05,506(1282) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:14:05,506(1282) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:14:05,513(1289) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:14:05,513(1289) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:14:05,513(1289) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:14:05,514(1290) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:14:05,517(1293) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:14:05,519(1295) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:14:05,520(1296) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:14:05,520(1296) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:14:05,520(1296) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:14:05,520(1296) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:14:05,520(1296) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:14:05,521(1297) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:14:05,521(1297) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:14:05,541(1317) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:14:05,541(1317) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:14:05,541(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:14:05,541(1317) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:14:05,542(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:14:05,542(1318) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:14:05,543(1319) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:14:05,544(1320) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:14:05,544(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:14:05,544(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:14:05,544(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:14:05,544(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:14:05,544(1320) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:14:05,545(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:14:05,549(1325) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:14:05,550(1326) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:14:05,550(1326) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@813bc1  
[DEBUG] 2015-08-06 15:14:05,550(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:05,550(1326) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fec107  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1808199  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@120cc56  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@1ff7a1e  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@186768e  
[DEBUG] 2015-08-06 15:14:05,551(1327) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1630ab9  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c4aad3  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bfc93a  
[DEBUG] 2015-08-06 15:14:05,552(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a9334  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15212bc  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:05,553(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a352a5  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1fc2fb  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b4fad5  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@c68c3  
[DEBUG] 2015-08-06 15:14:05,554(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@406199  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@80fa6f  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1292d26  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10f11b8  
[DEBUG] 2015-08-06 15:14:05,555(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14da8f4  
[DEBUG] 2015-08-06 15:14:05,556(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:05,556(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:05,556(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d85f79  
[DEBUG] 2015-08-06 15:14:05,556(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115273a  
[DEBUG] 2015-08-06 15:14:05,556(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:05,556(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11a64ed  
[DEBUG] 2015-08-06 15:14:05,557(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:05,557(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd928a  
[DEBUG] 2015-08-06 15:14:05,557(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:05,557(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bcc0bc  
[DEBUG] 2015-08-06 15:14:05,557(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:05,557(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12d263f  
[DEBUG] 2015-08-06 15:14:05,558(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:05,558(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6776d  
[DEBUG] 2015-08-06 15:14:05,558(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4fce71  
[DEBUG] 2015-08-06 15:14:05,558(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db7df8  
[DEBUG] 2015-08-06 15:14:05,558(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:05,558(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@21b220  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10a2d64  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@17ce4e7  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:05,559(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:05,560(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@62937c  
[DEBUG] 2015-08-06 15:14:05,560(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:05,560(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:05,560(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a17083  
[DEBUG] 2015-08-06 15:14:05,560(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@1081d2e  
[DEBUG] 2015-08-06 15:14:05,560(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:05,561(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@aa37a6  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cbfe9d  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:14:05,562(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ce663c  
[DEBUG] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:14:05,563(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@fd68b1  
[DEBUG] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@134f69a  
[DEBUG] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@15e9756  
[DEBUG] 2015-08-06 15:14:05,564(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@d1fa5  
[DEBUG] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9f671b  
[DEBUG] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@4b035d  
[DEBUG] 2015-08-06 15:14:05,565(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:14:05,566(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@a6d51e  
[DEBUG] 2015-08-06 15:14:05,566(1342) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:14:05,566(1342) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:14:05,567(1343) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:14:05,569(1345) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:05,569(1345) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:14:05,569(1345) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:14:05,569(1345) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:14:05,569(1345) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:14:05,569(1345) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:14:05,570(1346) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,570(1346) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,570(1346) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,570(1346) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,571(1347) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,571(1347) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:14:05,571(1347) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,571(1347) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:14:05,571(1347) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,572(1348) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,572(1348) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,572(1348) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:05,572(1348) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 8b1846c8-f1cd-455e-ba2f-fc039e87b180 (unnamed)  
[INFO ] 2015-08-06 15:14:05,572(1348) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:14:05,572(1348) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:14:05,572(1348) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:14:05,572(1348) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:14:05,573(1349) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:14:05,573(1349) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:14:05,573(1349) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:14:05,573(1349) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:14:05,573(1349) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:05,573(1349) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:14:05,574(1350) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:14:05,574(1350) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:14:05,574(1350) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:14:05,574(1350) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:14:05,575(1351) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:14:05,575(1351) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:14:05,575(1351) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:14:05,575(1351) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:14:05,589(1365) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:14:05,590(1366) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:14:05,590(1366) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:14:05,590(1366) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:14:05,590(1366) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:14:05,590(1366) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:14:05,591(1367) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:14:05,592(1368) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:14:05,615(1391) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:05,615(1391) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:14:05,654(1430) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388452456  
[DEBUG] 2015-08-06 15:14:05,654(1430) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:14:05,656(1432) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:14:05,656(1432) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:14:05,656(1432) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:14:05,664(1440) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949612784418816, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:14:05,677(1453) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:05,677(1453) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:14:05,677(1453) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949612785532929, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:14:05,678(1454) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:05,678(1454) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:14:05,678(1454) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949612785598466, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:14:05,678(1454) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:14:05,678(1454) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:14:05,678(1454) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949612785598467, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:14:05,679(1455) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:14:05,679(1455) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:14:05,679(1455) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:14:05,680(1456) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:14:05,681(1457) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:14:05,682(1458) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:14:05,682(1458) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:14:05,683(1459) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949612785598466, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:14:05,683(1459) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949612785598467, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:14:05,683(1459) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949612784418816, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:14:05,683(1459) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949612785532929, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:14:05,702(1478) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:05,702(1478) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:14:05,719(1495) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:14:05,719(1495) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:14:05,720(1496) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:14:05,720(1496) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:14:05,721(1497) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:14:05,721(1497) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:14:05,721(1497) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:14:05,723(1499) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:05,796(1572) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:14:05,797(1573) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:14:05,797(1573) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:14:05,826(1602) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388452458  
[DEBUG] 2015-08-06 15:14:05,877(1653) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:14:05,887(1663) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:14:05,887(1663) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:14:05,922(1698) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:14:05,944(1720) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:14:05,951(1727) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:14:05,951(1727) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:14:05,957(1733) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:14:05,961(1737) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:14:05,961(1737) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:14:05,962(1738) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:14:05,962(1738) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:14:05,978(1754) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:14:05,978(1754) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:14:05,978(1754) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:14:05,993(1769) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:05,993(1769) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:14:05,993(1769) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:14:05,994(1770) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:05,994(1770) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:05,995(1771) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:05,996(1772) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:14:05,997(1773) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:14:05,997(1773) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:14:05,997(1773) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388452459  
[DEBUG] 2015-08-06 15:14:05,997(1773) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:14:05,999(1775) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:14:06,000(1776) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:14:06,000(1776) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:14:06,000(1776) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:14:06,001(1777) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:14:06,001(1777) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:14:06,002(1778) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:14:06,002(1778) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:14:06,002(1778) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:14:06,002(1778) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:14:06,003(1779) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:14:06,003(1779) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:14:06,003(1779) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:14:06,003(1779) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:14:06,004(1780) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:06,004(1780) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:14:06,004(1780) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:14:06,005(1781) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:06,005(1781) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:06,005(1781) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:06,005(1781) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:14:06,006(1782) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:14:06,006(1782) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:14:06,010(1786) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:14:06,010(1786) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:06,010(1786) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:14:06,011(1787) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:06,011(1787) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:06,012(1788) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:06,012(1788) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:06,012(1788) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:14:06,012(1788) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:14:06,012(1788) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:14:06,012(1788) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:14:06,013(1789) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:14:06,013(1789) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:06,013(1789) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:14:06,013(1789) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:14:06,014(1790) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:14:06,015(1791) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:06,015(1791) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:14:06,015(1791) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:14:06,015(1791) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:14:06,015(1791) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:14:06,015(1791) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:14:06,015(1791) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:14:06,015(1791) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:14:06,017(1793) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:14:06,017(1793) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:00,682(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:00,685(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:00,688(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:00,689(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:00,691(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:00,692(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:00,694(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:00,694(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:00,694(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:00,696(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:00,696(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:00,696(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:00,703(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:00,703(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:00,703(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:00,707(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:00,709(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:00,709(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:00,712(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:00,712(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:00,712(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:00,714(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:00,714(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:00,715(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:00,716(34) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:00,717(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:00,717(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:00,719(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:00,719(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:00,722(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:00,722(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:00,724(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:00,725(43) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:00,726(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:00,727(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:00,730(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:00,730(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:00,732(50) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:00,733(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:00,735(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:00,735(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:00,735(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:00,736(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:00,738(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:00,739(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:00,739(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:00,740(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:00,741(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:00,742(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:00,743(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:00,743(61) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:00,745(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:00,745(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:00,746(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:00,747(65) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:00,749(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:00,750(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:00,750(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:00,751(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:00,753(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:00,753(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:00,753(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:00,755(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:00,755(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:00,756(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:00,757(75) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:00,758(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:00,759(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:00,759(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:00,761(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:00,761(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:00,761(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:00,763(81) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:00,770(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:00,770(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:00,771(89) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:00,772(90) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:00,778(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:00,779(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:00,779(97) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:00,780(98) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:00,781(99) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:00,782(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:00,785(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:00,786(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:00,786(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 15:17:00,786(104) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:17:00,787(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:17:00,787(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:17:00,787(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:17:00,787(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:17:00,787(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:17:00,787(105) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:17:00,826(144) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:17:00,826(144) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:17:00,835(153) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:17:00,836(154) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:17:00,840(158) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:17:00,843(161) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:17:00,898(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:00,898(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:00,899(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:00,899(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:00,901(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:00,901(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:00,904(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:00,904(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:00,905(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:00,906(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:00,906(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:00,907(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:00,907(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:00,908(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:00,909(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:00,910(228) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:00,911(229) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:00,960(278) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:00,960(278) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:00,961(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:00,961(279) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:00,984(302) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:17:00,985(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:17:00,986(304) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:00,986(304) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:00,986(304) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:17:00,991(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:00,991(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:00,991(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:00,991(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:00,991(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:00,991(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:00,992(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:00,993(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:00,994(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:00,995(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:00,995(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:00,995(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:00,995(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:00,995(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:00,996(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:00,996(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:00,996(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:00,996(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:00,996(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:00,996(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:00,997(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:00,997(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:00,997(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:00,997(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:00,998(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:00,998(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:00,998(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:00,998(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:00,998(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:00,999(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:00,999(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:00,999(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:00,999(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:00,999(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:00,999(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,000(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,001(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,002(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:17:01,003(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:17:01,004(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:17:01,004(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:17:01,004(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:17:01,004(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:17:01,004(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:17:01,004(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:17:01,005(323) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:01,005(323) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:01,005(323) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:01,006(324) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:01,007(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:01,007(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:01,007(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:01,007(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:01,007(325) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:01,007(325) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:01,012(330) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:01,013(331) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:01,013(331) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:01,013(331) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:01,017(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:01,017(335) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:17:01,018(336) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:17:01,019(337) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:01,019(337) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:01,019(337) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:01,022(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,023(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,024(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,024(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,024(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,024(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,024(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,026(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,026(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,026(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,026(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,026(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,026(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:01,027(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:01,028(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:01,028(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:01,028(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:01,028(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:01,028(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,028(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,029(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,029(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:01,029(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,029(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,029(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:01,030(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,031(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:01,032(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:01,033(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:17:01,034(352) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:01,035(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:01,036(354) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:01,036(354) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:01,036(354) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:01,039(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:01,039(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:01,039(357) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:01,039(357) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:01,042(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:01,042(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:17:01,042(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:01,042(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:01,043(361) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:17:01,062(380) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:17:01,113(431) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:01,113(431) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:17:01,117(435) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:01,152(470) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:17:01,155(473) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:17:01,164(482) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:17:01,167(485) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:17:01,200(518) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:01,205(523) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:17:01,207(525) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:17:01,209(527) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:17:01,214(532) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:01,214(532) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:17:01,214(532) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:17:01,214(532) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:17:01,214(532) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:01,215(533) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:17:01,215(533) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:17:01,215(533) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:17:01,215(533) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:01,215(533) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:17:01,216(534) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:17:01,216(534) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:17:01,216(534) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:01,216(534) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:17:01,216(534) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:17:01,216(534) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:17:01,218(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:17:01,218(536) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:17:01,219(537) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:17:01,219(537) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:17:01,219(537) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:17:01,219(537) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:01,221(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:01,221(539) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:01,221(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:01,221(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:01,221(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:01,221(539) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:17:01,226(544) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:17:01,249(567) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:17:01,262(580) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:01,263(581) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:01,265(583) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:01,271(589) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:01,337(655) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:17:01,337(655) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:01,337(655) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:01,338(656) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:01,338(656) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:01,342(660) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:17:01,343(661) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:17:01,350(668) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:17:01,350(668) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:17:01,350(668) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:17:01,357(675) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:17:01,357(675) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:17:01,357(675) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:17:01,611(929) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:17:01,630(948) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:17:01,642(960) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:17:01,642(960) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:17:01,643(961) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:17:01,645(963) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:17:01,645(963) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:17:01,645(963) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:17:01,645(963) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:17:01,645(963) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:17:01,646(964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:17:01,646(964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:17:01,646(964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:17:01,646(964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:17:01,651(969) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:17:01,651(969) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:17:01,651(969) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:17:01,651(969) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:17:01,652(970) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:17:01,652(970) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:01,653(971) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:01,654(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:17:01,654(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:17:01,654(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:17:01,654(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:17:01,654(972) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:17:01,655(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:17:01,655(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:17:01,659(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:17:01,659(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:17:01,659(977) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:17:01,660(978) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:17:01,660(978) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:17:01,660(978) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:17:01,676(994) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:17:01,682(1000) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:17:01,683(1001) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,684(1002) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,685(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,685(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,685(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,685(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,685(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,685(1003) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,686(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:01,687(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:01,688(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:01,689(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,689(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,689(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,689(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:01,689(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,689(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:01,690(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:01,691(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,692(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:01,693(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,694(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:17:01,695(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164b9b6  
[DEBUG] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:17:01,696(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:01,697(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:17:01,697(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:01,697(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:01,697(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,697(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:01,698(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,698(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:17:01,698(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:01,698(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:17:01,698(1016) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:01,700(1018) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:17:01,701(1019) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:17:01,711(1029) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:17:01,715(1033) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:17:01,842(1160) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:01,843(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:17:01,843(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:17:01,843(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:01,843(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:17:01,843(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:17:01,865(1183) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,866(1184) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,866(1184) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,866(1184) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,866(1184) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,866(1184) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:17:01,867(1185) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,867(1185) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,867(1185) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,867(1185) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,875(1193) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,876(1194) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,898(1216) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:17:01,898(1216) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 550e3842-1bf5-40a0-ad4f-d178bdf8b91e (unnamed)  
[INFO ] 2015-08-06 15:17:01,899(1217) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:17:01,899(1217) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:17:01,904(1222) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:17:01,904(1222) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:17:01,905(1223) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:01,906(1224) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:01,907(1225) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:01,908(1226) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:01,908(1226) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:01,908(1226) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:01,909(1227) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:17:01,936(1254) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:17:01,936(1254) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:17:01,937(1255) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:17:01,937(1255) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:17:01,937(1255) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:17:01,937(1255) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:17:01,940(1258) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:17:01,940(1258) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:17:01,941(1259) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:01,942(1260) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:01,943(1261) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:01,943(1261) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:01,943(1261) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:01,944(1262) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:01,950(1268) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:17:01,950(1268) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:01,951(1269) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:01,951(1269) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:01,955(1273) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:01,956(1274) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:17:01,957(1275) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:17:01,957(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:17:01,957(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:17:01,957(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:17:01,957(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:17:01,957(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:17:01,958(1276) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:17:01,973(1291) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:17:01,973(1291) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:17:01,973(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:17:01,973(1291) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:17:01,973(1291) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:17:01,974(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:17:01,975(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:17:01,976(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:17:01,976(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:17:01,976(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:17:01,976(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:17:01,976(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:17:01,976(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:17:01,978(1296) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:17:01,979(1297) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:17:01,979(1297) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@d61aef after already scoped org.hibernate.impl.SessionFactoryImpl@7a36a2  
[DEBUG] 2015-08-06 15:17:01,979(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,979(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,979(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:01,979(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:01,979(1297) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:01,980(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,981(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,981(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:01,981(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,981(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,981(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:01,981(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:01,982(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:01,983(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:01,984(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,985(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,985(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:01,985(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:01,985(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:01,985(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:01,985(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:01,986(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:01,987(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:01,987(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:01,987(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,987(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,987(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:01,987(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,988(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,988(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:01,988(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:01,988(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,988(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,989(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:01,990(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1238785  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19646fd  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10ebe18  
[DEBUG] 2015-08-06 15:17:01,991(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e2433b  
[DEBUG] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:01,992(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,993(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:01,994(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:01,994(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:17:01,994(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:01,994(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:17:01,994(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:01,994(1312) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:17:01,995(1313) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:17:01,995(1313) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:17:01,996(1314) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:01,996(1314) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:17:01,997(1315) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:17:01,997(1315) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:01,997(1315) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:17:01,997(1315) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:17:01,997(1315) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,997(1315) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:01,998(1316) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,998(1316) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,998(1316) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,999(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:17:01,999(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:01,999(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:02,000(1318) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:02,000(1318) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:02,000(1318) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:02,001(1319) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:02,001(1319) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 44aee836-f783-4f32-a8f5-a5d0631b1428 (unnamed)  
[INFO ] 2015-08-06 15:17:02,001(1319) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:17:02,001(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:17:02,001(1319) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:17:02,001(1319) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:17:02,002(1320) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:17:02,002(1320) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:02,002(1320) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:02,002(1320) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:02,002(1320) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:02,002(1320) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:02,003(1321) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:02,003(1321) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:02,003(1321) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:02,003(1321) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:02,004(1322) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:02,004(1322) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:02,004(1322) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:02,004(1322) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:17:02,016(1334) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:17:02,016(1334) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:17:02,017(1335) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:17:02,017(1335) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:17:02,017(1335) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:17:02,017(1335) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:17:02,018(1336) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:17:02,018(1336) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:17:02,043(1361) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:02,043(1361) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:02,079(1397) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388454220  
[DEBUG] 2015-08-06 15:17:02,079(1397) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:17:02,081(1399) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:17:02,081(1399) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:02,081(1399) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:17:02,090(1408) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949624346673152, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:02,100(1418) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:02,100(1418) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:02,101(1419) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949624347656193, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:02,101(1419) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:02,101(1419) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:02,101(1419) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949624347656194, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:02,102(1420) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:02,102(1420) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:02,102(1420) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949624347721731, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:02,102(1420) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:17:02,102(1420) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:17:02,103(1421) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:17:02,104(1422) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:17:02,105(1423) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:17:02,106(1424) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:17:02,106(1424) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:17:02,107(1425) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949624347721731, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:17:02,107(1425) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949624347656194, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:17:02,107(1425) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949624346673152, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:17:02,107(1425) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949624347656193, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:17:02,125(1443) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,125(1443) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:02,146(1464) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:17:02,146(1464) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:02,147(1465) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:17:02,147(1465) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:02,148(1466) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:17:02,148(1466) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:02,148(1466) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:17:02,151(1469) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,265(1583) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:17:02,265(1583) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:02,265(1583) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:02,277(1595) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388454222  
[DEBUG] 2015-08-06 15:17:02,321(1639) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:02,331(1649) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:17:02,331(1649) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:02,361(1679) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:02,379(1697) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:17:02,384(1702) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:02,384(1702) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:17:02,389(1707) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:17:02,393(1711) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:17:02,394(1712) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:02,395(1713) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:17:02,395(1713) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:02,409(1727) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:02,410(1728) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:02,410(1728) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:02,426(1744) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,426(1744) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:02,426(1744) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:02,427(1745) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,427(1745) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,428(1746) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,429(1747) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:02,431(1749) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:02,431(1749) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:02,431(1749) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388454224  
[DEBUG] 2015-08-06 15:17:02,431(1749) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:02,433(1751) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:17:02,434(1752) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:02,434(1752) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:02,435(1753) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:17:02,436(1754) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:02,436(1754) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:17:02,436(1754) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:17:02,436(1754) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:17:02,436(1754) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:02,437(1755) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:17:02,437(1755) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:02,437(1755) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:02,437(1755) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:02,437(1755) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:02,438(1756) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,438(1756) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:02,438(1756) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:02,439(1757) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,439(1757) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,439(1757) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,439(1757) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:02,439(1757) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:02,439(1757) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:02,445(1763) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:17:02,445(1763) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,446(1764) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:02,446(1764) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:02,447(1765) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,447(1765) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,447(1765) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,447(1765) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:02,447(1765) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:17:02,448(1766) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:02,448(1766) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:02,448(1766) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:17:02,448(1766) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,448(1766) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:02,448(1766) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:02,449(1767) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:02,450(1768) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,450(1768) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:02,450(1768) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:02,450(1768) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:17:02,450(1768) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:02,450(1768) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:17:02,451(1769) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:17:02,451(1769) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:17:02,453(1771) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:17:02,453(1771) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:17,947(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:17,951(4) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:17,953(6) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:17,954(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:17,956(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:17,956(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:17,958(11) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:17,959(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:17,959(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:17,960(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:17,960(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:17,961(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:17,968(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:17,968(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:17,968(21) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:17,971(24) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:17,973(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:17,973(26) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:17,976(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:17,976(29) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:17,977(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:17,979(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:17,979(32) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:17,980(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:17,982(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:17,983(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:17,983(36) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:17,986(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:17,986(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:17,989(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:17,989(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:17,991(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:17,991(44) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:17,992(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:17,992(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:17,995(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:17,995(48) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:17,998(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:17,998(51) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,000(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,000(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,000(53) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,001(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:18,003(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,003(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,003(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,004(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:18,006(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,006(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,007(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,007(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,009(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,009(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,011(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,011(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,014(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,014(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,015(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:18,016(69) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:18,018(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,018(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,018(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,020(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,020(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,020(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,021(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:18,023(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,023(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,023(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,024(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,024(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,024(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,026(79) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:18,034(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,034(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,035(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:18,035(88) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:18,040(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,040(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,041(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:18,041(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:18,042(95) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:18,043(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:18,048(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,048(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,049(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 15:17:18,049(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:17:18,049(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:17:18,050(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:17:18,050(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:17:18,050(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:17:18,050(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:17:18,050(103) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:17:18,088(141) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:17:18,089(142) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:17:18,096(149) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:17:18,097(150) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:17:18,100(153) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:17:18,104(157) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:17:18,161(214) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:18,162(215) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:18,163(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:18,163(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:18,165(218) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:18,166(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:18,167(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:18,168(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:18,169(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:18,170(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:18,171(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:18,171(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:18,172(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:18,173(226) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:18,174(227) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:18,176(229) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:18,177(230) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:18,226(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:18,226(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:18,226(279) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:18,227(280) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:18,249(302) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:17:18,250(303) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:18,251(304) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:18,251(304) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:17:18,257(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,257(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,257(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,257(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:18,257(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,258(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,259(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,259(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,259(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,259(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,259(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,259(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,260(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,260(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,260(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,260(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,260(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,260(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:18,261(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:18,262(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:18,262(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:18,262(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:18,262(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:18,263(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:18,263(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:18,263(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,263(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,263(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,263(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,264(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,264(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:18,265(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,265(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,265(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,265(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:18,265(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,265(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,266(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,266(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,266(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,266(319) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:18,267(320) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,268(321) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:18,269(322) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:18,270(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,270(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,270(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:18,270(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:18,270(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:18,270(323) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:17:18,271(324) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:17:18,272(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:17:18,272(325) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:17:18,272(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:18,272(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:18,272(325) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:18,273(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:18,273(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:18,273(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:18,273(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:18,273(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:18,273(326) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:18,274(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:18,274(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:18,274(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:18,274(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:18,274(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:18,274(327) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:18,274(327) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:18,275(328) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:18,280(333) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:18,281(334) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:18,281(334) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:18,282(335) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:17:18,286(339) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:17:18,287(340) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:18,287(340) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:18,287(340) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,288(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,289(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,290(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:18,291(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,292(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,293(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,294(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,295(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:18,296(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:18,297(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:18,297(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,297(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,297(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:17:18,298(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:18,299(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:18,300(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:18,300(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:18,300(353) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:18,300(353) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:18,300(353) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:18,302(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:18,302(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:18,302(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:18,302(355) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:18,308(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:18,308(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:17:18,308(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:18,310(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:18,310(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:18,310(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:18,310(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:18,310(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:17:18,310(363) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:18,311(364) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:18,311(364) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:17:18,331(384) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:17:18,377(430) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:18,377(430) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:17:18,382(435) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:18,413(466) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:17:18,416(469) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:17:18,424(477) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:17:18,428(481) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:17:18,463(516) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:18,470(523) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:17:18,472(525) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:17:18,474(527) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:17:18,479(532) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:18,480(533) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:17:18,480(533) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:17:18,480(533) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:17:18,481(534) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:18,481(534) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:17:18,481(534) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:17:18,481(534) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:17:18,482(535) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:18,482(535) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:17:18,482(535) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:17:18,482(535) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:17:18,483(536) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:18,483(536) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:17:18,483(536) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:17:18,483(536) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:17:18,485(538) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:17:18,486(539) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:17:18,486(539) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:17:18,486(539) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:17:18,486(539) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:17:18,487(540) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:18,488(541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:18,488(541) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:18,488(541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:18,488(541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:18,488(541) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:18,489(542) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:17:18,493(546) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:17:18,516(569) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:17:18,527(580) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:18,528(581) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:18,532(585) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:18,537(590) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:18,604(657) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:17:18,604(657) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:18,604(657) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:18,605(658) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:18,605(658) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:18,611(664) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:17:18,611(664) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:17:18,617(670) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:17:18,617(670) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:17:18,617(670) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:17:18,623(676) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:17:18,623(676) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:17:18,623(676) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:17:18,877(930) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:17:18,895(948) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:17:18,908(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:17:18,908(961) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:17:18,909(962) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:17:18,911(964) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:17:18,911(964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:17:18,911(964) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:17:18,912(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:17:18,912(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:17:18,912(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:17:18,912(965) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:17:18,913(966) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:17:18,913(966) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:17:18,918(971) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:17:18,919(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:17:18,919(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:17:18,919(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:17:18,919(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:17:18,919(972) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:18,921(974) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:18,921(974) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:17:18,921(974) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:17:18,921(974) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:17:18,922(975) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:17:18,922(975) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:17:18,923(976) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:17:18,923(976) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:17:18,927(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:17:18,927(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:17:18,928(981) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:17:18,928(981) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:17:18,928(981) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:17:18,928(981) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:17:18,945(998) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:17:18,949(1002) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,951(1004) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:18,952(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,952(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,952(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:18,952(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,952(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,952(1005) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:18,953(1006) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:18,954(1007) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,955(1008) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:18,956(1009) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,957(1010) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,958(1011) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:18,959(1012) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a29c6e  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:17:18,960(1013) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:17:18,961(1014) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:17:18,962(1015) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:18,964(1017) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:17:18,964(1017) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:17:18,975(1028) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:17:18,980(1033) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:17:19,108(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:19,108(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:17:19,108(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:17:19,108(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:19,108(1161) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:17:19,109(1162) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:17:19,132(1185) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,133(1186) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,133(1186) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,133(1186) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,133(1186) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,134(1187) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:17:19,134(1187) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,134(1187) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,134(1187) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,135(1188) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,142(1195) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,143(1196) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,164(1217) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:17:19,165(1218) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: a3a69513-2b8f-4611-9081-1cc3aee13a6f (unnamed)  
[INFO ] 2015-08-06 15:17:19,165(1218) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:17:19,165(1218) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:17:19,172(1225) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:17:19,172(1225) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:17:19,173(1226) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:17:19,173(1226) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:19,173(1226) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:19,173(1226) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:19,174(1227) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:19,174(1227) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:19,174(1227) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:19,174(1227) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:19,174(1227) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:19,174(1227) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:19,175(1228) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:19,175(1228) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:19,175(1228) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:19,176(1229) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:17:19,201(1254) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:17:19,201(1254) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:17:19,202(1255) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:17:19,202(1255) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:17:19,202(1255) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:17:19,202(1255) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:17:19,204(1257) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:17:19,205(1258) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:17:19,205(1258) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:19,206(1259) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:19,207(1260) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:19,207(1260) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:19,208(1261) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:19,208(1261) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:19,209(1262) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:19,214(1267) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:17:19,215(1268) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:19,215(1268) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:19,216(1269) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:19,220(1273) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:19,221(1274) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:17:19,221(1274) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:17:19,222(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:17:19,222(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:17:19,222(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:17:19,222(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:17:19,222(1275) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:17:19,222(1275) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:17:19,238(1291) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:17:19,238(1291) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:17:19,239(1292) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:19,240(1293) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:17:19,241(1294) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:17:19,242(1295) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:17:19,242(1295) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:17:19,242(1295) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:17:19,245(1298) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:17:19,245(1298) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:17:19,245(1298) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1ed27e4 after already scoped org.hibernate.impl.SessionFactoryImpl@7a36a2  
[DEBUG] 2015-08-06 15:17:19,245(1298) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:19,246(1299) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:19,247(1300) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:19,248(1301) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:19,249(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:19,249(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:19,249(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:19,249(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:19,249(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:19,249(1302) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:19,250(1303) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:19,251(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:19,251(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:19,251(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:19,251(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:19,251(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:19,251(1304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:19,252(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:19,252(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:19,252(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:19,252(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:19,252(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:19,252(1305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:19,253(1306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:19,254(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:19,254(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:19,254(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:19,254(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:19,254(1307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:19,255(1308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:19,256(1309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:17:19,257(1310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ce663c  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19a0feb  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16477d9  
[INFO ] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:19,258(1311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10e434d  
[INFO ] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:19,259(1312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:19,260(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:19,260(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d9896e  
[INFO ] 2015-08-06 15:17:19,260(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:19,260(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c17f7  
[INFO ] 2015-08-06 15:17:19,260(1313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:19,260(1313) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:17:19,261(1314) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:17:19,261(1314) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[DEBUG] 2015-08-06 15:17:19,262(1315) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:19,262(1315) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,263(1316) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,264(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,264(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,264(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:17:19,264(1317) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,265(1318) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:19,265(1318) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,265(1318) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,265(1318) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,266(1319) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,266(1319) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: 5b65c92a-f14b-43ef-9469-dd94c06cff70 (unnamed)  
[INFO ] 2015-08-06 15:17:19,266(1319) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:17:19,266(1319) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:17:19,266(1319) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:17:19,266(1319) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:17:19,267(1320) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:19,267(1320) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:19,268(1321) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:19,268(1321) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:19,268(1321) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:19,269(1322) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:17:19,282(1335) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards2.anno_contact  
[INFO ] 2015-08-06 15:17:19,283(1336) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:17:19,283(1336) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:17:19,283(1336) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:17:19,283(1336) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:17:19,283(1336) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:17:19,284(1337) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:17:19,285(1338) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:17:19,312(1365) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:19,312(1365) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:19,351(1404) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388454393  
[DEBUG] 2015-08-06 15:17:19,351(1404) org.hibernate.shards.transaction.ShardedTransactionImpl.setupTransaction(ShardedTransactionImpl.java:71) –> [main] Setting up transaction  
[DEBUG] 2015-08-06 15:17:19,353(1406) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) –> [main] begin  
[DEBUG] 2015-08-06 15:17:19,353(1406) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:19,353(1406) org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) –> [main] current autocommit status: false  
[DEBUG] 2015-08-06 15:17:19,361(1414) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949625478610944, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:19,373(1426) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:19,374(1427) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:19,374(1427) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949625479659521, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:19,374(1427) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:19,374(1427) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:19,375(1428) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949625479725058, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:19,375(1428) org.hibernate.shards.session.ShardedSessionImpl.selectShardIdForNewObject(ShardedSessionImpl.java:669) –> [main] Selected shard 1 for object of type cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:19,375(1428) org.hibernate.shards.session.ShardedSessionImpl.save(ShardedSessionImpl.java:641) –> [main] Saving object of type class cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity to shard 1  
[DEBUG] 2015-08-06 15:17:19,375(1428) org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) –> [main] generated identifier: 6493580361766844019949625479725059, using strategy: org.hibernate.shards.id.ShardedUUIDGenerator  
[DEBUG] 2015-08-06 15:17:19,375(1428) org.hibernate.shards.transaction.ShardedTransactionImpl.commit(ShardedTransactionImpl.java:119) –> [main] Starting transaction commit  
[DEBUG] 2015-08-06 15:17:19,375(1428) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:130) –> [main] commit  
[DEBUG] 2015-08-06 15:17:19,376(1429) org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) –> [main] processing flush-time cascades  
[DEBUG] 2015-08-06 15:17:19,376(1429) org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) –> [main] dirty checking collections  
[DEBUG] 2015-08-06 15:17:19,378(1431) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) –> [main] Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects  
[DEBUG] 2015-08-06 15:17:19,378(1431) org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) –> [main] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections  
[DEBUG] 2015-08-06 15:17:19,379(1432) org.hibernate.pretty.Printer.toString(Printer.java:106) –> [main] listing entities:  
[DEBUG] 2015-08-06 15:17:19,379(1432) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949625479725058, loginId=b@cnblogs.com, email=b@cnblogs.com, name=BBB, password=123}  
[DEBUG] 2015-08-06 15:17:19,379(1432) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949625479659521, loginId=a@cnblogs.com, email=a@cnblogs.com, name=AAA, password=123}  
[DEBUG] 2015-08-06 15:17:19,379(1432) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949625478610944, loginId=RicCC@cnblogs.com, email=RicCC@cnblogs.com, name=Richie, password=123}  
[DEBUG] 2015-08-06 15:17:19,379(1432) org.hibernate.pretty.Printer.toString(Printer.java:113) –> [main] cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity{id=6493580361766844019949625479725059, loginId=c@cnblogs.com, email=c@cnblogs.com, name=CCC, password=123}  
[DEBUG] 2015-08-06 15:17:19,397(1450) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,397(1450) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:19,418(1471) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:17:19,418(1471) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:19,418(1471) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:17:19,419(1472) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:19,419(1472) org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) –> [main] reusing prepared statement  
[DEBUG] 2015-08-06 15:17:19,419(1472) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:19,420(1473) org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) –> [main] Executing batch size: 4  
[DEBUG] 2015-08-06 15:17:19,421(1474) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,495(1548) org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:143) –> [main] committed JDBC Connection  
[DEBUG] 2015-08-06 15:17:19,495(1548) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:19,496(1549) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:19,518(1571) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388454395  
[DEBUG] 2015-08-06 15:17:19,583(1636) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:19,593(1646) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:17:19,593(1646) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:19,623(1676) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:19,642(1695) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:17:19,648(1701) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:19,648(1701) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:17:19,653(1706) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:17:19,657(1710) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:17:19,658(1711) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:19,659(1712) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:17:19,659(1712) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:19,673(1726) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:19,673(1726) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:19,673(1726) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:19,685(1738) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,685(1738) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:19,685(1738) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:19,686(1739) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,687(1740) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,687(1740) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,688(1741) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:19,689(1742) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:19,689(1742) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:19,689(1742) org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) –> [main] opened session at timestamp: 14388454396  
[DEBUG] 2015-08-06 15:17:19,689(1742) org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) –> [main] parse() - HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:19,691(1744) org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) –> [main] --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  |  |  +-[IDENT] Node: 'cn'
    |           |  |  |  |  |  |  \-[IDENT] Node: 'cjp'
    |           |  |  |  |  |  \-[IDENT] Node: 'demo'
    |           |  |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  |  \-[IDENT] Node: 'shards'
    |           |  |  \-[IDENT] Node: 'xml'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'ContactEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'LoginId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'loginId'
  
[DEBUG] 2015-08-06 15:17:19,692(1745) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:19,692(1745) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) –> [main] select << begin [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:19,693(1746) org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) –> [main] FromClause{level=1} :  cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity (no alias) -> contactent0_  
[DEBUG] 2015-08-06 15:17:19,694(1747) org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) –> [main] select : finishing up [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:19,694(1747) org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) –> [main] processQuery() :  ( SELECT ( FromClause{level=1} anno_contact contactent0_ ) ( where ( = LoginId ? ) ) )  
[DEBUG] 2015-08-06 15:17:19,695(1748) org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) –> [main] Derived SELECT clause created.  
[DEBUG] 2015-08-06 15:17:19,695(1748) org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) –> [main] Using FROM fragment [anno_contact contactent0_]  
[DEBUG] 2015-08-06 15:17:19,695(1748) org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) –> [main] select >> end [level=1, statement=select]  
[DEBUG] 2015-08-06 15:17:19,696(1749) org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) –> [main] --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (anno_contact)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contactent0_.ID as ID0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contactent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'anno_contact contactent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=anno_contact,tableAlias=contactent0_,origin=null,columns={,className=cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'LoginId' {originalText=LoginId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=loginId, expectedType=null}
  
[DEBUG] 2015-08-06 15:17:19,696(1749) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:19,696(1749) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) –> [main] HQL: from cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity where LoginId=:loginId  
[DEBUG] 2015-08-06 15:17:19,696(1749) org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) –> [main] SQL: select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:19,696(1749) org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) –> [main] throwQueryException() : no errors  
[DEBUG] 2015-08-06 15:17:19,697(1750) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,697(1750) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:19,697(1750) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_, contactent0_.EMAIL as EMAIL0_, contactent0_.LOGINid as LOGINid0_, contactent0_.NAME as NAME0_, contactent0_.PASSWORD as PASSWORD0_ from anno_contact contactent0_ where LoginId=?  
[DEBUG] 2015-08-06 15:17:19,698(1751) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,698(1751) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,698(1751) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,698(1751) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:19,698(1751) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:19,699(1752) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:19,704(1757) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#1]  
[DEBUG] 2015-08-06 15:17:19,704(1757) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,704(1757) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:19,704(1757) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,706(1759) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,706(1759) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,706(1759) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,706(1759) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:19,706(1759) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:17:19,706(1759) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:19,707(1760) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[DEBUG] 2015-08-06 15:17:19,707(1760) org.hibernate.loader.Loader.loadEntity(Loader.java:2022) –> [main] loading entity: [cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity#2]  
[DEBUG] 2015-08-06 15:17:19,707(1760) org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) –> [main] about to open PreparedStatement (open PreparedStatements: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,707(1760) org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) –> [main] opening JDBC connection  
[DEBUG] 2015-08-06 15:17:19,707(1760) org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) –> [main] select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:19,709(1762) org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) –> [main] about to open ResultSet (open ResultSets: 0, globally: 0)  
[DEBUG] 2015-08-06 15:17:19,709(1762) org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) –> [main] about to close ResultSet (open ResultSets: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,709(1762) org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) –> [main] about to close PreparedStatement (open PreparedStatements: 1, globally: 1)  
[DEBUG] 2015-08-06 15:17:19,709(1762) org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) –> [main] initializing non-lazy collections  
[DEBUG] 2015-08-06 15:17:19,710(1763) org.hibernate.loader.Loader.loadEntity(Loader.java:2050) –> [main] done entity load  
[DEBUG] 2015-08-06 15:17:19,710(1763) org.hibernate.jdbc.ConnectionManager.aggressiveRelease(ConnectionManager.java:427) –> [main] aggressively releasing JDBC connection  
[DEBUG] 2015-08-06 15:17:19,710(1763) org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) –> [main] releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]  
[INFO ] 2015-08-06 15:17:19,710(1763) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:17:19,710(1763) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:17:19,712(1765) org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) –> [main] closing  
[INFO ] 2015-08-06 15:17:19,713(1766) org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) –> [main] cleaning up connection pool: jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:33,771(0) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:33,774(3) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:33,778(7) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:33,779(8) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:33,780(9) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:33,781(10) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:33,783(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:33,783(12) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:33,784(13) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:33,785(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:33,785(14) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:33,786(15) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:33,794(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:33,794(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:33,794(23) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:33,796(25) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:33,798(27) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:33,799(28) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:33,801(30) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:33,802(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:33,802(31) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:33,804(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:33,804(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:33,804(33) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:33,806(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:33,806(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:33,806(35) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:33,808(37) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:33,809(38) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:33,810(39) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:33,811(40) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:33,812(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:33,812(41) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:33,813(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:33,813(42) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:33,816(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:33,816(45) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:33,820(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:33,820(49) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:33,823(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:33,823(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:33,823(52) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:33,825(54) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:33,827(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:33,827(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:33,827(56) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:33,828(57) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:33,829(58) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:33,830(59) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:33,831(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:33,831(60) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:33,833(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:33,833(62) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:33,834(63) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:33,835(64) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:33,837(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:33,837(66) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:33,838(67) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:33,839(68) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:33,841(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:33,841(70) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:33,842(71) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:33,843(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:33,843(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:33,843(72) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:33,844(73) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:33,845(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:33,845(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:33,845(74) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:33,847(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:33,847(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:33,847(76) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:33,848(77) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:33,856(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:33,856(85) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:33,857(86) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:33,858(87) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:33,862(91) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:33,863(92) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:33,864(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:33,864(93) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:33,865(94) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:33,867(96) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:33,871(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:33,871(100) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:33,872(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b8f864  
[DEBUG] 2015-08-06 15:17:33,872(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bb7759  
[DEBUG] 2015-08-06 15:17:33,872(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1989f84  
[DEBUG] 2015-08-06 15:17:33,872(101) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@110c424  
[DEBUG] 2015-08-06 15:17:33,873(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1bd2664  
[DEBUG] 2015-08-06 15:17:33,873(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1238bd2  
[DEBUG] 2015-08-06 15:17:33,873(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0bad7  
[DEBUG] 2015-08-06 15:17:33,873(102) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba9340  
[DEBUG] 2015-08-06 15:17:33,915(144) org.hibernate.annotations.common.util.impl.LoggerFactory.make(LoggerFactory.java:33) –> [main] Logging Provider: org.jboss.logging.Log4jLoggerProvider  
[INFO ] 2015-08-06 15:17:33,916(145) org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66) –> [main] HCANN000001: Hibernate Commons Annotations {4.0.4.Final}  
[INFO ] 2015-08-06 15:17:33,923(152) org.hibernate.cfg.Environment.<clinit>(Environment.java:603) –> [main] Hibernate 3.6.6.Final  
[INFO ] 2015-08-06 15:17:33,924(153) org.hibernate.cfg.Environment.<clinit>(Environment.java:636) –> [main] hibernate.properties not found  
[INFO ] 2015-08-06 15:17:33,928(157) org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) –> [main] Bytecode provider name : javassist  
[INFO ] 2015-08-06 15:17:33,931(160) org.hibernate.cfg.Environment.<clinit>(Environment.java:695) –> [main] using JDK 1.4 java.sql.Timestamp handling  
[DEBUG] 2015-08-06 15:17:33,986(215) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:33,987(216) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:33,988(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:33,988(217) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:33,989(218) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:33,990(219) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:33,991(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:33,991(220) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:33,992(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:33,992(221) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:33,993(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:33,993(222) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:33,994(223) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:33,995(224) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:33,996(225) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:33,997(226) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:33,997(226) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:34,044(273) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:34,044(273) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:34,044(273) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:34,045(274) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:34,068(297) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:34,068(297) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:34,068(297) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:34,068(297) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:34,069(298) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:34,070(299) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:34,075(304) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,076(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,076(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,076(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,076(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,076(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,076(305) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,077(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,077(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,077(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,077(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,077(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,077(306) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,078(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,078(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,078(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,078(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,078(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,078(307) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,079(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,079(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,079(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:34,079(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:34,079(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:34,079(308) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:34,080(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:34,080(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:34,080(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:34,080(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:34,080(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:34,080(309) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:34,081(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:34,081(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:34,081(310) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,082(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,082(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,082(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:34,082(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,082(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,082(311) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,083(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:34,083(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:34,083(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:34,083(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:34,083(312) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:34,084(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:34,084(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:34,084(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:34,084(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:34,084(313) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:34,085(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:34,085(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:34,085(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:34,085(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,085(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,085(314) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,086(315) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,087(316) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16f25a7  
[DEBUG] 2015-08-06 15:17:34,088(317) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@110c31  
[DEBUG] 2015-08-06 15:17:34,089(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13785d3  
[DEBUG] 2015-08-06 15:17:34,089(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32efa7  
[DEBUG] 2015-08-06 15:17:34,089(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13f991  
[DEBUG] 2015-08-06 15:17:34,089(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@165a3c2  
[DEBUG] 2015-08-06 15:17:34,089(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e228bc  
[DEBUG] 2015-08-06 15:17:34,089(318) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e06940  
[DEBUG] 2015-08-06 15:17:34,090(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:34,090(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:34,090(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:34,090(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:34,090(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:34,090(319) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:34,091(320) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:34,092(321) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:34,092(321) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard0.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:34,092(321) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard0.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:34,097(326) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:34,097(326) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:34,098(327) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:34,098(327) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:34,103(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:34,103(332) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.pool_size=10  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hbm2ddl.auto=update  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=0  
[DEBUG] 2015-08-06 15:17:34,104(333) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:34,105(334) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:34,105(334) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=10}  
[DEBUG] 2015-08-06 15:17:34,106(335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,107(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,107(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,107(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:34,107(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:34,107(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:34,107(336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,108(337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,109(338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,110(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,110(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,110(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,110(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,110(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,110(339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:34,111(340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:34,112(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:34,112(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:34,112(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:34,112(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:34,112(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,112(341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,113(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,113(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:34,113(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,113(342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:34,114(343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:34,115(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:34,115(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:34,115(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:34,115(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:34,115(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:34,115(344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,116(345) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,117(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:34,117(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,117(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,117(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,117(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,117(346) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,118(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,118(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:34,118(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,118(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,118(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:34,118(347) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:34,119(348) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@195d4fe  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2b01b  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127fa12  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@192c8d9  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c05ffd  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de1b8a  
[DEBUG] 2015-08-06 15:17:34,120(349) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e232b5  
[DEBUG] 2015-08-06 15:17:34,121(350) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f144c  
[DEBUG] 2015-08-06 15:17:34,121(350) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]  
[DEBUG] 2015-08-06 15:17:34,121(350) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]  
[DEBUG] 2015-08-06 15:17:34,121(350) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]  
[DEBUG] 2015-08-06 15:17:34,122(351) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]  
[DEBUG] 2015-08-06 15:17:34,123(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]  
[DEBUG] 2015-08-06 15:17:34,123(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]  
[DEBUG] 2015-08-06 15:17:34,123(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]  
[DEBUG] 2015-08-06 15:17:34,123(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]  
[DEBUG] 2015-08-06 15:17:34,123(352) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) –> [main] Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]  
[INFO ] 2015-08-06 15:17:34,123(352) org.hibernate.cfg.Configuration.configure(Configuration.java:2156) –> [main] configuring from resource: annotation/shard1.hibernate.cfg.xml  
[INFO ] 2015-08-06 15:17:34,123(352) org.hibernate.cfg.Configuration.getConfigurationInputStream(Configuration.java:2175) –> [main] Configuration resource: annotation/shard1.hibernate.cfg.xml  
[DEBUG] 2015-08-06 15:17:34,126(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) –> [main] trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]  
[WARN ] 2015-08-06 15:17:34,126(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) –> [main] recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!  
[DEBUG] 2015-08-06 15:17:34,126(355) org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) –> [main] attempting to resolve on classpath under org/hibernate/  
[DEBUG] 2015-08-06 15:17:34,127(356) org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) –> [main] located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath  
[DEBUG] 2015-08-06 15:17:34,130(359) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.driver_class=com.mysql.jdbc.Driver  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.url=jdbc:mysql://localhost/hbshards2  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.username=root  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] connection.password=root  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] show_sql=true  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] dialect=org.hibernate.dialect.MySQLDialect  
[DEBUG] 2015-08-06 15:17:34,131(360) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.connection.shard_id=1  
[DEBUG] 2015-08-06 15:17:34,132(361) org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) –> [main] hibernate.shard.enable_cross_shard_relationship_checks=false  
[INFO ] 2015-08-06 15:17:34,132(361) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) –> [main] Configured SessionFactory: null  
[DEBUG] 2015-08-06 15:17:34,132(361) org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) –> [main] properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, java.vm.version=20.2-b06, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, java.runtime.version=1.6.0_27-b07, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.connection.shard_id=1, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, hibernate.shard.enable_cross_shard_relationship_checks=false, sun.jnu.encoding=GBK, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, connection.password=root, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Administrator, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.home=D:\__JAVA__\jre6.0, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, user.language=zh, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_27, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://localhost/hbshards2, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}  
[DEBUG] 2015-08-06 15:17:34,156(385) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:17:34,208(437) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:34,208(437) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[INFO ] 2015-08-06 15:17:34,213(442) org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) –> [main] Binding entity from annotated class: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:34,245(474) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}  
[DEBUG] 2015-08-06 15:17:34,248(477) org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) –> [main] no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED  
[DEBUG] 2015-08-06 15:17:34,256(485) org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) –> [main] Import with entity name ContactEntity  
[INFO ] 2015-08-06 15:17:34,259(488) org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) –> [main] Bind entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity on table anno_contact  
[DEBUG] 2015-08-06 15:17:34,294(523) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=ID, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:34,299(528) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property id with lazy=false  
[DEBUG] 2015-08-06 15:17:34,301(530) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for id  
[DEBUG] 2015-08-06 15:17:34,304(533) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property id  
[DEBUG] 2015-08-06 15:17:34,308(537) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=EMAIL, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:34,308(537) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property email with lazy=false  
[DEBUG] 2015-08-06 15:17:34,309(538) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for email  
[DEBUG] 2015-08-06 15:17:34,309(538) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property email  
[DEBUG] 2015-08-06 15:17:34,309(538) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=LOGINid, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:34,309(538) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property loginId with lazy=false  
[DEBUG] 2015-08-06 15:17:34,309(538) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for loginId  
[DEBUG] 2015-08-06 15:17:34,309(538) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property loginId  
[DEBUG] 2015-08-06 15:17:34,310(539) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=NAME, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:34,310(539) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property name with lazy=false  
[DEBUG] 2015-08-06 15:17:34,310(539) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for name  
[DEBUG] 2015-08-06 15:17:34,310(539) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property name  
[DEBUG] 2015-08-06 15:17:34,310(539) org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) –> [main] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(anno_contact), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}  
[DEBUG] 2015-08-06 15:17:34,311(540) org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) –> [main] binding property password with lazy=false  
[DEBUG] 2015-08-06 15:17:34,311(540) org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) –> [main] building SimpleValue for password  
[DEBUG] 2015-08-06 15:17:34,311(540) org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) –> [main] Building property password  
[DEBUG] 2015-08-06 15:17:34,313(542) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for id  
[DEBUG] 2015-08-06 15:17:34,313(542) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for email  
[DEBUG] 2015-08-06 15:17:34,313(542) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for loginId  
[DEBUG] 2015-08-06 15:17:34,313(542) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for name  
[DEBUG] 2015-08-06 15:17:34,313(542) org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) –> [main] Setting SimpleValue typeName for password  
[DEBUG] 2015-08-06 15:17:34,314(543) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:34,315(544) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:34,316(545) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:34,316(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:34,316(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:34,316(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:34,316(545) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[INFO ] 2015-08-06 15:17:34,321(550) org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) –> [main] Hibernate Validator not found: ignoring  
[INFO ] 2015-08-06 15:17:34,344(573) org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) –> [main] HV000001: Hibernate Validator 4.3.1.Final  
[DEBUG] 2015-08-06 15:17:34,354(583) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:34,356(585) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:34,358(587) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:34,363(592) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:34,433(662) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:17:34,433(662) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:34,433(662) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:34,433(662) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:34,434(663) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:34,438(667) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:17:34,438(667) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:17:34,444(673) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:17:34,444(673) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:17:34,444(673) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:17:34,450(679) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards  
[INFO ] 2015-08-06 15:17:34,451(680) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=0}  
[DEBUG] 2015-08-06 15:17:34,451(680) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:17:34,706(935) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards, Isolation Level: 4  
[INFO ] 2015-08-06 15:17:34,727(956) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:17:34,740(969) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:17:34,740(969) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:17:34,741(970) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:17:34,743(972) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:17:34,743(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:17:34,743(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:17:34,743(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:17:34,743(972) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:17:34,744(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:17:34,744(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:17:34,744(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:17:34,744(973) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:17:34,751(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:17:34,751(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:17:34,751(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:17:34,751(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:17:34,751(980) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:17:34,751(980) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:34,754(983) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:34,754(983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:17:34,754(983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:17:34,754(983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:17:34,754(983) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:17:34,755(984) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:17:34,756(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:17:34,756(985) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:17:34,761(990) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:17:34,762(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:17:34,762(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:17:34,762(991) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:17:34,763(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:17:34,763(992) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:17:34,783(1012) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:17:34,790(1019) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[DEBUG] 2015-08-06 15:17:34,791(1020) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:34,792(1021) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,793(1022) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:34,794(1023) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,794(1023) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,794(1023) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:34,794(1023) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:34,795(1024) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:34,796(1025) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:34,796(1025) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:34,796(1025) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:34,796(1025) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:34,796(1025) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:34,796(1025) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:34,797(1026) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:34,798(1027) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:34,799(1028) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:34,800(1029) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:34,801(1030) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:34,802(1031) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cc0a7f  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c52200  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b4b1e  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c0a9f9  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d72200  
[DEBUG] 2015-08-06 15:17:34,803(1032) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f9338f  
[DEBUG] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a80aea  
[DEBUG] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164b9b6  
[DEBUG] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:17:34,804(1033) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:17:34,805(1034) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:34,807(1036) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:17:34,807(1036) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
[DEBUG] 2015-08-06 15:17:34,822(1051) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[WARN ] 2015-08-06 15:17:34,826(1055) org.hibernate.id.UUIDHexGenerator.<init>(UUIDHexGenerator.java:58) –> [main] Using org.hibernate.shards.id.ShardedUUIDGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead  
[DEBUG] 2015-08-06 15:17:34,962(1191) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) –> [main] Static SQL for entity: cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity  
[DEBUG] 2015-08-06 15:17:34,962(1191) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) –> [main]  Version select: select ID from anno_contact where ID =?  
[DEBUG] 2015-08-06 15:17:34,962(1191) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) –> [main]  Snapshot select: select contactent_.ID, contactent_.EMAIL as EMAIL0_, contactent_.LOGINid as LOGINid0_, contactent_.NAME as NAME0_, contactent_.PASSWORD as PASSWORD0_ from anno_contact contactent_ where contactent_.ID=?  
[DEBUG] 2015-08-06 15:17:34,963(1192) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) –> [main]  Insert 0: insert into anno_contact (EMAIL, LOGINid, NAME, PASSWORD, ID) values (?, ?, ?, ?, ?)  
[DEBUG] 2015-08-06 15:17:34,963(1192) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) –> [main]  Update 0: update anno_contact set EMAIL=?, LOGINid=?, NAME=?, PASSWORD=? where ID=?  
[DEBUG] 2015-08-06 15:17:34,963(1192) org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) –> [main]  Delete 0: delete from anno_contact where ID=?  
[DEBUG] 2015-08-06 15:17:34,983(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [NONE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:34,983(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:34,983(1212) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:34,984(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [UPGRADE_NOWAIT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:34,984(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [FORCE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:34,984(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_READ]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? lock in share mode  
[DEBUG] 2015-08-06 15:17:34,984(1213) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_WRITE]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:34,985(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [PESSIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=? for update  
[DEBUG] 2015-08-06 15:17:34,985(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:34,985(1214) org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) –> [main] Static select for entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity [OPTIMISTIC_FORCE_INCREMENT]: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:34,991(1220) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_MERGE on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:34,992(1221) org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) –> [main] Static select for action ACTION_REFRESH on entity cn.cjp.demo.hibernate.shards.xml.entity.ContactEntity: select contactent0_.ID as ID0_0_, contactent0_.EMAIL as EMAIL0_0_, contactent0_.LOGINid as LOGINid0_0_, contactent0_.NAME as NAME0_0_, contactent0_.PASSWORD as PASSWORD0_0_ from anno_contact contactent0_ where contactent0_.ID=?  
[DEBUG] 2015-08-06 15:17:35,011(1240) org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) –> [main] initializing class SessionFactoryObjectFactory  
[DEBUG] 2015-08-06 15:17:35,012(1241) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) –> [main] registered: e1f88896-a78f-4901-922b-3fa8b65550ea (unnamed)  
[INFO ] 2015-08-06 15:17:35,012(1241) org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) –> [main] Not binding factory to JNDI, no JNDI name configured  
[DEBUG] 2015-08-06 15:17:35,012(1241) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) –> [main] instantiated session factory  
[INFO ] 2015-08-06 15:17:35,017(1246) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:155) –> [main] Running hbm2ddl schema update  
[INFO ] 2015-08-06 15:17:35,017(1246) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:167) –> [main] fetching database metadata  
[INFO ] 2015-08-06 15:17:35,018(1247) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:179) –> [main] updating schema  
[DEBUG] 2015-08-06 15:17:35,019(1248) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:35,019(1248) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:35,019(1248) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:35,019(1248) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:35,019(1248) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:35,019(1248) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:35,020(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:35,020(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:35,020(1249) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:35,021(1250) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:35,021(1250) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:35,021(1250) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:35,022(1251) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[INFO ] 2015-08-06 15:17:35,049(1278) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:65) –> [main] table found: hbshards.anno_contact  
[INFO ] 2015-08-06 15:17:35,050(1279) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:66) –> [main] columns: [id, email, name, loginid, password]  
[INFO ] 2015-08-06 15:17:35,050(1279) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:68) –> [main] foreign keys: []  
[INFO ] 2015-08-06 15:17:35,050(1279) org.hibernate.tool.hbm2ddl.TableMetadata.<init>(TableMetadata.java:69) –> [main] indexes: [primary]  
[DEBUG] 2015-08-06 15:17:35,050(1279) org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) –> [main] Setting dialect [org.hibernate.dialect.MySQLDialect]  
[INFO ] 2015-08-06 15:17:35,051(1280) org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:217) –> [main] schema update complete  
[DEBUG] 2015-08-06 15:17:35,054(1283) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) –> [main] Checking 0 named HQL queries  
[DEBUG] 2015-08-06 15:17:35,054(1283) org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) –> [main] Checking 0 named SQL queries  
[DEBUG] 2015-08-06 15:17:35,055(1284) org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) –> [main] Preparing to build session factory with filters : {}  
[DEBUG] 2015-08-06 15:17:35,055(1284) org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) –> [main] Processing hbm.xml files  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) –> [main] Process annotated classes  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) –> [main] processing fk mappings (*ToOne and JoinedSubclass)  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) –> [main] processing extends queue  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) –> [main] processing collection mappings  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) –> [main] processing native query and ResultSetMapping mappings  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) –> [main] processing association property references  
[DEBUG] 2015-08-06 15:17:35,056(1285) org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) –> [main] processing foreign key constraints  
[DEBUG] 2015-08-06 15:17:35,057(1286) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:35,058(1287) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:35,058(1287) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:35,059(1288) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:35,065(1294) org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) –> [main] Legacy Validator not present in classpath, ignoring event listener registration  
[DEBUG] 2015-08-06 15:17:35,066(1295) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:106) –> [main] Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver  
[DEBUG] 2015-08-06 15:17:35,066(1295) org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:117) –> [main] Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.  
[DEBUG] 2015-08-06 15:17:35,066(1295) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:184) –> [main] Trying to load META-INF/validation.xml for XML based Validator configuration.  
[DEBUG] 2015-08-06 15:17:35,070(1299) org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:187) –> [main] No META-INF/validation.xml found. Using annotation based configuration only.  
[DEBUG] 2015-08-06 15:17:35,072(1301) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) –> [main] Search not present in classpath, ignoring event listener registration.  
[INFO ] 2015-08-06 15:17:35,072(1301) org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) –> [main] Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.  
[INFO ] 2015-08-06 15:17:35,072(1301) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) –> [main] Using Hibernate built-in connection pool (not for production use!)  
[INFO ] 2015-08-06 15:17:35,072(1301) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) –> [main] Hibernate connection pool size: 10  
[INFO ] 2015-08-06 15:17:35,072(1301) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) –> [main] autocommit mode: false  
[INFO ] 2015-08-06 15:17:35,073(1302) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) –> [main] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost/hbshards2  
[INFO ] 2015-08-06 15:17:35,073(1302) org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) –> [main] connection properties: {user=root, password=root, shard_id=1}  
[DEBUG] 2015-08-06 15:17:35,073(1302) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) –> [main] opening new JDBC connection  
[DEBUG] 2015-08-06 15:17:35,090(1319) org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) –> [main] created connection to: jdbc:mysql://localhost/hbshards2, Isolation Level: 4  
[INFO ] 2015-08-06 15:17:35,090(1319) org.hibernate.dialect.Dialect.<init>(Dialect.java:135) –> [main] Using dialect: org.hibernate.dialect.MySQLDialect  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) –> [main] Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) –> [main] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:62) –> [main] Using default transaction strategy (direct JDBC transactions)  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) –> [main] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) –> [main] Automatic flush during beforeCompletion(): disabled  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) –> [main] Automatic session close at end of transaction: disabled  
[INFO ] 2015-08-06 15:17:35,091(1320) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) –> [main] JDBC batch size: 15  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) –> [main] JDBC batch updates for versioned data: disabled  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) –> [main] Scrollable result sets: enabled  
[DEBUG] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) –> [main] Wrap result sets: disabled  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) –> [main] JDBC3 getGeneratedKeys(): enabled  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) –> [main] Connection release mode: auto  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) –> [main] Maximum outer join fetch depth: 2  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) –> [main] Default batch fetch size: 1  
[INFO ] 2015-08-06 15:17:35,092(1321) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) –> [main] Generate SQL with comments: disabled  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) –> [main] Order SQL updates by primary key: disabled  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) –> [main] Order SQL inserts for batching: disabled  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) –> [main] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) –> [main] Using ASTQueryTranslatorFactory  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) –> [main] Query language substitutions: {}  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) –> [main] JPA-QL strict compliance: disabled  
[INFO ] 2015-08-06 15:17:35,093(1322) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) –> [main] Second-level cache: enabled  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) –> [main] Query cache: disabled  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) –> [main] Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) –> [main] Optimize cache for minimal puts: disabled  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) –> [main] Structured second-level cache entries: disabled  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:314) –> [main] Echoing all SQL to stdout  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) –> [main] Statistics: disabled  
[INFO ] 2015-08-06 15:17:35,094(1323) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) –> [main] Deleted entity synthetic identifier rollback: disabled  
[INFO ] 2015-08-06 15:17:35,095(1324) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) –> [main] Default entity-mode: pojo  
[INFO ] 2015-08-06 15:17:35,095(1324) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) –> [main] Named query checking : enabled  
[INFO ] 2015-08-06 15:17:35,095(1324) org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) –> [main] Check Nullability in Core (should be disabled when Bean Validation is on): disabled  
[INFO ] 2015-08-06 15:17:35,099(1328) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) –> [main] building session factory  
[DEBUG] 2015-08-06 15:17:35,099(1328) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) –> [main] Statistics initialized [enabled=false]}  
[WARN ] 2015-08-06 15:17:35,099(1328) org.hibernate.type.TypeFactory$TypeScopeImpl.injectSessionFactory(TypeFactory.java:69) –> [main] Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@d61aef after already scoped org.hibernate.impl.SessionFactoryImpl@7a36a2  
[DEBUG] 2015-08-06 15:17:35,099(1328) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:35,100(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:35,100(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1922221  
[DEBUG] 2015-08-06 15:17:35,100(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c832d2  
[DEBUG] 2015-08-06 15:17:35,100(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration true_false -> org.hibernate.type.TrueFalseType@166a22b  
[DEBUG] 2015-08-06 15:17:35,100(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration yes_no -> org.hibernate.type.YesNoType@47393f  
[DEBUG] 2015-08-06 15:17:35,100(1329) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:35,101(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:35,101(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13a317a  
[DEBUG] 2015-08-06 15:17:35,101(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:35,101(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:35,101(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a8cd1  
[DEBUG] 2015-08-06 15:17:35,101(1330) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9b9ca  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration int -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce5b1c  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:35,102(1331) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Long -> org.hibernate.type.LongType@d08633  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1543c88  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:35,103(1332) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1592174  
[DEBUG] 2015-08-06 15:17:35,104(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:35,104(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3aa07  
[DEBUG] 2015-08-06 15:17:35,104(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:35,104(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a7f9  
[DEBUG] 2015-08-06 15:17:35,104(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration string -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:35,104(1333) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.String -> org.hibernate.type.StringType@1a33d48  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration url -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4983  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e13d52  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@166aa18  
[DEBUG] 2015-08-06 15:17:35,105(1334) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:35,106(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:35,106(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@107ebe1  
[DEBUG] 2015-08-06 15:17:35,106(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1968e23  
[DEBUG] 2015-08-06 15:17:35,106(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:35,106(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:35,106(1335) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78a212  
[DEBUG] 2015-08-06 15:17:35,107(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641e9a  
[DEBUG] 2015-08-06 15:17:35,107(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:35,107(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10e3293  
[DEBUG] 2015-08-06 15:17:35,107(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:35,107(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27e353  
[DEBUG] 2015-08-06 15:17:35,107(1336) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration timezone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10f6d3  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10e790c  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c9a690  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13ad085  
[DEBUG] 2015-08-06 15:17:35,108(1337) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1faba46  
[DEBUG] 2015-08-06 15:17:35,109(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration binary -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:35,109(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration byte[] -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:35,109(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [B -> org.hibernate.type.BinaryType@1c74f37  
[DEBUG] 2015-08-06 15:17:35,109(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:35,109(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:35,109(1338) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79717e  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration image -> org.hibernate.type.ImageType@89cf1e  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration char[] -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [C -> org.hibernate.type.CharArrayType@c88440  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:35,110(1339) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cfec48  
[DEBUG] 2015-08-06 15:17:35,111(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration text -> org.hibernate.type.TextType@10da5eb  
[DEBUG] 2015-08-06 15:17:35,111(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:35,111(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:35,111(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:35,111(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:35,111(1340) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration serializable -> org.hibernate.type.SerializableType@4cee32  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1394894  
[DEBUG] 2015-08-06 15:17:35,112(1341) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@abe654  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19ea173  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@179a49f  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1270107  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b48392  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29ea31  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ce663c  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19a0feb  
[DEBUG] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:17:35,113(1342) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16477d9  
[INFO ] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12bb7e0  
[DEBUG] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@33788d  
[INFO ] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@ca0115  
[DEBUG] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f864fe  
[INFO ] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@2a15cd  
[DEBUG] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1cda59b  
[INFO ] 2015-08-06 15:17:35,114(1343) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@f1bb78  
[DEBUG] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1ae9aaa  
[INFO ] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@e45076  
[DEBUG] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d9896e  
[INFO ] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@12a3793  
[DEBUG] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) –> [main] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c17f7  
[INFO ] 2015-08-06 15:17:35,115(1344) org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) –> [main] Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4aeb52  
[DEBUG] 2015-08-06 15:17:35,116(1345) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) –> [main] Session factory constructed with filter configurations : {}  
[DEBUG] 2015-08-06 15:17:35,116(1345) org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) –> [main] instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost/hbshards2, sun.management.compiler=HotSpot Client Compiler, os.name=Windows 7, hbm2ddl.auto=update, sun.boot.class.path=D:\__JAVA__\jre6.0\lib\resources.jar;D:\__JAVA__\jre6.0\lib\rt.jar;D:\__JAVA__\jre6.0\lib\sunrsasign.jar;D:\__JAVA__\jre6.0\lib\jsse.jar;D:\__JAVA__\jre6.0\lib\jce.jar;D:\__JAVA__\jre6.0\lib\charsets.jar;D:\__JAVA__\jre6.0\lib\modules\jdk.boot.jar;D:\__JAVA__\jre6.0\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b07, user.name=Administrator, connection.driver_class=com.mysql.jdbc.Driver, user.language=zh, sun.boot.library.path=D:\__JAVA__\jre6.0\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.6.0_27, user.timezone=Asia/Shanghai, sun.arch.data.model=32, java.endorsed.dirs=D:\__JAVA__\jre6.0\lib\endorsed, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=CN, connection.url=jdbc:mysql://localhost/hbshards, java.home=D:\__JAVA__\jre6.0, java.vm.info=mixed mode, os.version=6.1, path.separator=;, connection.password=root, java.vm.version=20.2-b06, hibernate.connection.password=root, user.variant=, hibernate.connection.shard_id=1, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, hibernate.check_nullability=false, hibernate.shard.enable_cross_shard_relationship_checks=false, user.home=C:\Users\Administrator, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=update, java.library.path=D:\__JAVA__\jre6.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/__JAVA__/jdk1.7/bin/../jre/bin/server;D:/__JAVA__/jdk1.7/bin/../jre/bin;D:/__JAVA__/jdk1.7/bin/../jre/lib/amd64;D:\other\other\Sublime Text\SublimeText.exe;D:\other\other\MarkdownPad 2\MarkdownPad2.exe;D:\other\other\MongoDB\Server\3.0/bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;D:\__JAVA__\hadoop-2.7.0\hadoop-2.7.0\bin;C:\Program Files (x86)\Common Files\NetSarang;D:\__JAVA__\mysql-5.6\bin;D:\__JAVA__\jdk1.7\bin;D:\__JAVA__\jdk1.7\lib;D:\__JAVA__\jdk1.7\jre\lib;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\other\other\TortoiseSVN\bin;D:\other\other\Rational\common;D:\__JAVA__\__ENV__\eclipse;;., java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=cn.cjp.demo.hibernate.shards.annotation.Main, java.class.path=D:\other\Github\OpenDemo\demo-hibernate-shards\target\classes;D:\other\Github\OpenDemo\demo-hibernate-shards\lib\hibernate-shards.jar;D:\--maven--\repo\javax\servlet\jstl\1.1.2\jstl-1.1.2.jar;D:\--maven--\repo\taglibs\standard\1.1.2\standard-1.1.2.jar;D:\--maven--\repo\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;D:\--maven--\repo\org\springframework\spring-test\3.2.9.RELEASE\spring-test-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-core\3.2.9.RELEASE\spring-core-3.2.9.RELEASE.jar;D:\--maven--\repo\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;D:\--maven--\repo\com\thoughtworks\xstream\xstream\1.4.3\xstream-1.4.3.jar;D:\--maven--\repo\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;D:\--maven--\repo\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;D:\--maven--\repo\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;D:\--maven--\repo\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;D:\--maven--\repo\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;D:\--maven--\repo\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;D:\--maven--\repo\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\--maven--\repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\--maven--\repo\org\json\json\20080701\json-20080701.jar;D:\--maven--\repo\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;D:\--maven--\repo\mysql\mysql-connector-java\5.1.22\mysql-connector-java-5.1.22.jar;D:\--maven--\repo\org\aspectj\aspectjweaver\1.7.4\aspectjweaver-1.7.4.jar;D:\--maven--\repo\org\springframework\spring-web\3.2.9.RELEASE\spring-web-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-aop\3.2.9.RELEASE\spring-aop-3.2.9.RELEASE.jar;D:\--maven--\repo\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\--maven--\repo\org\springframework\spring-beans\3.2.9.RELEASE\spring-beans-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-context\3.2.9.RELEASE\spring-context-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-expression\3.2.9.RELEASE\spring-expression-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-orm\3.2.9.RELEASE\spring-orm-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-jdbc\3.2.9.RELEASE\spring-jdbc-3.2.9.RELEASE.jar;D:\--maven--\repo\org\springframework\spring-tx\3.2.9.RELEASE\spring-tx-3.2.9.RELEASE.jar;D:\--maven--\repo\org\hibernate\hibernate-entitymanager\4.3.4.Final\hibernate-entitymanager-4.3.4.Final.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;D:\--maven--\repo\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;D:\--maven--\repo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\--maven--\repo\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;D:\--maven--\repo\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\--maven--\repo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;D:\--maven--\repo\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;D:\--maven--\repo\org\hibernate\hibernate-validator\4.3.1.Final\hibernate-validator-4.3.1.Final.jar;D:\--maven--\repo\org\hibernate\hibernate-core\3.6.6.Final\hibernate-core-3.6.6.Final.jar;D:\--maven--\repo\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\--maven--\repo\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\--maven--\repo\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\--maven--\repo\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\--maven--\repo\javax\transaction\jta\1.1\jta-1.1.jar;D:\--maven--\repo\org\hibernate\hibernate-annotations\3.5.6-Final\hibernate-annotations-3.5.6-Final.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, connection.pool_size=10, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=D:\__JAVA__\jre6.0\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\other\Github\OpenDemo\demo-hibernate-shards, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=10, hibernate.show_sql=true}  
